{"version":3,"sources":["../webpack/bootstrap","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-nan/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/abs/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-pinf/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/ln/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/exp/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/sqrt/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-ninf/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/get-high-word/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/native-class/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/floor/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/min/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/max/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/log1p/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-eps/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-integer/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-pi/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/tools/evalpoly/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-exponent-bias/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-smallest-normal/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-max-ln/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-own-property/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/ldexp/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-infinite/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/uint32/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/float64/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-little-endian/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-number/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/expm1/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-e/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-max/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-min-ln/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/trunc/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/set-high-word/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/sin/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/set-low-word/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-gamma-lanczos-g/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfcinv/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-tostringtag-support/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-function/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-nonnegative-integer/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/round/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/constant-function/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-integer/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-sqrt-two-pi/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float32-smallest-normal/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/signum/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float32-max/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/ctor/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/copysign/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/to-words/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/from-words/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/cos/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/betainc/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/asin/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-odd/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-half-pi/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma-delta-ratio/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/tools/sum-series/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/ibeta_power_terms.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-sqrt-two/lib/index.js","../node_modules/multtest/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/define-property/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-object/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-array/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/native-class/lib/tostring.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-boolean/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-boolean/lib/primitive.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-boolean/lib/object.js","../node_modules/webpack/buildin/global.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/constructor-name/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/array/max-array-length/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-negative-zero/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/hypergeometric/pmf/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/factorialln/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-cos/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-sin/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/rempio2/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/hypergeometric/cdf/lib/sum.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-number/lib/primitive.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-number/lib/object.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-nonnegative-integer/lib/primitive.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-integer/lib/primitive.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-integer/lib/integer.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-integer/lib/object.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-nonnegative-integer/lib/object.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-fourth-pi/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/beta/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/uint32/base/to-int32/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/factorial/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfc/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/tools/evalpoly/lib/evalpoly.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-two-pi/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-generator-support/lib/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/tools/continued-fraction/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/root_finder.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/newton_raphson.js","../node_modules/debug/src/browser.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/lambdaeta.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-plain-object/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-string/lib/primitive.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-string/lib/object.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-nan/lib/primitive.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-nan/lib/object.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-positive-integer/lib/primitive.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-positive-integer/lib/object.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/to-iterator/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/iter/mean/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/hypergeometric/cdf/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/ttest2/lib/index.js","../node_modules/@greenelab/hclust/build/hclust.min.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/to-iterator/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-define-property-support/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-define-property-support/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-define-property-support/lib/define_property.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/define-property/lib/builtin.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/define-property/lib/polyfill.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-property/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-property/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-object/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-array/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-tostringtag-support/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-symbol-support/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-symbol-support/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/native-class/lib/native_class.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/native-class/lib/polyfill.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-own-property/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/native-class/lib/tostringtag.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-function/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/type-of/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/type-of/lib/check.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/type-of/lib/fixtures/re.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/type-of/lib/fixtures/nodelist.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/global/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/global/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-boolean/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-boolean/lib/try2serialize.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-boolean/lib/tostring.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/global/lib/codegen.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/global/lib/self.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/global/lib/window.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/global/lib/global.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/type-of/lib/fixtures/typedarray.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/type-of/lib/typeof.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/constructor-name/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/regexp/function-name/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-buffer/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-buffer/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-object-like/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/tools/array-function/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/tools/array-function/lib/arrayfcn.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-object-like/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/type-of/lib/polyfill.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-array-like-object/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-array-like-object/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-integer/lib/is_integer.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/floor/lib/floor.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/symbol/iterator/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/symbol/iterator/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-iterator-symbol-support/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-iterator-symbol-support/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/iter/mean/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-iterator-like/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-iterator-like/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/incr/mean/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/incr/mean/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/hypergeometric/cdf/lib/cdf.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-nonnegative-integer/lib/is_nonnegative_integer.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-nan/lib/is_nan.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/trunc/lib/trunc.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/ceil/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/ceil/lib/ceil.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/max/lib/max.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-positive-zero/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-positive-zero/lib/is_positive_zero.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/ctor/lib/number.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/min/lib/min.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-negative-zero/lib/is_negative_zero.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/hypergeometric/pmf/lib/pmf.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/exp/lib/exp.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/exp/lib/expmulti.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/ldexp/lib/ldexp.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-max-base2-exponent/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-max-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-min-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-infinite/lib/is_infinite.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/copysign/lib/copysign.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/to-words/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/to-words/lib/to_words.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-uint32array-support/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-uint32array-support/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-uint32array/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-uint32array/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/uint32-max/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-uint32array-support/lib/uint32array.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/uint32/lib/uint32array.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/uint32/lib/polyfill.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-float64array-support/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-float64array-support/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-float64array/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-float64array/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-float64array-support/lib/float64array.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/float64/lib/float64array.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/float64/lib/polyfill.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/to-words/lib/indices.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-little-endian/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-little-endian/lib/ctors.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/uint8/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-uint8array-support/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-uint8array-support/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-uint8array/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-uint8array/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/uint8-max/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-uint8array-support/lib/uint8array.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/uint8/lib/uint8array.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/uint8/lib/polyfill.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/uint16/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-uint16array-support/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-uint16array-support/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-uint16array/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-uint16array/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/uint16-max/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-uint16array-support/lib/uint16array.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/uint16/lib/uint16array.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/array/uint16/lib/polyfill.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/get-high-word/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/get-high-word/lib/high.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/from-words/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/from-words/lib/indices.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/normalize/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/normalize/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/normalize/lib/normalize.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/abs/lib/abs.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/exponent/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/exponent/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-high-word-exponent-mask/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/exp/lib/polyval_p.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/factorialln/lib/factorialln.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-negative-integer/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-negative-integer/lib/is_negative_integer.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/gammaln.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/ln/lib/ln.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/set-high-word/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/set-high-word/lib/high.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/ln/lib/polyval_p.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/ln/lib/polyval_q.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/sinpi/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/sinpi/lib/sinpi.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/cos/lib/cos.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-cos/lib/kernel_cos.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-cos/lib/polyval_c13.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-cos/lib/polyval_c46.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-sin/lib/kernel_sin.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/rempio2/lib/rempio2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/get-low-word/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/get-low-word/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/get-low-word/lib/low.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/rempio2/lib/kernel_rempio2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/rempio2/lib/rempio2_medium.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/round/lib/round.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/sin/lib/sin.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/polyval_a1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/polyval_a2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/polyval_r.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/polyval_s.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/polyval_t1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/polyval_t2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/polyval_t3.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/polyval_u.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/polyval_v.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaln/lib/polyval_w.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/hypergeometric/pmf/lib/factory.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/constant-function/lib/constant_function.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/hypergeometric/cdf/lib/factory.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/ttest2/lib/ttest2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-number-array/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/tools/array-like-function/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/tools/array-like-function/lib/arraylikefcn.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-array-like/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-array-like/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-number/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-number/lib/try2serialize.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-number/lib/tostring.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-typed-array-like/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-typed-array-like/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-nonnegative-integer/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-nonnegative-integer/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-integer/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/array/max-typed-array-length/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/define-read-only-property/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/define-read-only-property/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/t/cdf/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/t/cdf/lib/cdf.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/betainc/lib/betainc.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/kernel_betainc.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/expm1/lib/expm1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-half-ln-two/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/expm1/lib/polyval_q.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/log1p/lib/log1p.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/log1p/lib/polyval_lp.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/asin/lib/asin.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/sqrt/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/asin/lib/rational_pq.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/asin/lib/rational_rs.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/beta/lib/beta.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/pow.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-odd/lib/is_odd.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-even/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/assert/is-even/lib/is_even.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/set-low-word/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/float64/base/set-low-word/lib/low.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/number/uint32/base/to-int32/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/x_is_zero.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/y_is_huge.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/y_is_infinite.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/log2ax.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/polyval_l.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/logx.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/polyval_w.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/pow2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-ln-two/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/pow/lib/polyval_p.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/beta/lib/lanczos_sum_expg_scaled.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/int32-max/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/beta_small_b_large_a_series.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma-delta-ratio/lib/gamma_delta_ratio.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma/lib/gamma.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma/lib/stirling_approximation.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma/lib/polyval_s.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma/lib/small_approximation.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-eulergamma/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma/lib/rational_pq.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/factorial/lib/factorial.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma-delta-ratio/lib/gamma_delta_ratio_lanczos.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma-lanczos-sum/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma-lanczos-sum/lib/gamma_lanczos_sum.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma-lanczos-sum/lib/rational_pq.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/gammainc.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-sqrt-eps/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/finite_gamma_q.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/finite_half_gamma_q.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfc/lib/erfc.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfc/lib/polyval_pp.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfc/lib/polyval_qq.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfc/lib/polyval_pa.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfc/lib/polyval_qa.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfc/lib/polyval_ra.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfc/lib/polyval_sa.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfc/lib/polyval_rb.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfc/lib/polyval_sb.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/full_igamma_prefix.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/igamma_temme_large.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/tools/evalpoly/lib/factory.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c0.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c3.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c4.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c5.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c6.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c7.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/polyval_c8.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/lower_gamma_series.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/has-generator-support/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/eval/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/tools/sum-series/lib/generators.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/tools/sum-series/lib/basic.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/lower_incomplete_gamma_series.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/regularised_gamma_prefix.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled/lib/gamma_lanczos_sum_expg_scaled.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled/lib/rational_pq.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/tgamma_small_upper_part.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/powm1/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/powm1/lib/powm1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma1pm1/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma1pm1/lib/gamma1pm1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma1pm1/lib/lgamma_small_imp.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma1pm1/lib/rational_p1q1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma1pm1/lib/rational_p2q2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gamma1pm1/lib/rational_p3q3.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/small_gamma2_series.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/upper_gamma_fraction.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/tools/continued-fraction/lib/generators.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/tools/continued-fraction/lib/basic.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammainc/lib/upper_incomplete_gamma_fract.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/full_igamma_prefix.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/regularized_gamma_prefix.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/rising_factorial_ratio.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/maxabs/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/maxabs/lib/maxabs.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/minabs/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/minabs/lib/minabs.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/ibeta_fraction2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/binomial_ccdf.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/binomcoef/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/binomcoef/lib/binomcoef.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/ibeta_a_step.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betainc/lib/ibeta_series.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/t/cdf/lib/factory.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/t/quantile/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/t/quantile/lib/quantile.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/kernel_betaincinv.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/find_ibeta_inv_from_t_dist.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/inverse_students_t.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfcinv/lib/erfcinv.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfcinv/lib/rational_p1q1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfcinv/lib/rational_p2q2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfcinv/lib/rational_p3q3.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfcinv/lib/rational_p4q4.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/erfcinv/lib/rational_p5q5.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/acos/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/acos/lib/acos.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/inverse_students_t_body_series.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co14.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co15.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co16.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co17.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co18.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co19.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co20.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co21.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co22.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/inverse_students_t_tail_series.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/inverse_students_t_hill.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/temme1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/temme2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/signum/lib/signum.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co3.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co4.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co5.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co6.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co7.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co8.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co9.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co10.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co11.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co12.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/polyval_co13.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/temme3.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/gammaincinv.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/compute.js","../node_modules/process/browser.js","../node_modules/debug/src/debug.js","../node_modules/debug/node_modules/ms/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/higher_newton.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/polyval_ak1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/polyval_ak2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/gamstar.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/stirling.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-ln-sqrt-two-pi/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/chepolsum.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/polyval_c.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/polyval_d.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/eps1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak0bk0.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/eps2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak1bk1.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak2bk2.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak3bk3.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/eps3.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak4bk4.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak5bk5.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak6bk6.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak7bk7.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/gammaincinv/lib/rational_ak8bk8.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-smallest-subnormal/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/halley_iterate.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/kernel-betaincinv/lib/ibeta_roots.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/base/dists/t/quantile/lib/factory.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/ttest2/lib/validate.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-plain-object/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/get-prototype-of/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/get-prototype-of/lib/get_prototype_of.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/get-prototype-of/lib/detect.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/get-prototype-of/lib/native.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/get-prototype-of/lib/polyfill.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/utils/get-prototype-of/lib/proto.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-string/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-string/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-string/lib/try2valueof.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-string/lib/valueof.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-nan/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-nan/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/ttest2/lib/variance.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/ttest2/lib/print.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-positive-integer/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/assert/is-positive-integer/lib/main.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/roundn/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/math/base/special/roundn/lib/roundn.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-max-safe-integer/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-max-base10-exponent/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-min-base10-exponent/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/constants/math/float64-min-base10-exponent-subnormal/lib/index.js","../node_modules/@stdlib/stdlib/lib/node_modules/@stdlib/stats/ttest2/lib/mean.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/underscore/underscore.js","../node_modules/webpack/buildin/module.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","util/types.js","util/math.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isnan","require","abs","FLOAT64_PINF","Number","POSITIVE_INFINITY","ln","exp","sqrt","pow","FLOAT64_NINF","NEGATIVE_INFINITY","setNonEnumerableReadOnly","getHighWord","nativeClass","hasToStringTag","builtin","polyfill","floor","min","max","log1p","gamma","isInteger","setReadOnly","evalpoly","hasOwnProp","ldexp","isInfinite","ctor","hasUint32ArraySupport","hasFloat64ArraySupport","IS_LITTLE_ENDIAN","gammaln","isNumber","isPrimitive","isObject","expm1","trunc","setHighWord","sin","setLowWord","erfcinv","hasToStringTagSupport","isFunction","isNonNegativeInteger","round","constantFunction","gammaLanczosSumExpGScaled","signum","copysign","toWords","fromWords","cos","betainc","asin","isOdd","gammaDeltaRatio","sumSeries","hasGeneratorSupport","generator","basic","lanczosSumExpGScaled","maxabs","minabs","MAX_LN","MIN_LN","G","E","a","b","x","y","normalized","result","smallA","ratio","agh","bgh","cgh","l1","l2","l3","p1","b1","b2","NaN","_","namespace","bonferroni","pvalues","numHypotheses","length","fdr","indices","clone","k","v","pvalues_sorted","sort","Math","j","bY","q","adjustSignificanceLevel","alpha","alpha_star","hasDefinePropertySupport","isArray","toStr","toString","isBoolean","test","FLG","Boolean","g","this","Function","e","window","constructorName","isNegativeZero","pmf","factorialln","kernelCos","kernelSin","rempio2","arr","len","isInt","PINF","NINF","valueOf","kernelBetainc","beta","uint32ToInt32","factorial","gammainc","erfc","unsupportedIterableToArray","iterator","Array","F","done","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","arrayLikeToArray","minLen","slice","constructor","from","arr2","continuedFraction","kernelBetaincinv","BIG","sign","MAX_VALUE","fun","guess","digits","maxIter","f0last","delta1","delta2","factor","count","delta","res","f0","f1","load","storage","debug","process","DEBUG","log","console","apply","arguments","formatArgs","args","useColors","humanize","diff","color","splice","index","lastC","replace","match","save","namespaces","removeItem","type","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","toLowerCase","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","JSON","stringify","message","enable","polyvalAK1","polyvalAK2","AK","eta","L2","L3","L4","L5","la","L","isPlainObject","String","isNan","main","cdf","ttest2","clusterData","averageDistance","euclideanDistance","size","sum","setA","setB","distances","distance","updateProgress","stepNumber","stepProgress","onProgress","progress","WorkerGlobalScope","self","postMessage","logProgress","toFixed","data","linkage","map","datum","otherDatum","clusters","height","indexes","clustersGivenK","iteration","push","cluster","nearestDistance","Infinity","nearestRow","nearestCol","row","col","newCluster","children","reverse","order","isArrayLikeObject","iteratorSymbol","array2iterator","src","thisArg","iter","fcn","next1","next2","end","factory","obj","prop","bool","hasProperty","objectProtoype","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","descriptor","hasValue","hasGet","hasSet","__proto__","Error","set","hasProp","hasSymbols","hasSymbolSupport","isOwn","tag","out","has","toStrTag","typeOf","usePolyfill","RE","nodeList","typedarray","root","getGlobal","childNodes","getThis","Self","Win","Global","codegen","global","Int8Array","ctorName","isBuffer","exec","isObjectLike","_isBuffer","arrayfun","arrayfcn","predicate","MAX_LENGTH","IteratorSymbol","hasIteratorSymbolSupport","isIteratorLike","incrmean","acc","isIterator","mu","N","K","denom","probs","num","ret","ceil","isPositiveZero","fln","ldenom","lnum","maxs","mins","expmulti","polyvalP","hi","lo","BIAS","MAX_EXPONENT","MAX_SUBNORMAL_EXPONENT","MIN_SUBNORMAL_EXPONENT","normalize","floatExp","FRAC","WORDS","frac","high","hx","hy","Uint32Array","Float64Array","FLOAT64_VIEW","UINT32_VIEW","buffer","HIGH","LOW","isUint32Array","UINT32_MAX","GlobalUint32Array","hasUint32Array","isFloat64Array","GlobalFloat64Array","hasFloat64Array","ctors","uint16view","isLittleEndian","Uint8Array","hasUint8ArraySupport","isUint8Array","UINT8_MAX","GlobalUint8Array","hasUint8Array","hasUint16ArraySupport","isUint16Array","UINT16_MAX","GlobalUint16Array","hasUint16Array","Uint16Array","low","FLOAT64_SMALLEST_NORMAL","exponent","EXP_MASK","isNegativeInteger","sinpi","PI","polyvalA1","polyvalA2","polyvalR","polyvalS","polyvalT1","polyvalT2","polyvalT3","polyvalU","polyvalV","polyvalW","YMIN","TC","isNegative","nadj","flg","w","z","polyvalQ","LN2_HI","LN2_LO","hfsq","t1","R","ar","ix","polyval13","polyval46","hz","S1","getLowWord","rempio2Kernel","rempio2Medium","PIO2_1","PIO2_1T","TWO_PIO2_1T","FOUR_PIO2_1T","TX","TY","e0","nx","IPIO2","PIO2","TWON24","zero","Q","FQ","IQ","fw","jv","jx","q0","compute","jz","jk","carry","ih","jp","Y","isNumberArray","primitives","isTypedArrayLike","tCDF","tQuantile","validate","variance","print","mean","options","stderr","xmean","ymean","vars","cint","opts","pval","xvar","yvar","stat","sdx","sdy","alt","ny","df","difference","RangeError","alternative","arraylikefcn","isArrayLike","MAX","BYTES_PER_ELEMENT","byteOffset","byteLength","x2","regularized","upper","invert","MAX_FLOAT64","MIN_FLOAT64","MAX_INT32","HALF_PI","betaSmallBLargeASeries","risingFactorialRatio","ibetaPowerTerms","ibetaFraction2","binomialCCDF","ibetaAStep","ibetaSeries","ONE_OVER_PI","prefix","fract","bbar","div","tmp","FLOAT64_EXPONENT_BIAS","HALF_LN2","polyval","halfX","r1","hu","u","PIO4","ratevalPQ","ratevalRS","sgn","zz","s1","s2","EPSILON","ambh","xIsZero","yIsHuge","yIsInfinite","log2ax","logx","pow2","HUGE","TINY","LOG_WORKSPACE","ahx","ahy","ax","sx","sy","y1","hp","lp","isEven","polyvalL","BP","DP_HI","DP_LO","ss","hs","ls","ht","bp","dp","lz","t2","LN2","MIN_VALUE","fullIGammaPrefix","regularizedGammaPrefix","s0","mult","tmp1","tnp1","b2n","bm1","lx2","lxp","mbn","lx","t4","h","gammaDeltaRatioLanczos","idelta","iz","stirlingApprox","smallApprox","rateval","SQRT_TWO_PI","EULER","FACTORIALS","lanczosSum","zgh","gammaLanczosSum","SQRT_EPSILON","FLOAT64_MAX","finiteGammaQ","finiteHalfGammaQ","igammaTemmeLarge","lowerGammaSeries","regularisedGammaPrefix","tgammaSmallUpperPart","upperGammaFraction","optimisedInvert","evalMethod","initValue","isHalfInt","useTemme","sigma","fa","term","polyvalPP","polyvalQQ","polyvalPA","polyvalQA","polyvalRA","polyvalSA","polyvalRB","polyvalSB","ERX","alz","TWO_PI","polyvalC0","polyvalC1","polyvalC2","polyvalC3","polyvalC4","polyvalC5","polyvalC6","polyvalC7","polyvalC8","workspace","phi","lowerIncompleteGammaSeries","initialValue","evil","eval","EPS","tolerance","nextTerm","counter","maxTerms","a1","z1","amza","amz","sq","powm1","gamma1pm1","smallGamma2Series","pgam","lgammaSmallImp","rateval1","rateval2","rateval3","zm1","zm2","apn","upperIncompleteGammaFract","FLOAT32_SMALLEST_NORMAL","continuedFractionA","gen","isgenerator","a0","C","D","continuedFractionB","eps","keep","nargs","OPTS","aN","bN","ibetaFraction2t","binomcoef","startTerm","start","poch","ibetaSeriesT","quantile","prob","xs","FLOAT64_MIN_NORM","findIBetaInvFromTDist","temme1","temme2","temme3","halleyIterate","ibetaRoots","terms","lambda","lower","theta","roots","maxv","minv","bet","ppa","xs2","ap1","fs","xg","yp","a2","a3","inverseStudentsT","py","acos","SQRT2","inverseStudentsTBodySeries","inverseStudentsTTailSeries","inverseStudentsTHill","rootAlpha","p0","p2","p4","rationalFcnR1","rationalFcnR2","rationalFcnR3","rationalFcnR4","rationalFcnR5","polyval1","polyval2","polyval3","polyval4","polyval5","polyval6","polyval7","polyval8","polyval9","idf","np2","np4","np6","rn","ndf","eta0","eta2","B2","B3","B","temmeRootFinder","newtonRaphsonIterate","polyval10","polyval11","polyval12","sc7","sc6","sc5","sc4","sc3","sc2","sc","lu","c2","gammaincinv","SMALLEST_SUBNORMAL","cross","w12","w13","w14","e1","e2","e3","d2","d3","w2","w3","w4","w5","w6","w7","w8","w9","w1","FLOAT32_SMALLEST","logger","MAX_FLOAT32","higherNewton","lambdaeta","gamstar","eps1","eps2","eps3","ONEO3","ONEO6","CK","ap1inv","invfp","lgama","pcase","porq","ainv","logr","ap22","ap14","ap13","ap12","vgam","xini","ap2","ap3","p5","x0","b3","p3","a4","xr","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","prevTime","createDebug","enabled","curr","Date","ms","prev","coerce","unshift","format","formatter","val","logFn","hash","charCodeAt","selectColor","init","stack","disable","names","skips","split","substr","plural","str","parseFloat","parse","isNaN","long","fmtShort","dlnr","ck2","FLOAT32_MAX","stirling","LN_SQRT_TWO_PI","SMALLEST_FLOAT32","chepolsum","polyvalC","polyvalD","A","tt","u0","u1","u2","lnmeta","rational1","rational2","rational3","rational4","rational5","minimum","maximum","convergence","outOfBounds","f0Last","f2","target","isString","getPrototypeOf","objectPrototype","proto","isPrototypeOf","ownProps","getPrototype","getProto","M2","isPositiveInteger","roundn","decision","dgts","method","nullValue","pValue","statistic","ci","rejected","MAX_SAFE_INTEGER","MAX_EXP","MIN_EXP","MIN_EXP_SUBNORMAL","MAX_INT","arrayWithoutHoles","iterableToArray","nonIterableSpread","previousUnderscore","ArrayProto","ObjProto","SymbolProto","nativeIsArray","nativeKeys","keys","nativeCreate","Ctor","_wrapped","nodeType","VERSION","builtinIteratee","optimizeCb","func","context","argCount","collection","accumulator","cb","iteratee","identity","matcher","restArguments","startIndex","rest","baseCreate","shallowProperty","path","deepGet","MAX_ARRAY_INDEX","getLength","each","forEach","collect","results","currentKey","createReduce","reducer","memo","initial","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","list","reject","negate","every","all","some","any","contains","includes","include","item","fromIndex","guard","values","indexOf","invoke","contextPath","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","sample","random","last","rand","temp","sortBy","criteria","left","right","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","toArray","pass","first","head","take","tail","drop","compact","flatten","input","shallow","strict","output","idx","isArguments","without","otherArrays","uniq","unique","isSorted","seen","union","arrays","intersection","argsLength","unzip","zip","createPredicateIndexFinder","findLastIndex","sortedIndex","mid","createIndexFinder","predicateFind","lastIndexOf","range","stop","chunk","executeBound","sourceFunc","boundFunc","callingContext","bound","callArgs","partial","boundArgs","placeholder","position","bindAll","memoize","hasher","cache","address","delay","wait","defer","throttle","previous","later","leading","now","throttled","remaining","trailing","cancel","debounce","immediate","debounced","callNow","wrap","wrapper","compose","after","times","before","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","allKeys","mapObject","pairs","functions","methods","createAssigner","keysFunc","defaults","source","extend","extendOwn","assign","eq","deepEq","keyInObj","pick","omit","props","tap","interceptor","isMatch","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isElement","nodelist","isFinite","isSymbol","isNull","isUndefined","noConflict","constant","propertyOf","matches","accum","getTime","escapeMap","unescapeMap","createEscaper","escaper","join","testRegexp","replaceRegexp","string","escape","unescape","fallback","idCounter","uniqueId","id","templateSettings","evaluate","interpolate","noMatch","escapes","escapeRegExp","escapeChar","template","text","settings","oldSettings","render","offset","variable","argument","chain","instance","_chain","chainResult","mixin","toJSON","webpackPolyfill","deprecate","paths","_defineProperty","configurable","writable","_arrayLikeToArray","_unsupportedIterableToArray","_toConsumableArray","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","array1","array2","_ref","selectedGenes","geneParticipations","geneList","signatureList","enrichedSignatures","signature","participatingGenes","participation","gene","weight","selectedParticipatingGenes","_ref2","selected","_ref3","pValues","correctedPValues","enrichedSignature","_ref4","_step","idKey","valueKey","newData","_iterator","_createForOfIteratorHelper","_newData$id","_ref5","activities","diamondGroup","spadeGroup","getActivity","signatureId","sampleId","activity","volcanoSignatures","diamondActivities","spadeActivities","meanDiff","volcanoSignature","log10","addEventListener","ref","params","__webpack_exports__","Promise","resolve","then","catch","error"],"mappings":"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","file":"ac977b4946dcc4aa40d9.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/adage-frontend/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 516);\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a numeric value is `NaN`.\n*\n* @module @stdlib/math/base/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/math/base/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 7.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isnan = require( './is_nan.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an absolute value.\n*\n* @module @stdlib/math/base/special/abs\n*\n* @example\n* var abs = require( '@stdlib/math/base/special/abs' );\n*\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* v = abs( 2.0 );\n* // returns 2.0\n*\n* v = abs( 0.0 );\n* // returns 0.0\n*\n* v = abs( -0.0 );\n* // returns 0.0\n*\n* v = abs( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar abs = require( './abs.js' );\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/math/float64-pinf\n* @type {number}\n*\n* @example\n* var FLOAT64_PINF = require( '@stdlib/constants/math/float64-pinf' );\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm.\n*\n* @module @stdlib/math/base/special/ln\n*\n* @example\n* var ln = require( '@stdlib/math/base/special/ln' );\n*\n* var v = ln( 4.0 );\n* // returns ~1.386\n*\n* v = ln( 0.0 );\n* // returns -Infinity\n*\n* v = ln( Infinity );\n* // returns Infinity\n*\n* v = ln( NaN );\n* // returns NaN\n*\n* v = ln( -4.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar ln = require( './ln.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural exponential function.\n*\n* @module @stdlib/math/base/special/exp\n*\n* @example\n* var exp = require( '@stdlib/math/base/special/exp' );\n*\n* var v = exp( 4.0 );\n* // returns ~54.5982\n*\n* v = exp( -9.0 );\n* // returns ~1.234e-4\n*\n* v = exp( 0.0 );\n* // returns 1.0\n*\n* v = exp( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar exp = require( './exp.js' );\n\n\n// EXPORTS //\n\nmodule.exports = exp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the principal square root.\n*\n* @module @stdlib/math/base/special/sqrt\n*\n* @example\n* var sqrt = require( '@stdlib/math/base/special/sqrt' );\n*\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar sqrt = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sqrt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the exponential function.\n*\n* @module @stdlib/math/base/special/pow\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var v = pow( 2.0, 3.0 );\n* // returns 8.0\n*\n* v = pow( 4.0, 0.5 );\n* // returns 2.0\n*\n* v = pow( 100.0, 0.0 );\n* // returns 1.0\n*\n* v = pow( 3.141592653589793, 5.0 );\n* // returns ~306.0197\n*\n* v = pow( 3.141592653589793, -0.2 );\n* // returns ~0.7954\n*\n* v = pow( NaN, 3.0 );\n* // returns NaN\n*\n* v = pow( 5.0, NaN );\n* // returns NaN\n*\n* v = pow( NaN, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar pow = require( './pow.js' );\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/math/float64-ninf\n* @type {number}\n*\n* @example\n* var FLOAT64_NINF = require( '@stdlib/constants/math/float64-ninf' );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-only property.\n*\n* @module @stdlib/utils/define-nonenumerable-read-only-property\n*\n* @example\n* var setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setNonEnumerableReadOnly = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/get-high-word\n*\n* @example\n* var getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\n*\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\n\n// MODULES //\n\nvar getHighWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* var nativeClass = require( '@stdlib/utils/native-class' );\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nvar hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );\nvar builtin = require( './native_class.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar nativeClass;\nif ( hasToStringTag() ) {\n\tnativeClass = polyfill;\n} else {\n\tnativeClass = builtin;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a numeric value toward negative infinity.\n*\n* @module @stdlib/math/base/special/floor\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* v = floor( 9.99999 );\n* // returns 9.0\n*\n* v = floor( 0.0 );\n* // returns 0.0\n*\n* v = floor( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar floor = require( './floor.js' );\n\n\n// EXPORTS //\n\nmodule.exports = floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the minimum value.\n*\n* @module @stdlib/math/base/special/min\n*\n* @example\n* var min = require( '@stdlib/math/base/special/min' );\n*\n* var v = min( 3.14, 4.2 );\n* // returns 3.14\n*\n* v = min( 5.9, 3.14, 4.2 );\n* // returns 3.14\n*\n* v = min( 3.14, NaN );\n* // returns NaN\n*\n* v = min( +0.0, -0.0 );\n* // returns -0.0\n*/\n\n// MODULES //\n\nvar min = require( './min.js' );\n\n\n// EXPORTS //\n\nmodule.exports = min;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the maximum value.\n*\n* @module @stdlib/math/base/special/max\n*\n* @example\n* var max = require( '@stdlib/math/base/special/max' );\n*\n* var v = max( 3.14, 4.2 );\n* // returns 4.2\n*\n* v = max( 5.9, 3.14, 4.2 );\n* // returns 5.9\n*\n* v = max( 3.14, NaN );\n* // returns NaN\n*\n* v = max( +0.0, -0.0 );\n* // returns +0.0\n*/\n\n// MODULES //\n\nvar max = require( './max.js' );\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of \\\\(1+x\\\\).\n*\n* @module @stdlib/math/base/special/log1p\n*\n* @example\n* var log1p = require( '@stdlib/math/base/special/log1p' );\n*\n* var v = log1p( 4.0 );\n* // returns ~1.609\n*\n* v = log1p( -1.0 );\n* // returns -Infinity\n*\n* v = log1p( 0.0 );\n* // returns 0.0\n*\n* v = log1p( -0.0 );\n* // returns -0.0\n*\n* v = log1p( -2.0 );\n* // returns NaN\n*\n* v = log1p( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar log1p = require( './log1p.js' );\n\n\n// EXPORTS //\n\nmodule.exports = log1p;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-eps\n* @type {number}\n*\n* @example\n* var FLOAT64_EPSILON = require( '@stdlib/constants/math/float64-eps' );\n* // returns 2.220446049250313e-16\n*/\n\n\n// MAIN //\n\n/**\n* Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number.\n*\n* ## Notes\n*\n* The difference is\n*\n* ```tex\n* \\frac{1}{2^{52}}\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.220446049250313e-16\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n* @see [Machine Epsilon]{@link https://en.wikipedia.org/wiki/Machine_epsilon}\n*/\nvar FLOAT64_EPSILON = 2.2204460492503130808472633361816E-16;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_EPSILON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the gamma function.\n*\n* @module @stdlib/math/base/special/gamma\n*\n* @example\n* var gamma = require( '@stdlib/math/base/special/gamma' );\n*\n* var v = gamma( 4.0 );\n* // returns 6.0\n*\n* v = gamma( -1.5 );\n* // returns ~2.363\n*\n* v = gamma( -0.5 );\n* // returns ~-3.545\n*\n* v = gamma( 0.5 );\n* // returns ~1.772\n*\n* v = gamma( 0.0 );\n* // returns Infinity\n*\n* v = gamma( -0.0 );\n* // returns -Infinity\n*\n* v = gamma( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gamma = require( './gamma.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gamma;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is an integer.\n*\n* @module @stdlib/math/base/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/math/base/assert/is-integer' );\n*\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* bool = isInteger( 3.14 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInteger = require( './is_integer.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The mathematical constant `π`.\n*\n* @module @stdlib/constants/math/float64-pi\n* @type {number}\n*\n* @example\n* var PI = require( '@stdlib/constants/math/float64-pi' );\n* // returns 3.141592653589793\n*/\n\n\n// MAIN //\n\n/**\n* The mathematical constant `π`.\n*\n* @constant\n* @type {number}\n* @default 3.141592653589793\n* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/Pi}\n*/\nvar PI = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nmodule.exports = PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate a polynomial.\n*\n* @module @stdlib/math/base/tools/evalpoly\n*\n* @example\n* var evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\n*\n* var v = evalpoly( [3.0,2.0,1.0], 10.0 ); // 3*10^0 + 2*10^1 + 1*10^2\n* // returns 123.0\n*\n* @example\n* var evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\n*\n* var polyval = evalpoly.factory( [3.0,2.0,1.0] );\n*\n* var v = polyval( 10.0 ); // => 3*10^0 + 2*10^1 + 1*10^2\n* // returns 123.0\n*\n* v = polyval( 5.0 ); // => 3*5^0 + 2*5^1 + 1*5^2\n* // returns 38.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar evalpoly = require( './evalpoly.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( evalpoly, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The bias of a double-precision floating-point number's exponent.\n*\n* @module @stdlib/constants/math/float64-exponent-bias\n* @type {integer32}\n*\n* @example\n* var FLOAT64_EXPONENT_BIAS = require( '@stdlib/constants/math/float64-exponent-bias' );\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* Bias of a double-precision floating-point number's exponent.\n*\n* ## Notes\n*\n* The bias can be computed via\n*\n* ```tex\n* \\mathrm{bias} = 2^{k-1} - 1\n* ```\n*\n* where \\\\(k\\\\) is the number of bits in the exponent; here, \\\\(k = 11\\\\).\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_EXPONENT_BIAS = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_EXPONENT_BIAS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive double-precision floating-point normal number.\n*\n* @module @stdlib/constants/math/float64-smallest-normal\n* @type {number}\n*\n* @example\n* var FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/math/float64-smallest-normal' );\n* // returns 2.2250738585072014e-308\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive double-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000001 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.2250738585072014e-308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of the maximum double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-max-ln\n* @type {number}\n*\n* @example\n* var FLOAT64_MAX_LN = require( '@stdlib/constants/math/float64-max-ln' );\n* // returns 709.782712893384\n*/\n\n\n// MAIN //\n\n/**\n* Natural logarithm of the maximum double-precision floating-point number.\n*\n* ## Notes\n*\n* The natural logarithm of the maximum is given by\n*\n* ```tex\n* \\ln \\left( 2^{1023} (2 - 2^{-52}) \\right)\n* ```\n*\n* @constant\n* @type {number}\n* @default 709.782712893384\n* @see [IEEE 754]{@link http://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_LN = 709.782712893384;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_LN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified property.\n*\n* @module @stdlib/assert/has-own-property\n*\n* @example\n* var hasOwnProp = require( '@stdlib/assert/has-own-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* bool = hasOwnProp( beep, 'bop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasOwnProp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Multiply a double-precision floating-point number by an integer power of two.\n*\n* @module @stdlib/math/base/special/ldexp\n*\n* @example\n* var ldexp = require( '@stdlib/math/base/special/ldexp' );\n*\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar ldexp = require( './ldexp.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ldexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a numeric value is infinite.\n*\n* @module @stdlib/math/base/assert/is-infinite\n*\n* @example\n* var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\n*\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* bool = isInfinite( -Infinity );\n* // returns true\n*\n* bool = isInfinite( 5.0 );\n* // returns false\n*\n* bool = isInfinite( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInfinite = require( './is_infinite.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint32\n*\n* @example\n* var ctor = require( '@stdlib/array/uint32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\nvar builtin = require( './uint32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float64\n*\n* @example\n* var ctor = require( '@stdlib/array/float64' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\nvar builtin = require( './float64array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a boolean indicating if an environment is little endian.\n*\n* @module @stdlib/assert/is-little-endian\n*\n* @example\n* var IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );\n*\n* var bool = IS_LITTLE_ENDIAN;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = IS_LITTLE_ENDIAN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of the gamma function.\n*\n* @module @stdlib/math/base/special/gammaln\n*\n* @example\n* var gammaln = require( '@stdlib/math/base/special/gammaln' );\n*\n* var v = gammaln( 1.0 );\n* // returns 0.0\n*\n* v = gammaln( 2.0 );\n* // returns 0.0\n*\n* v = gammaln( 4.0 );\n* // returns ~1.792\n*\n* v = gammaln( -0.5 );\n* // returns ~1.266\n*\n* v = gammaln( 0.5 );\n* // returns ~0.572\n*\n* v = gammaln( 0.0 );\n* // returns Infinity\n*\n* v = gammaln( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gammaln = require( './gammaln.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert/is-number\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' );\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isObject;\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute `exp(x) - 1`.\n*\n* @module @stdlib/math/base/special/expm1\n*\n* @example\n* var expm1 = require( '@stdlib/math/base/special/expm1' );\n*\n* var v = expm1( 0.2 );\n* // returns ~0.221\n*\n* v = expm1( -9.0 );\n* // returns ~-0.999\n*\n* v = expm1( 0.0 );\n* // returns 0.0\n*\n* v = expm1( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar expm1 = require( './expm1.js' );\n\n\n// EXPORTS //\n\nmodule.exports = expm1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Euler's number.\n*\n* @module @stdlib/constants/math/float64-e\n* @type {number}\n*\n* @example\n* var E = require( '@stdlib/constants/math/float64-e' );\n* // returns 2.718281828459045\n*/\n\n\n// MAIN //\n\n/**\n* Euler's number.\n*\n* @constant\n* @type {number}\n* @default 2.718281828459045\n* @see [OEIS]{@link https://oeis.org/A001113}\n* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/E_(mathematical_constant)}\n*/\nvar E = 2.718281828459045235360287471352662497757247093699959574966;\n\n\n// EXPORTS //\n\nmodule.exports = E;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-max\n* @type {number}\n*\n* @example\n* var FLOAT64_MAX = require( '@stdlib/constants/math/float64-max' );\n* // returns 1.7976931348623157e+308\n*/\n\n\n// MAIN //\n\n/**\n* Maximum double-precision floating-point number.\n*\n* ## Notes\n*\n* The maximum is given by\n*\n* ```tex\n* 2^{1023} (2 - 2^{-52})\n* ```\n*\n* @constant\n* @type {number}\n* @default 1.7976931348623157e+308\n* @see [IEEE 754]{@link http://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX = 1.7976931348623157e+308;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of the smallest normalized double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-min-ln\n* @type {number}\n*\n* @example\n* var FLOAT64_MIN_LN = require( '@stdlib/constants/math/float64-min-ln' );\n* // returns -708.3964185322641\n*/\n\n\n// MAIN //\n\n/**\n* Natural logarithm of the smallest normalized double-precision floating-point number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -\\ln \\left( 2^{1023-1} \\right)\n* ```\n*\n* @constant\n* @type {number}\n* @default -708.3964185322641\n* @see [IEEE 754]{@link http://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_LN = -708.3964185322641;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_LN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a numeric value toward zero.\n*\n* @module @stdlib/math/base/special/trunc\n*\n* @example\n* var trunc = require( '@stdlib/math/base/special/trunc' );\n*\n* var v = trunc( -4.2 );\n* // returns -4.0\n*\n* v = trunc( 9.99999 );\n* // returns 9.0\n*\n* v = trunc( 0.0 );\n* // returns 0.0\n*\n* v = trunc( -0.0 );\n* // returns -0.0\n*\n* v = trunc( NaN );\n* // returns NaN\n*\n* v = trunc( Infinity );\n* // returns Infinity\n*\n* v = trunc( -Infinity );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar trunc = require( './trunc.js' );\n\n\n// EXPORTS //\n\nmodule.exports = trunc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Set the more significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/set-high-word\n*\n* @example\n* var setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\n*\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); // => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* var setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\n* var PINF = require( '@stdlib/constants/math/float64-pinf' ); //  => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/\n\n// MODULES //\n\nvar setHighWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sine of a number.\n*\n* @module @stdlib/math/base/special/sin\n*\n* @example\n* var sin = require( '@stdlib/math/base/special/sin' );\n*\n* var v = sin( 0.0 );\n* // returns ~0.0\n*\n* v = sin( 3.141592653589793/2.0 );\n* // returns ~1.0\n*\n* v = sin( -3.141592653589793/6.0 );\n* // returns ~-0.5\n*\n* v = sin( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar sin = require( './sin.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Set the less significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/set-low-word\n*\n* @example\n* var setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\n*\n* var low = 5 >>> 0; // => 00000000000000000000000000000101\n*\n* var x = 3.14e201; // => 0 11010011100 01001000001011000011 10010011110010110101100010000010\n*\n* var y = setLowWord( x, low ); // => 0 11010011100 01001000001011000011 00000000000000000000000000000101\n* // returns 3.139998651394392e+201\n*\n* @example\n* var setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\n* var PINF = require( '@stdlib/constants/math/float64-pinf' );\n* var NINF = require( '@stdlib/constants/math/float64-ninf' );\n*\n* var low = 12345678;\n*\n* var y = setLowWord( PINF, low );\n* // returns NaN\n*\n* y = setLowWord( NINF, low );\n* // returns NaN\n*\n* y = setLowWord( NaN, low );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar setLowWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Arbitrary constant `g` to be used in Lanczos approximation functions.\n*\n* @module @stdlib/constants/math/float64-gamma-lanczos-g\n* @type {number}\n*\n* @example\n* var FLOAT64_GAMMA_LANCZOS_G = require( '@stdlib/constants/math/float64-gamma-lanczos-g' );\n* // returns 10.900511\n*/\n\n\n// MAIN //\n\n/**\n* Arbitrary constant `g` to be used in Lanczos approximation functions.\n*\n* @constant\n* @type {number}\n* @default 10.900511\n* @see [Lanczos Approximation]{@link https://en.wikipedia.org/wiki/Lanczos_approximation}\n*/\nvar FLOAT64_GAMMA_LANCZOS_G = 10.90051099999999983936049829935654997826;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_GAMMA_LANCZOS_G;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the inverse complementary error function.\n*\n* @module @stdlib/math/base/special/erfcinv\n*\n* @example\n* var erfcinv = require( '@stdlib/math/base/special/erfcinv' );\n*\n* var y = erfcinv( 0.5 );\n* // returns ~0.4769\n*\n* y = erfcinv( 0.8 );\n* // returns ~-0.1791\n*\n* y = erfcinv( 0.0 );\n* // returns Infinity\n*\n* y = erfcinv( 2.0 );\n* // returns -Infinity\n*\n* y = erfcinv( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar erfcinv = require( './erfcinv.js' );\n\n\n// EXPORTS //\n\nmodule.exports = erfcinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `toStringTag` support.\n*\n* @module @stdlib/assert/has-tostringtag-support\n*\n* @example\n* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );\n*\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasToStringTagSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a function.\n*\n* @module @stdlib/assert/is-function\n*\n* @example\n* var isFunction = require( '@stdlib/assert/is-function' );\n*\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\n\n// MODULES //\n\nvar isFunction = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is a nonnegative integer.\n*\n* @module @stdlib/math/base/assert/is-nonnegative-integer\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\n*\n* var bool = isNonNegativeInteger( 1.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( 0.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( -10.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNonNegativeInteger = require( './is_nonnegative_integer.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation\n\n/**\n* Round a numeric value to the nearest integer.\n*\n* @module @stdlib/math/base/special/round\n*\n* @example\n* var round = require( '@stdlib/math/base/special/round' );\n*\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* v = round( -4.5 );\n* // returns -4.0\n*\n* v = round( -4.6 );\n* // returns -5.0\n*\n* v = round( 9.99999 );\n* // returns 10.0\n*\n* v = round( 9.5 );\n* // returns 10.0\n*\n* v = round( 9.2 );\n* // returns 9.0\n*\n* v = round( 0.0 );\n* // returns 0.0\n*\n* v = round( -0.0 );\n* // returns -0.0\n*\n* v = round( Infinity );\n* // returns Infinity\n*\n* v = round( -Infinity );\n* // returns -Infinity\n*\n* v = round( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar round = require( './round.js' );\n\n\n// EXPORTS //\n\nmodule.exports = round;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a constant function.\n*\n* @module @stdlib/utils/constant-function\n*\n* @example\n* var constantFunction = require( '@stdlib/utils/constant-function' );\n*\n* var fcn = constantFunction( 3.14 );\n*\n* var v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*/\n\n// MODULES //\n\nvar constantFunction = require( './constant_function.js' );\n\n\n// EXPORTS //\n\nmodule.exports = constantFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/assert/is-integer' );\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isObject;\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Square root of the mathematical constant `π` times `2`.\n*\n* @module @stdlib/constants/math/float64-sqrt-two-pi\n* @type {number}\n*\n* @example\n* var SQRT_TWO_PI = require( '@stdlib/constants/math/float64-sqrt-two-pi' );\n* // returns 2.5066282746310007\n*/\n\n\n// MAIN //\n\n/**\n* Square root of the mathematical constant `π` times `2`.\n*\n* @constant\n* @type {number}\n* @default 2.5066282746310007\n* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/Pi}\n*/\nvar SQRT_TWO_PI = 2.506628274631000502415765284811045253e+00;\n\n\n// EXPORTS //\n\nmodule.exports = SQRT_TWO_PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate the Lanczos sum for the approximation of the gamma function (scaled by `exp(-g)`, where `g = 10.900511`.\n*\n* @module @stdlib/math/base/special/gamma-lanczos-sum-expg-scaled\n*\n* @example\n* var gammaLanczosSumExpGScaled = require( '@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled' );\n*\n* var v = gammaLanczosSumExpGScaled( 4.0 );\n* // returns ~0.018\n*\n* v = gammaLanczosSumExpGScaled( -1.5 );\n* // returns ~25.337\n*\n* v = gammaLanczosSumExpGScaled( -0.5 );\n* // returns ~-12.911\n*\n* v = gammaLanczosSumExpGScaled( 0.5 );\n* // returns ~1.772\n*\n* v = gammaLanczosSumExpGScaled( 0.0 );\n* // returns Infinity\n*\n* v = gammaLanczosSumExpGScaled( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gammaLanczosSumExpGScaled = require( './gamma_lanczos_sum_expg_scaled.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaLanczosSumExpGScaled;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive single-precision floating-point normal number.\n*\n* @module @stdlib/constants/math/float32-smallest-normal\n* @type {number}\n*\n* @example\n* var FLOAT32_SMALLEST_NORMAL = require( '@stdlib/constants/math/float32-smallest-normal' );\n* // returns 1.1754943508222875e-38\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive single-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{127-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000001 00000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 1.1754943508222875e-38\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT32_SMALLEST_NORMAL = 1.1754943508222875e-38;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT32_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the signum function.\n*\n* @module @stdlib/math/base/special/signum\n*\n* @example\n* var signum = require( '@stdlib/math/base/special/signum' );\n*\n* var sign = signum( -5.0 );\n* // returns -1.0\n*\n* sign = signum( 5.0 );\n* // returns 1.0\n*\n* sign = signum( -0.0 );\n* // returns -0.0\n*\n* sign = signum( 0.0 );\n* // returns 0.0\n*\n* sign = signum( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar signum = require( './signum.js' );\n\n\n// EXPORTS //\n\nmodule.exports = signum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum single-precision floating-point number.\n*\n* @module @stdlib/constants/math/float32-max\n* @type {number}\n*\n* @example\n* var FLOAT32_MAX = require( '@stdlib/constants/math/float32-max' );\n* // returns 3.4028234663852886e+38\n*/\n\n\n// MAIN //\n\n/**\n* Maximum single-precision floating-point number.\n*\n* ## Notes\n*\n* The maximum is given by\n*\n* ```tex\n* 2^{127} (2 - 2^{-23})\n* ```\n*\n* @constant\n* @type {number}\n* @default 3.4028234663852886e+38\n* @see [IEEE 754]{@link http://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT32_MAX = 3.4028234663852886e+38;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns a `Number` object.\n*\n* @module @stdlib/number/ctor\n*\n* @example\n* var Number = require( '@stdlib/number/ctor' );\n*\n* var v = new Number( 10.0 );\n* // returns <Number>\n*/\n\n// MODULES //\n\nvar Number = require( './number.js' );\n\n\n// EXPORTS //\n\nmodule.exports = Number;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @module @stdlib/math/base/special/copysign\n*\n* @example\n* var copysign = require( '@stdlib/math/base/special/copysign' );\n*\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\n\n// MODULES //\n\nvar copysign = require( './copysign.js' );\n\n\n// EXPORTS //\n\nmodule.exports = copysign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split a floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number/float64/base/to-words\n*\n* @example\n* var toWords = require( '@stdlib/number/float64/base/to-words' );\n*\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n* var toWords = require( '@stdlib/number/float64/base/to-words' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar toWords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number/float64/base/from-words\n*\n* @example\n* var fromWords = require( '@stdlib/number/float64/base/from-words' );\n*\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar fromWords = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = fromWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the cosine of a number.\n*\n* @module @stdlib/math/base/special/cos\n*\n* @example\n* var cos = require( '@stdlib/math/base/special/cos' );\n*\n* var v = cos( 0.0 );\n* // returns 1.0\n*\n* v = cos( 3.141592653589793/4.0 );\n* // returns ~0.707\n*\n* v = cos( -3.141592653589793/6.0 );\n* // returns ~0.866\n*/\n\n// MODULES //\n\nvar cos = require( './cos.js' );\n\n\n// EXPORTS //\n\nmodule.exports = cos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the incomplete beta function.\n*\n* @module @stdlib/math/base/special/betainc\n*\n* @example\n* var betainc = require( '@stdlib/math/base/special/betainc' );\n*\n* var y = betainc( 0.5, 2.0, 2.0 );\n* // returns 0.5\n*\n* y = betainc( 0.5, 2.0, 2.0, false );\n* // returns ~0.083\n*\n* y = betainc( 0.2, 1.0, 2.0 );\n* // returns 0.36\n*\n* y = betainc( 0.2, 1.0, 2.0, true, true );\n* // returns 0.64\n*/\n\n// MODULES //\n\nvar betainc = require( './betainc.js' );\n\n\n// EXPORTS //\n\nmodule.exports = betainc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arcsine of a number.\n*\n* @module @stdlib/math/base/special/asin\n*\n* @example\n* var asin = require( '@stdlib/math/base/special/asin' );\n*\n* var v = asin( 0.0 );\n* // returns 0.0\n*\n* v = asin( 3.141592653589793/4.0 );\n* // returns ~0.903\n*\n* v = asin( -3.141592653589793/6.0 );\n* // returns ~-0.551\n*\n* v = asin( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar asin = require( './asin.js' );\n\n\n// EXPORTS //\n\nmodule.exports = asin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite numeric value is an odd number.\n*\n* @module @stdlib/math/base/assert/is-odd\n*\n* @example\n* var isOdd = require( '@stdlib/math/base/assert/is-odd' );\n*\n* var bool = isOdd( 5.0 );\n* // returns true\n*\n* bool = isOdd( -2.0 );\n* // returns false\n*\n* bool = isOdd( 0.0 );\n* // returns false\n*\n* bool = isOdd( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar isOdd = require( './is_odd.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* One half times the mathematical constant `π`.\n*\n* @module @stdlib/constants/math/float64-half-pi\n* @type {number}\n*\n* @example\n* var HALF_PI = require( '@stdlib/constants/math/float64-half-pi' );\n* // returns 1.5707963267948966\n*/\n\n\n// MAIN //\n\n/**\n* One half times the mathematical constant `π`.\n*\n* @constant\n* @type {number}\n* @default 1.5707963267948966\n* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/Pi}\n*/\nvar HALF_PI = 1.5707963267948966;\n\n\n// EXPORTS //\n\nmodule.exports = HALF_PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate the ratio of two gamma functions.\n*\n* @module @stdlib/math/base/special/gamma-delta-ratio\n*\n* @example\n* var gammaDeltaRatio = require( '@stdlib/math/base/special/gamma-delta-ratio' );\n*\n* var y = gammaDeltaRatio( 2.0, 3.0 );\n* // returns ~0.042\n*\n* y = gammaDeltaRatio( 4.0, 0.5 );\n* // returns 2.0\n*\n* y = gammaDeltaRatio( 100.0, 0.0 );\n* // returns 1.0\n*/\n\n// MODULES //\n\nvar gammaDeltaRatio = require( './gamma_delta_ratio.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaDeltaRatio;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Sum the elements of the series given by the supplied function.\n*\n* @module @stdlib/math/base/tools/sum-series\n*\n* @example\n* var sumSeries = require( '@stdlib/math/base/tools/sum-series' );\n*\n* var gen = geometricSeriesClosure( 0.9 )\n* var out = sumSeries( gen );\n* // returns 10\n*\n* function geometricSeriesClosure( x ) {\n*     var exponent = -1;\n*     return function() {\n*         exponent += 1;\n*         return Math.pow( x, exponent );\n*     };\n* }\n*/\n\n// MODULES //\n\nvar hasGeneratorSupport = require( '@stdlib/assert/has-generator-support' );\nvar generator = require( './generators.js' );\nvar basic = require( './basic.js' );\n\n\n// MAIN //\n\nvar sumSeries;\nif ( hasGeneratorSupport() ) {\n\tsumSeries = generator;\n} else {\n\tsumSeries = basic;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sumSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSumExpGScaled = require( '@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled' );\nvar maxabs = require( '@stdlib/math/base/special/maxabs' );\nvar minabs = require( '@stdlib/math/base/special/minabs' );\nvar expm1 = require( '@stdlib/math/base/special/expm1' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/math/float64-max-ln' );\nvar MIN_LN = require( '@stdlib/constants/math/float64-min-ln' );\nvar G = require( '@stdlib/constants/math/float64-gamma-lanczos-g' );\nvar E = require( '@stdlib/constants/math/float64-e' );\n\n\n// MAIN //\n\n/**\n* Computes the leading power terms in the incomplete beta function.\n*\n* When normalized,\n*\n* ```tex\n* \\frac{ x^a y^b }{ \\operatorname{Beta}(a,b) }\n* ```\n*\n* and otherwise\n*\n* ```tex\n* x^a y^b\n* ```\n*\n* ## Notes\n*\n* -   Almost all of the error in the incomplete beta comes from this function, particularly when \\\\( a \\\\) and \\\\( b \\\\) are large. Computing large powers are _hard_ though, and using logarithms just leads to horrendous cancellation errors.\n*\n* -   For \\\\( l1 * l2 > 0 \\\\) or \\\\( \\operatorname{min}( a, b ) < 1 \\\\), the two power terms both go in the same direction (toward zero or toward infinity). In this case if either term overflows or underflows, then the product of the two must do so also. Alternatively, if one exponent is less than one, then we can't productively use it to eliminate overflow or underflow from the other term.  Problems with spurious overflow/underflow can't be ruled out. In this case, but it is _very_ unlikely since one of the power terms will evaluate to a number close to 1.\n*\n* -   If \\\\( \\max( \\abs(l1), \\abs(l2) ) < 0.5 \\\\), both exponents are near one and both the exponents are greater than one, and, further, these two power terms tend in opposite directions (one toward zero, the other toward infinity), so we have to combine the terms to avoid any risk of overflow or underflow. We do this by moving one power term inside the other, we have:\n*\n*     ```tex\n*     (1 + l_1)^a \\cdot (1 + l_2)^b \\\\\n*     = ((1 + l_1) \\cdot (1 + l_2)^(b/a))^a \\\\\n*     = (1 + l_1 + l_3 + l_1*l_3)^a\n*     ```\n*\n*     and\n*\n*     ```tex\n*     l_3 = (1 + l_2)^(b/a) - 1 \\\\\n*     = \\exp((b/a) * \\ln(1 + l_2)) - 1\n*     ```\n*\n*     The tricky bit is deciding which term to move inside. By preference, we move the larger term inside, so that the size of the largest exponent is reduced.  However, that can only be done as long as l3 (see above) is also small.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @param {boolean} normalized - boolean indicating whether to evaluate the power terms of the regularized or non-regularized incomplete beta function\n* @returns {number} power terms\n*/\nfunction ibetaPowerTerms( a, b, x, y, normalized ) {\n\tvar result;\n\tvar smallA;\n\tvar ratio;\n\tvar agh;\n\tvar bgh;\n\tvar cgh;\n\tvar l1;\n\tvar l2;\n\tvar l3;\n\tvar p1;\n\tvar b1;\n\tvar b2;\n\tvar c;\n\tvar l;\n\n\tif ( !normalized ) {\n\t\t// Can we do better here?\n\t\treturn pow( x, a ) * pow( y, b );\n\t}\n\tc = a + b;\n\n\t// Combine power terms with Lanczos approximation:\n\tagh = a + G - 0.5;\n\tbgh = b + G - 0.5;\n\tcgh = c + G - 0.5;\n\tresult = lanczosSumExpGScaled( c );\n\tresult /= lanczosSumExpGScaled( a ) * lanczosSumExpGScaled( b );\n\n\t// Combine with the leftover terms from the Lanczos approximation:\n\tresult *= sqrt( bgh / E );\n\tresult *= sqrt( agh / cgh );\n\n\t// `l1` and `l2` are the base of the exponents minus one:\n\tl1 = ( ( x * b ) - ( y * agh ) ) / agh;\n\tl2 = ( ( y * a ) - ( x * bgh ) ) / bgh;\n\tif ( minabs( l1, l2 ) < 0.2 ) {\n\t\t// When the base of the exponent is very near 1 we get really gross errors unless extra care is taken:\n\t\tif ( l1 * l2 > 0 || min( a, b ) < 1 ) {\n\t\t\tif ( abs(l1) < 0.1 ) {\n\t\t\t\tresult *= exp( a * log1p( l1 ) );\n\t\t\t} else {\n\t\t\t\tresult *= pow( ( x*cgh ) / agh, a );\n\t\t\t}\n\t\t\tif ( abs(l2) < 0.1 ) {\n\t\t\t\tresult *= exp( b * log1p( l2 ) );\n\t\t\t} else {\n\t\t\t\tresult *= pow((y * cgh) / bgh, b);\n\t\t\t}\n\t\t}\n\t\telse if ( maxabs( l1, l2 ) < 0.5 ) {\n\t\t\tsmallA = a < b;\n\t\t\tratio = b / a;\n\t\t\tif (\n\t\t\t\t(smallA && (ratio * l2 < 0.1)) ||\n\t\t\t\t(!smallA && (l1 / ratio > 0.1))\n\t\t\t) {\n\t\t\t\tl3 = expm1( ratio * log1p( l2 ) );\n\t\t\t\tl3 = l1 + l3 + ( l3 * l1 );\n\t\t\t\tl3 = a * log1p( l3 );\n\t\t\t\tresult *= exp( l3 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tl3 = expm1( log1p( l1 ) / ratio );\n\t\t\t\tl3 = l2 + l3 + ( l3 * l2 );\n\t\t\t\tl3 = b * log1p( l3 );\n\t\t\t\tresult *= exp( l3 );\n\t\t\t}\n\t\t}\n\t\telse if ( abs(l1) < abs(l2) ) {\n\t\t\t// First base near 1 only:\n\t\t\tl = ( a * log1p( l1 ) ) + ( b * ln( ( y*cgh ) / bgh ) );\n\t\t\tif ( l <= MIN_LN || l >= MAX_LN ) {\n\t\t\t\tl += ln(result);\n\t\t\t\tif ( l >= MAX_LN ) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tresult = exp( l );\n\t\t\t} else {\n\t\t\t\tresult *= exp( l );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Second base near 1 only:\n\t\t\tl = ( b * log1p( l2 ) ) + ( a * ln( (x*cgh) / agh ) );\n\t\t\tif ( l <= MIN_LN || l >= MAX_LN ) {\n\t\t\t\tl += ln(result);\n\t\t\t\tif ( l >= MAX_LN ) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tresult = exp( l );\n\t\t\t} else {\n\t\t\t\tresult *= exp( l );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// General case:\n\t\tb1 = (x * cgh) / agh;\n\t\tb2 = (y * cgh) / bgh;\n\t\tl1 = a * ln(b1);\n\t\tl2 = b * ln(b2);\n\t\tif (\n\t\t\tl1 >= MAX_LN ||\n\t\t\tl1 <= MIN_LN ||\n\t\t\tl2 >= MAX_LN ||\n\t\t\tl2 <= MIN_LN\n\t\t) {\n\t\t\t// Oops, under/overflow, sidestep if we can:\n\t\t\tif ( a < b ) {\n\t\t\t\tp1 = pow( b2, b / a );\n\t\t\t\tl3 = a * ( ln(b1) + ln(p1) );\n\t\t\t\tif ( l3 < MAX_LN && l3 > MIN_LN ) {\n\t\t\t\t\tresult *= pow( p1 * b1, a );\n\t\t\t\t} else {\n\t\t\t\t\tl2 += l1 + ln(result);\n\t\t\t\t\tif ( l2 >= MAX_LN ) {\n\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t}\n\t\t\t\t\tresult = exp( l2 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp1 = pow( b1, a / b );\n\t\t\t\tl3 = ( ln(p1) + ln(b2) ) * b;\n\t\t\t\tif ( l3 < MAX_LN && l3 > MIN_LN ) {\n\t\t\t\t\tresult *= pow( p1 * b2, b );\n\t\t\t\t} else {\n\t\t\t\t\tl2 += l1 + ln( result );\n\t\t\t\t\tif (l2 >= MAX_LN) {\n\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t}\n\t\t\t\t\tresult = exp( l2 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Finally the normal case:\n\t\t\tresult *= pow( b1, a ) * pow( b2, b );\n\t\t}\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaPowerTerms;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Square root of `2`.\n*\n* @module @stdlib/constants/math/float64-sqrt-two\n* @type {number}\n*\n* @example\n* var SQRT2 = require( '@stdlib/constants/math/float64-sqrt-two' );\n* // returns 1.4142135623730951\n*/\n\n\n// MAIN //\n\n/**\n* Square root of `2`.\n*\n* ```tex\n* \\sqrt{2}\n* ```\n*\n* @constant\n* @type {number}\n* @default 1.4142135623730951\n*/\nvar SQRT2 = 1.41421356237309504880168872420969807856967187537694807317667973799073247846210703885038753432764157273501384623e+00; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nmodule.exports = SQRT2;\n","var _ = require('underscore');\n\nvar namespace = {};\n\nfunction range(start, end) {\n   var foo = [];\n   for (var i = start; i <= end; i++) {\n       foo.push(i);\n   }\n   return foo;\n}\n\nfunction sum(arr){\n  var ret = 0;\n  for(var i=0; i < arr.length; i++){\n    ret += arr[i];\n  }\n  return ret;\n}\n\n\n/*\nBonferroni, C. E. (1936) Teoria statistica delle classi e calcolo delle probabilit `a.\nPubblicazioni del R Istituto Superiore di Scienze Economiche e Commerciali\ndi Firenze 8, 3--62.\n*/\nnamespace.bonferroni = function(pvalues, numHypotheses){\n  var m = numHypotheses || pvalues.length;\n  for(var i = 0; i < pvalues.length; i++){\n    pvalues[i] = (m * pvalues[i] > 1) ? 1 : m * pvalues[i];\n  }\n  return pvalues;\n};\n\n\n/*\nBenjamini, Y., and Hochberg, Y. (1995). Controlling the false discovery rate:\na practical and powerful approach to multiple testing.\nJournal of the Royal Statistical Society Series B 57, 289–300.\n*/\nnamespace.fdr = function(pvalues, numHypotheses){\n  var indices = _.clone(pvalues);\n  i = pvalues.length;\n  while (i--) {\n    indices[i] = { k: i, v: pvalues[i] };\n  }\n  pvalues_sorted = indices.sort(function (a, b) {\n    return a.v < b.v ? -1 : a.v > b.v ? 1 : 0;\n  });\n\n  var m = pvalues.length;\n  numHypotheses = numHypotheses || pvalues.length;\n\n  pvalues_sorted[m - 1] = pvalues_sorted[m - 1];\n  var n = m - 1;\n  while(n > 0){\n    pvalues_sorted[n - 1].v = Math.min( pvalues_sorted[n].v, (numHypotheses/n) * pvalues_sorted[n-1].v);\n    n--;\n  }\n\n  j = pvalues.length;\n  pvalues_sorted.sort(function(a,b){\n    return a.k < b.k ? -1 : a.k > b.k ? 1 : 0;\n  });\n\n  while (j--) {\n    pvalues_sorted[j] = pvalues_sorted[j].v;\n  }\n  return pvalues_sorted;\n};\n\n/*\nBenjamini, Y., and Yekutieli, D. (2001). The control of the false discovery rate\nin multiple testing under dependency.\nAnnals of Statistics 29, 1165–1188.\n*/\nnamespace.bY = function(pvalues, numHypotheses){\n  var indices = _.clone(pvalues);\n  i = pvalues.length;\n  while (i--) {\n    indices[i] = { k: i, v: pvalues[i] };\n  }\n  pvalues_sorted = indices.sort(function (a, b) {\n    return a.v < b.v ? -1 : a.v > b.v ? 1 : 0;\n  });\n\n  var m = pvalues.length;\n  numHypotheses = numHypotheses || pvalues.length;\n  var q = 0;\n  for(var k = 0; k < numHypotheses; k++){\n    q += 1/(1+k);\n  }\n\n  pvalues_sorted[m - 1].v = Math.min(1, q * pvalues_sorted[m - 1].v );\n\n  var n = m - 1;\n  while(n > 0){\n    pvalues_sorted[n - 1].v = Math.min(1, Math.min( q * pvalues_sorted[n].v,\n      q * (numHypotheses/n) * pvalues_sorted[n-1].v) );\n    n--;\n  }\n\n  j = pvalues.length;\n  pvalues_sorted.sort(function(a,b){\n    return a.k < b.k ? -1 : a.k > b.k ? 1 : 0;\n  });\n\n  while (j--) {\n    pvalues_sorted[j] = pvalues_sorted[j].v;\n  }\n  return pvalues_sorted;\n};\n\n/*\nreturns adjusted significance level alpha_fdr which has to be used for\nCI construction in order to control FDR at level alpha\n*/\nnamespace.adjustSignificanceLevel = function(pvalues, alpha){\n  var m = pvalues.length;\n  var alpha_star = (1/m) * alpha;\n  pvalues_sorted = pvalues.sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n  for(var k = 1; k <= pvalues_sorted.length; k++){\n    var p_k = pvalues_sorted[k-1];\n    if (p_k > (k/m) * alpha)\n      break;\n    alpha_star = ( k / m ) * alpha;\n  }\n  return alpha_star;\n};\n\nmodule.exports = exports = namespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nvar hasDefinePropertySupport = require( '@stdlib/assert/has-define-property-support' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an object.\n*\n* @module @stdlib/assert/is-object\n*\n* @example\n* var isObject = require( '@stdlib/assert/is-object' );\n*\n* var bool = isObject( {} );\n* // returns true\n*\n* bool = isObject( true );\n* // returns false\n*/\n\n// MODULES //\n\nvar isObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array.\n*\n* @module @stdlib/assert/is-array\n*\n* @example\n* var isArray = require( '@stdlib/assert/is-array' );\n*\n* var bool = isArray( [] );\n* // returns true\n*\n* bool = isArray( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nmodule.exports = toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* var isBoolean = require( '@stdlib/assert/is-boolean' );\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* // Use interface to check for boolean primitives...\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* // Use interface to check for boolean objects...\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isObject;\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isBoolean = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isBoolean, 'isPrimitive', isPrimitive );\nsetReadOnly( isBoolean, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the name of a value's constructor.\n*\n* @module @stdlib/utils/constructor-name\n*\n* @example\n* var constructorName = require( '@stdlib/utils/constructor-name' );\n*\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* v = constructorName( {} );\n* // returns 'Object'\n*\n* v = constructorName( true );\n* // returns 'Boolean'\n*/\n\n// MODULES //\n\nvar constructorName = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants/array/max-array-length\n*\n* @example\n* var MAX_ARRAY_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n* // returns 4294967295\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar MAX_ARRAY_LENGTH = 4294967295>>>0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = MAX_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a numeric value is negative zero.\n*\n* @module @stdlib/math/base/assert/is-negative-zero\n*\n* @example\n* var isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\n*\n* var bool = isNegativeZero( -0.0 );\n* // returns true\n*\n* bool = isNegativeZero( 0.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNegativeZero = require( './is_negative_zero.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Hypergeometric distribution probability mass function (PMF).\n*\n* @module @stdlib/stats/base/dists/hypergeometric/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/hypergeometric/pmf' );\n*\n* var y = pmf( 1.0, 8, 4, 2 );\n* // returns ~0.571\n*\n* y = pmf( 2.0, 8, 4, 2 );\n* // returns ~0.214\n*\n* y = pmf( 0.0, 8, 4, 2 );\n* // returns ~0.214\n*\n* y = pmf( 1.5, 8, 4, 2 );\n* // returns 0.0\n*\n* var mypmf = pmf.factory( 30, 20, 5 );\n* y = mypmf( 4.0 );\n* // returns ~0.34\n*\n* y = mypmf( 1.0 );\n* // returns ~0.029\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar pmf = require( './pmf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( pmf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of the factorial function.\n*\n* @module @stdlib/math/base/special/factorialln\n*\n* @example\n* var factorialln = require( '@stdlib/math/base/special/factorialln' );\n*\n* var v = factorialln( 3.0 );\n* // returns ~1.792\n*\n* v = factorialln( 2.4 );\n* // returns ~1.092\n*\n* v = factorialln( -1.0 );\n* // returns NaN\n*\n* v = factorialln( -1.5 );\n* // returns ~1.266\n*\n* v = factorialln( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar factorialln = require( './factorialln.js' );\n\n\n// EXPORTS //\n\nmodule.exports = factorialln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the cosine of a number on `[-π/4, π/4]`.\n*\n* @module @stdlib/math/base/special/kernel-cos\n*\n* @example\n* var kernelCos = require( '@stdlib/math/base/special/kernel-cos' );\n*\n* var v = kernelCos( 0.0, 0.0 );\n* // returns ~1.0\n*\n* v = kernelCos( 3.141592653589793/6.0, 0.0 );\n* // returns ~0.866\n*\n* v = kernelCos( 0.785, -1.144e-17 );\n* // returns ~0.707\n*\n* v = kernelCos( NaN, 0.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar kernelCos = require( './kernel_cos.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kernelCos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the sine of a number on `[-π/4, π/4]`.\n*\n* @module @stdlib/math/base/special/kernel-sin\n*\n* @example\n* var kernelSin = require( '@stdlib/math/base/special/kernel-sin' );\n*\n* var v = kernelSin( 0.0, 0.0 );\n* // returns ~0.0\n*\n* v = kernelSin( 3.141592653589793/6.0, 0.0 );\n* // returns ~0.5\n*\n* v = kernelSin( 0.619, 9.279e-18 );\n* // returns ~0.581\n*\n* v = kernelSin( NaN, 0.0 );\n* // returns NaN\n*\n* v = kernelSin( 3.0, NaN );\n* // returns NaN\n*\n* v = kernelSin( NaN, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar kernelSin = require( './kernel_sin.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kernelSin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute `x - nπ/2 = r`.\n*\n* @module @stdlib/math/base/special/rempio2\n*\n* @example\n* var rempio2 = require( '@stdlib/math/base/special/rempio2' );\n*\n* var y = new Array( 2 );\n* var n = rempio2( 128.0, y );\n* // returns 81\n*\n* var y1 = y[ 0 ];\n* // returns ~0.765\n*\n* var y2 = y[ 1 ];\n* // returns ~3.618e-17\n*/\n\n// MODULES //\n\nvar rempio2 = require( './rempio2.js' );\n\n\n// EXPORTS //\n\nmodule.exports = rempio2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the sum of elements in an array.\n*\n* @private\n* @param {Array} arr - input array\n* @returns {number} sum\n*/\nfunction sum( arr ) {\n\tvar len;\n\tvar s;\n\tvar i;\n\tlen = arr.length;\n\ts = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\ts += arr[ i ];\n\t}\n\treturn s;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar Number = require( '@stdlib/number/ctor' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar isInt = require( '@stdlib/math/base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isObject;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the incomplete beta function and its first derivative.\n*\n* @module @stdlib/math/base/special/kernel-betainc\n*\n* @example\n* var kernelBetainc = require( '@stdlib/math/base/special/kernel-betainc' );\n*\n* var out = kernelBetainc( 0.5, 2.0, 2.0, false, false );\n* // returns [ ~0.083, ~1.5 ]\n*\n* out = kernelBetainc( 0.2, 1.0, 2.0, true, false );\n* // returns [ 0.32, 1.6 ]\n*\n* var arr = new Array( 2 );\n* out = kernelBetainc( arr, 0.2, 1.0, 2.0, true, true );\n* // returns [ 0.64, 1.6 ]\n*\n* var bool = ( arr === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar kernelBetainc = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kernelBetainc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* One fourth times the mathematical constant `π`.\n*\n* @module @stdlib/constants/math/float64-fourth-pi\n* @type {number}\n*\n* @example\n* var FOURTH_PI = require( '@stdlib/constants/math/float64-fourth-pi' );\n* // returns 7.85398163397448309616e-1\n*/\n\n\n// MAIN //\n\n/**\n* One fourth times the mathematical constant `π`.\n*\n* @constant\n* @type {number}\n* @default 7.85398163397448309616e-1\n* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/Pi}\n*/\nvar FOURTH_PI = 7.85398163397448309616e-1;\n\n\n// EXPORTS //\n\nmodule.exports = FOURTH_PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the beta function.\n*\n* @module @stdlib/math/base/special/beta\n*\n* @example\n* var beta = require( '@stdlib/math/base/special/beta' );\n*\n* var v = beta( 0.0, 0.5 );\n* // returns Infinity\n*\n* v = beta( 1.0, 1.0 );\n* // returns 1.0\n*\n* v = beta( -1.0, 2.0 );\n* // returns NaN\n*\n* v = beta( 5.0, 0.2 );\n* // returns ~3.382\n*\n* v = beta( 4.0, 1.0 );\n* // returns 0.25\n*\n* v = beta( NaN, 2.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar beta = require( './beta.js' );\n\n\n// EXPORTS //\n\nmodule.exports = beta;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an unsigned 32-bit integer to a signed 32-bit integer.\n*\n* @module @stdlib/number/uint32/base/to-int32\n*\n* @example\n* var float64ToUint32 = require( '@stdlib/number/float64/base/to-uint32' );\n* var uint32ToInt32 = require( '@stdlib/number/uint32/base/to-int32' );\n*\n* var y = uint32ToInt32( float64ToUint32( 4294967295 ) );\n* // returns -1\n*\n* y = uint32ToInt32( float64ToUint32( 3 ) );\n* // returns 3\n*/\n\n// MODULES //\n\nvar uint32ToInt32 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = uint32ToInt32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the factorial function.\n*\n* @module @stdlib/math/base/special/factorial\n*\n* @example\n* var factorial = require( '@stdlib/math/base/special/factorial' );\n*\n* var v = factorial( 3.0 );\n* // returns 6.0\n*\n* v = factorial( -1.5 );\n* // returns ~-3.545\n*\n* v = factorial( -0.5 );\n* // returns ~1.772\n*\n* v = factorial( 0.5 );\n* // returns ~0.886\n*\n* v = factorial( -10.0 );\n* // returns NaN\n*\n* v = factorial( 171.0 );\n* // returns Infinity\n*\n* v = factorial( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar factorial = require( './factorial.js' );\n\n\n// EXPORTS //\n\nmodule.exports = factorial;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the incomplete gamma function.\n*\n* @module @stdlib/math/base/special/gammainc\n*\n* @example\n* var gammainc = require( '@stdlib/math/base/special/gammainc' );\n*\n* var v = gammainc( 6.0, 2.0 );\n* // returns ~0.9826\n*\n* v = gammainc( 1.0, 2.0, true, true );\n* // returns ~0.7358\n*\n* v = gammainc( 7.0, 5.0 );\n* // returns ~0.8270\n*\n* v = gammainc( 7.0, 5.0, false );\n* // returns ~19.8482\n*\n* v = gammainc( NaN, 2.0 );\n* // returns NaN\n*\n* v = gammainc( 6.0, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gammainc = require( './gammainc.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammainc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the complementary error function.\n*\n* @module @stdlib/math/base/special/erfc\n*\n* @example\n* var erfc = require( '@stdlib/math/base/special/erfc' );\n*\n* var y = erfc( 2.0 );\n* // returns ~0.0047\n*\n* y = erfc( -1.0 );\n* // returns ~1.8427\n*\n* y = erfc( 0.0 );\n* // returns 1.0\n*\n* y = erfc( Infinity );\n* // returns 0.0\n*\n* y = erfc( -Infinity );\n* // returns 2.0\n*\n* y = erfc( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar erfc = require( './erfc.js' );\n\n\n// EXPORTS //\n\nmodule.exports = erfc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @param {NumericArray} c - polynomial coefficients sorted in ascending degree\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*\n* @example\n* var v = evalpoly( [3.0,2.0,1.0], 10.0 ); // 3*10^0 + 2*10^1 + 1*10^2\n* // returns 123.0\n*/\nfunction evalpoly( c, x ) {\n\tvar p;\n\tvar i;\n\n\ti = c.length;\n\tif ( i < 2 || x === 0.0 ) {\n\t\tif ( i === 0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn c[ 0 ];\n\t}\n\ti -= 1;\n\tp = ( c[ i ] * x ) + c[ i-1 ];\n\ti -= 2;\n\twhile ( i >= 0 ) {\n\t\tp = ( p * x ) + c[ i ];\n\t\ti -= 1;\n\t}\n\treturn p;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The mathematical constant `π` times `2`.\n*\n* @module @stdlib/constants/math/float64-two-pi\n* @type {number}\n*\n* @example\n* var TWO_PI = require( '@stdlib/constants/math/float64-two-pi' );\n* // returns 6.283185307179586\n*/\n\n\n// MAIN //\n\n/**\n* The mathematical constant `π` times `2`.\n*\n* @constant\n* @type {number}\n* @default 6.283185307179586\n* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/Pi}\n*/\nvar TWO_PI = 6.28318530717958647692528676655900576839433879875021164194988918461563281257241799725606965068423413596429617303; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nmodule.exports = TWO_PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `function*()` support.\n*\n* @module @stdlib/assert/has-generator-support\n*\n* @example\n* var hasGeneratorSupport = require( '@stdlib/assert/has-generator-support' );\n*\n* var bool = hasGeneratorSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasGeneratorSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasGeneratorSupport;\n","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate a continued fraction approximation.\n*\n* @module @stdlib/math/base/tools/continued-fraction\n*\n* @example\n* var continuedFraction = require( '@stdlib/math/base/tools/continued-fraction' );\n*\n* // Continued fraction for (e-1)^(-1):\n* var gen = generator()\n* var out = continuedFraction( gen );\n* // returns ~0.582\n*\n* function generator() {\n*    var i = 0;\n*    return function() {\n*        i++;\n*        return [ i, i ];\n*    };\n* }\n*/\n\n// MODULES //\n\nvar hasGeneratorSupport = require( '@stdlib/assert/has-generator-support' );\nvar generator = require( './generators.js' );\nvar basic = require( './basic.js' );\n\n\n// MAIN //\n\nvar continuedFraction;\nif ( hasGeneratorSupport() ) {\n\tcontinuedFraction = generator;\n} else {\n\tcontinuedFraction = basic;\n}\n\n\n// EXPORTS //\n\nmodule.exports = continuedFraction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the inverse of the incomplete beta function.\n*\n* @module @stdlib/math/base/special/kernel-betaincinv\n*\n* @example\n* var kernelBetaincinv = require( '@stdlib/math/base/special/kernel-betaincinv' );\n*\n* var y = kernelBetaincinv( 3.0, 3.0, 0.2, 0.8 );\n* // returns [ ~0.327, ~0.673 ]\n*\n* y = kernelBetaincinv( 3.0, 3.0, 0.4, 0.6 );\n* // returns [ ~0.446, ~0.554 ]\n*\n* y = kernelBetaincinv( 1.0, 6.0, 0.4, 0.6 );\n* // returns [ ~0.082, ~0.918 ]\n*\n* y = kernelBetaincinv( 1.0, 6.0, 0.8, 0.2 );\n* // returns [ ~0.235, ~0.765 ]\n*/\n\n// MODULES //\n\nvar kernelBetaincinv = require( './kernel_betaincinv.js' );\n\n\n// EXPORTS //\n\nmodule.exports = kernelBetaincinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar MAX_VALUE = require( '@stdlib/constants/math/float64-max' );\n\n\n// VARIABLES //\n\nvar BIG = MAX_VALUE / 4.0;\n\n\n// MAIN //\n\n/**\n* Helper function used by root finding code to convert `eta` to `x`.\n*\n* @private\n* @param {number} t - first parameter\n* @param {number} a - second parameter\n* @returns {Function} root function\n*/\nfunction temmeRootFinder( t, a ) {\n\treturn roots;\n\n\t/**\n\t* Calculates roots.\n\t*\n\t* @private\n\t* @param {number} x - function value\n\t* @returns {Array} function roots\n\t*/\n\tfunction roots( x ) {\n\t\tvar f1;\n\t\tvar f;\n\t\tvar y;\n\n\t\ty = 1.0 - x;\n\t\tif ( y === 0.0 ) {\n\t\t\treturn [ -BIG, -BIG ];\n\t\t}\n\t\tif ( x === 0.0 ) {\n\t\t\treturn [ -BIG, -BIG ];\n\t\t}\n\t\tf = ln( x ) + ( a * ln( y ) ) + t;\n\t\tf1 = ( 1.0 / x ) - ( a / y );\n\t\treturn [ f, f1 ];\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = temmeRootFinder;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/tools/roots.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sign = require( '@stdlib/math/base/special/signum' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar ldexp = require( '@stdlib/math/base/special/ldexp' );\nvar MAX_VALUE = require( '@stdlib/constants/math/float64-max' );\n\n\n// MAIN //\n\n/**\n* Performs root finding via second order Newton-Raphson iteration.\n*\n* @private\n* @param {Array} fun - two-element array of the function and its first derivative\n* @param {number} guess - initial starting value.\n* @param {number} min - minimum possible value for the result,used as initial lower bracket.\n* @param {number} max - maximum possible value for the result, used as initial upper bracket.\n* @param {PositiveInteger} digits - desired number of binary digits\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} function value\n*/\nfunction newtonRaphsonIterate( fun, guess, min, max, digits, maxIter ) {\n\tvar f0last;\n\tvar delta1;\n\tvar delta2;\n\tvar factor;\n\tvar result;\n\tvar count;\n\tvar delta;\n\tvar res;\n\tvar f0;\n\tvar f1;\n\n\tf0 = 0.0;\n\tf0last = 0.0;\n\tresult = guess;\n\n\tfactor = ldexp( 1.0, 1.0 - digits );\n\tdelta = MAX_VALUE;\n\tdelta1 = MAX_VALUE;\n\tdelta2 = MAX_VALUE;\n\n\tcount = maxIter;\n\tdo {\n\t\tf0last = f0;\n\t\tdelta2 = delta1;\n\t\tdelta1 = delta;\n\t\tres = fun(result);\n\t\tf0 = res[ 0 ];\n\t\tf1 = res[ 1 ];\n\t\tcount -= 1;\n\t\tif ( f0 === 0.0 ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( f1 === 0.0 ) {\n\t\t\t// Oops zero derivative!!!\n\t\t\tif ( f0last === 0.0 ) {\n\t\t\t\t// Must be the first iteration, pretend that we had a previous one at either min or max:\n\t\t\t\tif ( result === min ) {\n\t\t\t\t\tguess = max;\n\t\t\t\t} else {\n\t\t\t\t\tguess = min;\n\t\t\t\t}\n\t\t\t\tf0last = fun( guess );\n\t\t\t\tdelta = guess - result;\n\t\t\t}\n\t\t\tif ( sign(f0last) * sign(f0) < 0 ) {\n\t\t\t\t// We've crossed over so move in opposite direction to last step:\n\t\t\t\tif ( delta < 0 ) {\n\t\t\t\t\tdelta = (result - min) / 2.0;\n\t\t\t\t} else {\n\t\t\t\t\tdelta = (result - max) / 2.0;\n\t\t\t\t}\n\t\t\t} else if ( delta < 0 ) {\n\t\t\t\tdelta = (result - max) / 2.0;\n\t\t\t} else {\n\t\t\t\tdelta = (result - min) / 2.0;\n\t\t\t}\n\t\t} else {\n\t\t\tdelta = f0 / f1;\n\t\t}\n\t\tif ( abs(delta * 2.0) > abs(delta2) ) {\n\t\t\t// Last two steps haven't converged, try bisection:\n\t\t\tdelta = ( delta > 0.0 ) ? (result-min) / 2.0 : (result-max) / 2.0;\n\t\t}\n\t\tguess = result;\n\t\tresult -= delta;\n\t\tif ( result <= min ) {\n\t\t\tdelta = 0.5 * (guess - min);\n\t\t\tresult = guess - delta;\n\t\t\tif ( result === min || result === max ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if ( result >= max ) {\n\t\t\tdelta = 0.5 * (guess - max);\n\t\t\tresult = guess - delta;\n\t\t\tif ( result === min || result === max ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Update brackets:\n\t\tif ( delta > 0.0 ) {\n\t\t\tmax = guess;\n\t\t} else {\n\t\t\tmin = guess;\n\t\t}\n\t}\n\twhile ( count && ( abs(result * factor) < abs(delta) ) );\n\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = newtonRaphsonIterate;\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\nvar polyvalAK1 = require( './polyval_ak1.js' );\nvar polyvalAK2 = require( './polyval_ak2.js' );\n\n\n// VARIABLES //\n\nvar THRESHOLD = 1.0e-8;\nvar ONEO12 = 0.0833333333333333333333333333333;\nvar ONEO120 = 0.00833333333333333333333333333333;\n\n// Polynomial coefficient workspace:\nvar AK = [ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Returns the positive number satisfying \\\\( \\eta^2/2=\\lambda-1-\\ln(\\lambda) \\\\) with \\\\( \\operatorname{sign}(\\lambda-1)=\\operatorname{sign}(\\eta) \\\\).\n*\n* @private\n* @param {number} eta - eta value\n* @returns {number} value satisfying equation\n*/\nfunction lambdaeta( eta ) {\n\tvar L2;\n\tvar L3;\n\tvar L4;\n\tvar L5;\n\tvar la;\n\tvar L;\n\tvar q;\n\tvar r;\n\tvar s;\n\n\ts = eta * eta * 0.5;\n\tif ( eta === 0.0 ) {\n\t\tla = 0.0;\n\t}\n\telse if ( eta < -1.0 ) {\n\t\tr = exp( -1.0 - s );\n\t\tla = polyvalAK1( r );\n\t}\n\telse if ( eta < 1.0 ) {\n\t\tr = eta;\n\t\tla = polyvalAK2( r );\n\t}\n\telse {\n\t\tr = 11.0 + s;\n\t\tL = ln( r );\n\t\tla = r + L;\n\t\tr = 1.0 / r;\n\t\tL2 = L * L;\n\t\tL3 = L2 * L;\n\t\tL4 = L3 * L;\n\t\tL5 = L4 * L;\n\t\tAK[ 1 ] = ( 2.0-L ) * 0.5;\n\t\tAK[ 2 ] = ( ( -9.0*L ) + 6.0 + ( 2.0*L2 ) ) / 6.0;\n\t\tAK[ 3 ] = -( (3*L3)+ (36*L) - (22*L2) - 12 ) * ONEO12;\n\t\tAK[ 4 ] = ( 60.0 + (350.0*L2) - (300.0*L) - (125.0*L3) + (12.0*L4) ) / 60.0; // eslint-disable-line max-len\n\t\tAK[ 5 ] = -(-120 - (274*L4) + (900*L) - (1700*L2) + (1125*L3) + (20*L5)) * ONEO120; // eslint-disable-line max-len\n\t\tla += ( L * r * evalpoly( AK, r ) );\n\t}\n\tr = 1.0;\n\tif (\n\t\t( eta > -3.5 && eta < -0.03 ) ||\n\t\t( eta > 0.03 && eta < 40.0 )\n\t) {\n\t\tr = 1.0;\n\t\tq = la;\n\t\tdo {\n\t\t\tla = q * ( s+ln(q) ) / ( q-1.0 );\n\t\t\tr = abs( ( q/la ) - 1.0 );\n\t\t\tq = la;\n\t\t} while ( r > THRESHOLD );\n\t}\n\treturn la;\n}\n\n\n// EXPORTS //\n\nmodule.exports = lambdaeta;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a plain object.\n*\n* @module @stdlib/assert/is-plain-object\n*\n* @example\n* var isPlainObject = require( '@stdlib/assert/is-plain-object' );\n*\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* bool = isPlainObject( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPlainObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2valueof.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isObject;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/assert/is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator from an array-like object.\n*\n* @module @stdlib/array/to-iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = array2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean over all iterated values.\n*\n* @module @stdlib/stats/iter/mean\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermean = require( '@stdlib/stats/iter/mean' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermean( rand );\n* // returns <number>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Hypergeometric distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/hypergeometric/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/hypergeometric/cdf' );\n*\n* var y = cdf( 1.0, 8, 4, 2 );\n* // returns ~0.786\n*\n* y = cdf( 1.5, 8, 4, 2 );\n* // returns ~0.786\n*\n* y = cdf( 2.0, 8, 4, 2 );\n* // returns 1.0\n*\n* y = cdf( 0.0, 8, 4, 2 );\n* // returns ~0.214\n*\n* var mycdf = cdf.factory( 30, 20, 5 );\n* y = mycdf( 4.0 );\n* // returns ~0.891\n*\n* y = mycdf( 1.0 );\n* // returns ~0.031\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a two-sample Student's t-Test.\n*\n* @module @stdlib/stats/ttest2\n*\n* @example\n* var ttest2 = require( '@stdlib/stats/ttest2' );\n* var incrspace = require( '@stdlib/math/utils/incrspace' );\n*\n* var a = incrspace( 1, 11, 1 );\n* var b = incrspace( 7, 21, 1 );\n*\n* var out = ttest2( a, b );\n* var table = out.print();\n*/\n\n// MODULES //\n\nvar ttest2 = require( './ttest2.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ttest2;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clusterData = exports.averageDistance = exports.euclideanDistance = void 0;\n\n// get euclidean distance between two equal-dimension vectors\nconst euclideanDistance = (a, b) => {\n  const size = Math.min(a.length, b.length);\n  let sum = 0;\n\n  for (let index = 0; index < size; index++) sum += (a[index] - b[index]) * (a[index] - b[index]);\n\n  return Math.sqrt(sum);\n}; // get average distance between sets of indexes, given distance matrix\n\n\nexports.euclideanDistance = euclideanDistance;\n\nconst averageDistance = (setA, setB, distances) => {\n  let distance = 0;\n\n  for (const a of setA) {\n    for (const b of setB) distance += distances[a][b];\n  }\n\n  return distance / setA.length / setB.length;\n}; // update progress by calling user onProgress and postMessage for web workers\n\n\nexports.averageDistance = averageDistance;\n\nconst updateProgress = (stepNumber, stepProgress, onProgress) => {\n  // currently only two distinct steps: computing distance matrix and clustering\n  const progress = stepNumber / 2 + stepProgress / 2; // if onProgress is defined and is a function, call onProgress\n\n  if (typeof onProgress === 'function') onProgress(progress); // if this script is being run as a web worker, call postMessage\n\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) postMessage(progress);\n}; // default onProgress function. console logs progress\n\n\nconst logProgress = progress => console.log('Clustering: ', (progress * 100).toFixed(1) + '%'); // the main clustering function\n\n\nconst clusterData = ({\n  data = [],\n  key = '',\n  distance = euclideanDistance,\n  linkage = averageDistance,\n  onProgress = logProgress\n}) => {\n  // extract values from specified key\n  if (key) data = data.map(datum => datum[key]); // compute distance between each data point and every other data point\n  // N x N matrix where N = data.length\n\n  const distances = data.map((datum, index) => {\n    updateProgress(0, index / (data.length - 1), onProgress); // get distance between datum and other datum\n\n    return data.map(otherDatum => distance(datum, otherDatum));\n  }); // initialize clusters to match data\n\n  const clusters = data.map((datum, index) => ({\n    height: 0,\n    indexes: [Number(index)]\n  })); // keep track of all tree slices\n\n  let clustersGivenK = []; // iterate through data\n\n  for (let iteration = 0; iteration < data.length; iteration++) {\n    updateProgress(1, (iteration + 1) / data.length, onProgress); // add current tree slice\n\n    clustersGivenK.push(clusters.map(cluster => cluster.indexes)); // dont find clusters to merge when only one cluster left\n\n    if (iteration >= data.length - 1) break; // initialize smallest distance\n\n    let nearestDistance = Infinity;\n    let nearestRow = 0;\n    let nearestCol = 0; // upper triangular matrix of clusters\n\n    for (let row = 0; row < clusters.length; row++) {\n      for (let col = row + 1; col < clusters.length; col++) {\n        // calculate distance between clusters\n        const distance = linkage(clusters[row].indexes, clusters[col].indexes, distances); // update smallest distance\n\n        if (distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestRow = row;\n          nearestCol = col;\n        }\n      }\n    } // merge nearestRow and nearestCol clusters together\n\n\n    const newCluster = {\n      indexes: [...clusters[nearestRow].indexes, ...clusters[nearestCol].indexes],\n      height: nearestDistance,\n      children: [clusters[nearestRow], clusters[nearestCol]]\n    }; // remove nearestRow and nearestCol clusters\n    // splice higher index first so it doesn't affect second splice\n\n    clusters.splice(Math.max(nearestRow, nearestCol), 1);\n    clusters.splice(Math.min(nearestRow, nearestCol), 1); // add new merged cluster\n\n    clusters.push(newCluster);\n  } // assemble full list of tree slices into array where index = k\n\n\n  clustersGivenK = [[], ...clustersGivenK.reverse()]; // return useful information\n\n  return {\n    clusters: clusters[0],\n    distances: distances,\n    order: clusters[0].indexes,\n    clustersGivenK: clustersGivenK\n  };\n};\n\nexports.clusterData = clusterData;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over each element in an array-like object.\n*\n* @param {ArrayLikeObject} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = array2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction array2iterator( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar i;\n\tif ( !isArrayLikeObject( src ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array-like object. Value: `' + src + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `' + fcn + '`.' );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\ti += 1;\n\t\tif ( FLG || i >= src.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, src[ i ], i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\ti += 1;\n\t\tif ( FLG || i >= src.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': src[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn array2iterator( src, fcn, thisArg );\n\t\t}\n\t\treturn array2iterator( src );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = array2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( '@stdlib/utils/define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for `Object.defineProperty` support.\n*\n* @module @stdlib/assert/has-define-property-support\n*\n* @example\n* var hasDefinePropertySupport = require( '@stdlib/assert/has-define-property-support' );\n*\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasDefinePropertySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './define_property.js' );\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\tvar bool;\n\n\tif ( typeof defineProperty !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\tbool = true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nvar hasProperty = require( '@stdlib/assert/has-property' );\nvar isObject = require( '@stdlib/assert/is-object' );\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an object. Value: `' + obj + '`.' );\n\t}\n\tif ( !isObject( descriptor ) ) {\n\t\tthrow new TypeError( 'invalid argument. Property descriptor must be an object. Value: `' + descriptor + '`.' );\n\t}\n\thasValue = hasProperty( descriptor, 'value' );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = hasProperty( descriptor, 'get' );\n\thasSet = hasProperty( descriptor, 'set' );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified property, either own or inherited.\n*\n* @module @stdlib/assert/has-property\n*\n* @example\n* var hasProp = require( '@stdlib/assert/has-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasProp( beep, 'boop' );\n* // returns true\n*\n* bool = hasProp( beep, 'bop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasProp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property, either own or inherited.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasProp( value, property ) {\n\tif ( value === void 0 || value === null ) {\n\t\treturn false;\n\t}\n\tif ( typeof property === 'symbol' ) {\n\t\treturn property in Object( value );\n\t}\n\treturn ( String( property ) in Object( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert/is-array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nmodule.exports = f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasSymbols = require( '@stdlib/assert/has-symbol-support' );\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Symbol` support.\n*\n* @module @stdlib/assert/has-symbol-support\n*\n* @example\n* var hasSymbolSupport = require( '@stdlib/assert/has-symbol-support' );\n*\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasSymbolSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar toStringTag = require( './tostringtag.js' );\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nmodule.exports = toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar typeOf = require( '@stdlib/utils/type-of' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* var typeOf = require( '@stdlib/utils/type-of' );\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nvar usePolyfill = require( './check.js' );\nvar typeOf = require( './typeof.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : typeOf;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar RE = require( './fixtures/re.js' );\nvar nodeList = require( './fixtures/nodelist.js' );\nvar typedarray = require( './fixtures/typedarray.js' );\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nmodule.exports = RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getGlobal = require( '@stdlib/utils/global' );\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nmodule.exports = nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the global object.\n*\n* @module @stdlib/utils/global\n*\n* @example\n* var getGlobal = require( '@stdlib/utils/global' );\n*\n* var g = getGlobal();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar getGlobal = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar getThis = require( './codegen.js' );\nvar Self = require( './self.js' );\nvar Win = require( './window.js' );\nvar Global = require( './global.js' );\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Must provide a boolean primitive. Value: `'+codegen+'`.' );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: Node.js\n\tif ( Global ) {\n\t\treturn Global;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func\n}\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof global === 'object' ) ? global : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( '@stdlib/utils/constructor-name' );\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar RE = require( '@stdlib/regexp/function-name' );\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nmodule.exports = constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n* @type {RegExp}\n*\n* @example\n* var RE_FUNCTION_NAME = require( '@stdlib/regexp/function-name' );\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = /^\\s*function\\s*([^(]*)/i;\n\n\n// EXPORTS //\n\nmodule.exports = RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Buffer instance.\n*\n* @module @stdlib/assert/is-buffer\n*\n* @example\n* var isBuffer = require( '@stdlib/assert/is-buffer' );\n*\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* v = isBuffer( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBuffer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( '@stdlib/assert/is-object-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert/is-object-like\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' );\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' ).isObjectLikeArray;\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( '@stdlib/assert/tools/array-function' );\nvar isObjectLike = require( './main.js' );\n\n\n// MAIN //\n\nsetReadOnly( isObjectLike, 'isObjectLikeArray', arrayfun( isObjectLike ) );\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function which tests if every element in an array passes a test condition.\n*\n* @module @stdlib/assert/tools/array-function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n* var arrayfcn = require( '@stdlib/assert/tools/array-function' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\n\n// MODULES //\n\nvar arrayfcn = require( './arrayfcn.js' );\n\n\n// EXPORTS //\n\nmodule.exports = arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert/is-array' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a function. Value: `' + predicate + '`.' );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( '@stdlib/utils/constructor-name' );\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object.\n*\n* @module @stdlib/assert/is-array-like-object\n*\n* @example\n* var isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\n*\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArrayLikeObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\nfunction isArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a numeric value toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Iterator symbol.\n*\n* @module @stdlib/symbol/iterator\n*\n* @example\n* var IteratorSymbol = require( '@stdlib/symbol/iterator' );\n*\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\n\n// MAIN //\n\nvar IteratorSymbol = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\n\n\n// MAIN //\n\n/**\n* Iterator symbol.\n*\n* @name IteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\nvar IteratorSymbol = ( hasIteratorSymbolSupport() ) ? Symbol.iterator : null;\n\n\n// EXPORTS //\n\nmodule.exports = IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Symbol.iterator` support.\n*\n* @module @stdlib/assert/has-iterator-symbol-support\n*\n* @example\n* var hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\n*\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasIteratorSymbolSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasIteratorSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'iterator' ) &&\n\t\ttypeof Symbol.iterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar incrmean = require( '@stdlib/stats/incr/mean' );\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean over all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} arithmetic mean\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermean( rand );\n* // returns <number>\n*/\nfunction itermean( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide an iterator. Value: `'+iterator+'`.' );\n\t}\n\tacc = incrmean();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else if ( hasOwnProp( v, 'value' ) ) {\n\t\t\tacc( NaN );\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is iterator-like.\n*\n* @module @stdlib/assert/is-iterator-like\n*\n* @example\n* var isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\n*\n* var it = {\n*     'next': function noop() {}\n* };\n* var bool = isIteratorLike( it );\n* // returns true\n*\n* bool = isIteratorLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isIterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is iterator-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is iterator-like\n*\n* @example\n* var it = {\n*     'next': function noop() {}\n* };\n* var bool = isIteratorLike( it );\n* // returns true\n*\n* @example\n* var bool = isIteratorLike( {} );\n* // returns false\n*\n* @example\n* var bool = isIteratorLike( null );\n* // returns false\n*/\nfunction isIteratorLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\tisFunction( value.next ) &&\n\t\tvalue.next.length === 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isIteratorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an arithmetic mean incrementally.\n*\n* @module @stdlib/stats/incr/mean\n*\n* @example\n* var incrmean = require( '@stdlib/stats/incr/mean' );\n*\n* var accumulator = incrmean();\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns -1.5\n*\n* mu = accumulator();\n* // returns -1.5\n*/\n\n// MODULES //\n\nvar incrmean = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns an accumulator function which incrementally computes an arithmetic mean.\n*\n* ## Method\n*\n* -   This implementation uses [Welford's method][algorithms-variance] for efficient computation, which can be derived as follows\n*\n*     ```tex\n*     \\begin{align*}\n*     \\mu_n &= \\frac{1}{n} \\sum_{i=0}^{n-1} x_i \\\\\n*           &= \\frac{1}{n} \\biggl(x_{n-1} + \\sum_{i=0}^{n-2} x_i \\biggr) \\\\\n*           &= \\frac{1}{n} (x_{n-1} + (n-1)\\mu_{n-1}) \\\\\n*           &= \\mu_{n-1} + \\frac{1}{n} (x_{n-1} - \\mu_{n-1})\n*     \\end{align*}\n*     ```\n*\n* [algorithms-variance]: https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmean();\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns -1.5\n*\n* mu = accumulator();\n* // returns -1.5\n*/\nfunction incrmean() {\n\tvar delta;\n\tvar mu;\n\tvar N;\n\n\tmu = 0.0;\n\tN = 0;\n\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean. If not provided a value, the accumulator function returns the current mean.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} mean value or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\tif ( N === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn mu;\n\t\t}\n\t\tN += 1;\n\t\tdelta = x - mu;\n\t\tmu += delta / N;\n\t\treturn mu;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar trunc = require( '@stdlib/math/base/special/trunc' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar pmf = require( '@stdlib/stats/base/dists/hypergeometric/pmf' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar sum = require( './sum.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a hypergeometric distribution with population size `N`, subpopulation size `K`, and number of draws `n` at a value `x`.\n*\n* @param {number} x - input value\n* @param {NonNegativeInteger} N - population size\n* @param {NonNegativeInteger} K - subpopulation size\n* @param {NonNegativeInteger} n - number of draws\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 1.0, 8, 4, 2 );\n* // returns ~0.786\n*\n* @example\n* var y = cdf( 1.5, 8, 4, 2 );\n* // returns ~0.786\n*\n* @example\n* var y = cdf( 2.0, 8, 4, 2 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( 0, 8, 4, 2 );\n* // returns ~0.214\n*\n* @example\n* var y = cdf( NaN, 10, 5, 2 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 5, 2 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 10, NaN, 2 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 10, 5, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 10.5, 5, 2 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 10, 1.5, 2 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 10, 5, -2.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 10, 5, 12 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, 8, 3, 9 );\n* // returns NaN\n*/\nfunction cdf( x, N, K, n ) {\n\tvar denom;\n\tvar probs;\n\tvar num;\n\tvar ret;\n\tvar i;\n\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( N ) ||\n\t\tisnan( K ) ||\n\t\tisnan( n ) ||\n\t\t!isNonNegativeInteger( N ) ||\n\t\t!isNonNegativeInteger( K ) ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tN === PINF ||\n\t\tK === PINF ||\n\t\tK > N ||\n\t\tn > N\n\t) {\n\t\treturn NaN;\n\t}\n\tx = trunc( x );\n\tif ( x < max( 0, n + K - N ) ) {\n\t\treturn 0.0;\n\t}\n\tif ( x >= min( n, K ) ) {\n\t\treturn 1.0;\n\t}\n\n\tprobs = new Array( x + 1 );\n\tprobs[ x ] = pmf( x, N, K, n );\n\n\t/*\n\t* Use recurrence relation:\n\t* (x+1)( N - K - (n-x-1))P(X=x+1)=(K-x)(n-x)P(X=x)\n\t*/\n\tfor ( i = x - 1; i >= 0; i-- ) {\n\t\tnum = ( i + 1 ) * ( N - K - (n-i-1) );\n\t\tdenom = ( K - i ) * ( n - i );\n\t\tprobs[ i ] = ( num / denom ) * probs[ i + 1 ];\n\t}\n\tret = sum( probs );\n\treturn min( ret, 1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is a nonnegative integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -10.0 );\n* // returns false\n*/\nfunction isNonNegativeInteger( x ) {\n\treturn (floor(x) === x && x >= 0);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\n\n\n// MAIN //\n\n/**\n* Rounds a numeric value toward zero.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = trunc( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = trunc( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = trunc( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = trunc( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = trunc( NaN );\n* // returns NaN\n*\n* @example\n* var v = trunc( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = trunc( -Infinity );\n* // returns -Infinity\n*/\nfunction trunc( x ) {\n\tif ( x < 0.0 ) {\n\t\treturn ceil( x );\n\t}\n\treturn floor( x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = trunc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a numeric value toward positive infinity.\n*\n* @module @stdlib/math/base/special/ceil\n*\n* @example\n* var ceil = require( '@stdlib/math/base/special/ceil' );\n*\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* v = ceil( 9.99999 );\n* // returns 10.0\n*\n* v = ceil( 0.0 );\n* // returns 0.0\n*\n* v = ceil( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar ceil = require( './ceil.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ceil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a numeric value toward positive infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = ceil( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = ceil( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = ceil( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = ceil( NaN );\n* // returns NaN\n*/\nvar ceil = Math.ceil; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = ceil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the maximum value.\n*\n* @param {number} [x] - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {number} maximum value\n*\n* @example\n* var v = max( 3.14, 4.2 );\n* // returns 4.2\n*\n* @example\n* var v = max( 5.9, 3.14, 4.2 );\n* // returns 5.9\n*\n* @example\n* var v = max( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = max( +0.0, -0.0 );\n* // returns +0.0\n*/\nfunction max( x, y ) {\n\tvar len;\n\tvar m;\n\tvar v;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 2 ) {\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === PINF || y === PINF ) {\n\t\t\treturn PINF;\n\t\t}\n\t\tif ( x === y && x === 0.0 ) {\n\t\t\tif ( isPositiveZero( x ) ) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn y;\n\t\t}\n\t\tif ( x > y ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn y;\n\t}\n\tm = NINF;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arguments[ i ];\n\t\tif ( isnan( v ) || v === PINF ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v > m ) {\n\t\t\tm = v;\n\t\t} else if (\n\t\t\tv === m &&\n\t\t\tv === 0.0 &&\n\t\t\tisPositiveZero( v )\n\t\t) {\n\t\t\tm = v;\n\t\t}\n\t}\n\treturn m;\n}\n\n\n// EXPORTS //\n\nmodule.exports = max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a numeric value is positive zero.\n*\n* @module @stdlib/math/base/assert/is-positive-zero\n*\n* @example\n* var isPositiveZero = require( '@stdlib/math/base/assert/is-positive-zero' );\n*\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* bool = isPositiveZero( -0.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPositiveZero = require( './is_positive_zero.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Tests if a numeric value is positive zero.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is positive zero\n*\n* @example\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveZero( -0.0 );\n* // returns false\n*/\nfunction isPositiveZero( x ) {\n\treturn (x === 0.0 && 1.0/x === PINF);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum value.\n*\n* @param {number} [x] - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {number} minimum value\n*\n* @example\n* var v = min( 3.14, 4.2 );\n* // returns 3.14\n*\n* @example\n* var v = min( 5.9, 3.14, 4.2 );\n* // returns 3.14\n*\n* @example\n* var v = min( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = min( +0.0, -0.0 );\n* // returns -0.0\n*/\nfunction min( x, y ) {\n\tvar len;\n\tvar m;\n\tvar v;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 2 ) {\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === NINF || y === NINF ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tif ( x === y && x === 0.0 ) {\n\t\t\tif ( isNegativeZero( x ) ) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn y;\n\t\t}\n\t\tif ( x < y ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn y;\n\t}\n\tm = PINF;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arguments[ i ];\n\t\tif ( isnan( v ) || v === NINF ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < m ) {\n\t\t\tm = v;\n\t\t} else if (\n\t\t\tv === m &&\n\t\t\tv === 0.0 &&\n\t\t\tisNegativeZero( v )\n\t\t) {\n\t\t\tm = v;\n\t\t}\n\t}\n\treturn m;\n}\n\n\n// EXPORTS //\n\nmodule.exports = min;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\n\n\n// MAIN //\n\n/**\n* Tests if a numeric value is negative zero.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is negative zero\n*\n* @example\n* var bool = isNegativeZero( -0.0 );\n* // returns true\n*\n* @example\n* var bool = isNegativeZero( 0.0 );\n* // returns false\n*/\nfunction isNegativeZero( x ) {\n\treturn (x === 0.0 && 1.0/x === NINF);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar fln = require( '@stdlib/math/base/special/factorialln' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a hypergeometric distribution with population size `N`, subpopulation size `K`, and number of draws `n`.\n*\n* @param {number} x - input value\n* @param {NonNegativeInteger} N - population size\n* @param {NonNegativeInteger} K - subpopulation size\n* @param {NonNegativeInteger} n - number of draws\n* @returns {Probability} evaluated PMF\n*\n* @example\n* var y = pmf( 1.0, 8, 4, 2 );\n* // returns ~0.571\n*\n* @example\n* var y = pmf( 2.0, 8, 4, 2 );\n* // returns ~0.214\n*\n* @example\n* var y = pmf( 0.0, 8, 4, 2 );\n* // returns ~0.214\n*\n* @example\n* var y = pmf( 1.5, 8, 4, 2 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( NaN, 10, 5, 2 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, NaN, 5, 2 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, 10, NaN, 2 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 0.0, 10, 5, NaN );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 10.5, 5, 2 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 5, 1.5, 2 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 10, 5, -2.0 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 10, 5, 12 );\n* // returns NaN\n*\n* @example\n* var y = pmf( 2.0, 8, 3, 9 );\n* // returns NaN\n*/\nfunction pmf( x, N, K, n ) {\n\tvar ldenom;\n\tvar lnum;\n\tvar lpmf;\n\tvar maxs;\n\tvar mins;\n\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( N ) ||\n\t\tisnan( K ) ||\n\t\tisnan( n ) ||\n\t\t!isNonNegativeInteger( N ) ||\n\t\t!isNonNegativeInteger( K ) ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tN === PINF ||\n\t\tK === PINF ||\n\t\tK > N ||\n\t\tn > N\n\t) {\n\t\treturn NaN;\n\t}\n\tmins = max( 0, n + K - N );\n\tmaxs = min( K, n );\n\tif (\n\t\tisNonNegativeInteger( x ) &&\n\t\tmins <= x &&\n\t\tx <= maxs\n\t) {\n\t\tlnum = fln( n ) + fln( K ) + fln( N - n ) + fln( N - K );\n\t\tldenom = fln( N ) + fln( x ) + fln( n - x );\n\t\tldenom += fln( K - x ) + fln( N - K + x - n );\n\t\tlpmf = lnum - ldenom;\n\t\treturn exp( lpmf );\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pmf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_exp.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar trunc = require( '@stdlib/math/base/special/trunc' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar expmulti = require( './expmulti.js' );\n\n\n// VARIABLES //\n\nvar LN2_HI = 6.93147180369123816490e-01;\nvar LN2_LO = 1.90821492927058770002e-10;\nvar LOG2_E = 1.44269504088896338700e+00;\nvar OVERFLOW = 7.09782712893383973096e+02;\nvar UNDERFLOW = -7.45133219101941108420e+02;\nvar NEARZERO = 1.0 / (1 << 28); // 2^-28;\nvar NEG_NEARZERO = -NEARZERO;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural exponential function.\n*\n* ## Method\n*\n* 1.  We reduce \\\\( x \\\\) to an \\\\( r \\\\) so that \\\\( |r| \\leq 0.5 \\cdot \\ln(2) \\approx 0.34658 \\\\). Given \\\\( x \\\\), we find an \\\\( r \\\\) and integer \\\\( k \\\\) such that\n*\n*     ```tex\n*     \\begin{align*}\n*     x &= k \\cdot \\ln(2) + r \\\\\n*     |r| &\\leq 0.5 \\cdot \\ln(2)\n*     \\end{align*}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     \\\\( r \\\\) can be represented as \\\\( r = \\mathrm{hi} - \\mathrm{lo} \\\\) for better accuracy.\n*\n*     <!-- </note> -->\n*\n* 2.  We approximate of \\\\( e^{r} \\\\) by a special rational function on the interval \\\\(\\[0,0.34658]\\\\):\n*\n*     ```tex\n*     \\begin{align*}\n*     R\\left(r^2\\right) &= r \\cdot \\frac{ e^{r}+1 }{ e^{r}-1 } \\\\\n*     &= 2 + \\frac{r^2}{6} - \\frac{r^4}{360} + \\ldots\n*     \\end{align*}\n*     ```\n*\n*     We use a special Remes algorithm on \\\\(\\[0,0.34658]\\\\) to generate a polynomial of degree \\\\(5\\\\) to approximate \\\\(R\\\\). The maximum error of this polynomial approximation is bounded by \\\\(2^{-59}\\\\). In other words,\n*\n*     ```tex\n*     R(z) \\sim 2 + P_1 z + P_2 z^2 + P_3 z^3 + P_4 z^4 + P_5 z^5\n*     ```\n*\n*     where \\\\( z = r^2 \\\\) and\n*\n*     ```tex\n*     \\left|  2 + P_1 z + \\ldots + P_5 z^5  - R(z) \\right| \\leq 2^{-59}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     The values of \\\\( P_1 \\\\) to \\\\( P_5 \\\\) are listed in the source code.\n*\n*     <!-- </note> -->\n*\n*     The computation of \\\\( e^{r} \\\\) thus becomes\n*\n*     ```tex\n*     \\begin{align*}\n*     e^{r} &= 1 + \\frac{2r}{R-r} \\\\\n*           &= 1 + r + \\frac{r \\cdot R_1(r)}{2 - R_1(r)}\\ \\text{for better accuracy}\n*     \\end{align*}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     R_1(r) = r - P_1\\ r^2 + P_2\\ r^4 + \\ldots + P_5\\ r^{10}\n*     ```\n*\n* 3.  We scale back to obtain \\\\( e^{x} \\\\). From step 1, we have\n*\n*     ```tex\n*     e^{x} = 2^k e^{r}\n*     ```\n*\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* e^\\infty &= \\infty \\\\\n* e^{-\\infty} &= 0 \\\\\n* e^{\\mathrm{NaN}} &= \\mathrm{NaN} \\\\\n* e^0 &= 1\\ \\mathrm{is\\ exact\\ for\\ finite\\ argument\\ only}\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* -   According to an error analysis, the error is always less than \\\\(1\\\\) ulp (unit in the last place).\n*\n* -   For an IEEE double,\n*\n*     -   if \\\\(x > 7.09782712893383973096\\mbox{e+}02\\\\), then \\\\(e^{x}\\\\) overflows\n*     -   if \\\\(x < -7.45133219101941108420\\mbox{e+}02\\\\), then \\\\(e^{x}\\\\) underflows\n*\n* -   The hexadecimal values included in the source code are the intended ones for the used constants. Decimal values may be used, provided that the compiler will convert from decimal to binary accurately enough to produce the intended hexadecimal values.\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = exp( 4.0 );\n* // returns ~54.5982\n*\n* @example\n* var v = exp( -9.0 );\n* // returns ~1.234e-4\n*\n* @example\n* var v = exp( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = exp( NaN );\n* // returns NaN\n*/\nfunction exp( x ) {\n\tvar hi;\n\tvar lo;\n\tvar k;\n\n\tif ( isnan( x ) || x === PINF ) {\n\t\treturn x;\n\t}\n\tif ( x === NINF ) {\n\t\treturn 0.0;\n\t}\n\tif ( x > OVERFLOW ) {\n\t\treturn PINF;\n\t}\n\tif ( x < UNDERFLOW ) {\n\t\treturn 0.0;\n\t}\n\tif (\n\t\tx > NEG_NEARZERO &&\n\t\tx < NEARZERO\n\t) {\n\t\treturn 1.0 + x;\n\t}\n\t// Reduce and compute `r = hi - lo` for extra precision.\n\tif ( x < 0.0 ) {\n\t\tk = trunc( (LOG2_E*x) - 0.5 );\n\t} else {\n\t\tk = trunc( (LOG2_E*x) + 0.5 );\n\t}\n\thi = x - (k*LN2_HI);\n\tlo = k * LN2_LO;\n\n\treturn expmulti( hi, lo, k );\n}\n\n\n// EXPORTS //\n\nmodule.exports = exp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_exp.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ldexp = require( '@stdlib/math/base/special/ldexp' );\nvar polyvalP = require( './polyval_p.js' );\n\n\n// MAIN //\n\n/**\n* Computes \\\\(e^{r} 2^k\\\\) where \\\\(r = \\mathrm{hi} - \\mathrm{lo}\\\\) and \\\\(|r| \\leq \\ln(2)/2\\\\).\n*\n* @private\n* @param {number} hi - upper bound\n* @param {number} lo - lower bound\n* @param {integer} k - power of 2\n* @returns {number} function value\n*/\nfunction expmulti( hi, lo, k ) {\n\tvar r;\n\tvar t;\n\tvar c;\n\tvar y;\n\n\tr = hi - lo;\n\tt = r * r;\n\tc = r - ( t*polyvalP( t ) );\n\ty = 1.0 - ( lo - ( (r*c)/(2.0-c) ) - hi);\n\n\treturn ldexp( y, k );\n}\n\n\n// EXPORTS //\n\nmodule.exports = expmulti;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// NOTES //\n\n/*\n* => ldexp: load exponent (see [The Open Group]{@link http://pubs.opengroup.org/onlinepubs/9699919799/functions/ldexp.html} and [cppreference]{@link http://en.cppreference.com/w/c/numeric/math/ldexp}).\n*/\n\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar BIAS = require( '@stdlib/constants/math/float64-exponent-bias' );\nvar MAX_EXPONENT = require( '@stdlib/constants/math/float64-max-base2-exponent' );\nvar MAX_SUBNORMAL_EXPONENT = require( '@stdlib/constants/math/float64-max-base2-exponent-subnormal' );\nvar MIN_SUBNORMAL_EXPONENT = require( '@stdlib/constants/math/float64-min-base2-exponent-subnormal' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\nvar copysign = require( '@stdlib/math/base/special/copysign' );\nvar normalize = require( '@stdlib/number/float64/base/normalize' );\nvar floatExp = require( '@stdlib/number/float64/base/exponent' );\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\n\n\n// VARIABLES //\n\n// 1/(1<<52) = 1/(2**52) = 1/4503599627370496\nvar TWO52_INV = 2.220446049250313e-16;\n\n// Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223\nvar CLEAR_EXP_MASK = 0x800fffff>>>0; // asm type annotation\n\n// Normalization workspace:\nvar FRAC = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Multiplies a double-precision floating-point number by an integer power of two.\n*\n* @param {number} frac - fraction\n* @param {integer} exp - exponent\n* @returns {number} double-precision floating-point number\n*\n* @example\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* @example\n* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* @example\n* var x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* @example\n* var x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* @example\n* var x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* @example\n* var x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* @example\n* var x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\nfunction ldexp( frac, exp ) {\n\tvar high;\n\tvar m;\n\tif (\n\t\tfrac === 0.0 || // handles +-0\n\t\tisnan( frac ) ||\n\t\tisInfinite( frac )\n\t) {\n\t\treturn frac;\n\t}\n\t// Normalize the input fraction:\n\tnormalize( FRAC, frac );\n\tfrac = FRAC[ 0 ];\n\texp += FRAC[ 1 ];\n\n\t// Extract the exponent from `frac` and add it to `exp`:\n\texp += floatExp( frac );\n\n\t// Check for underflow/overflow...\n\tif ( exp < MIN_SUBNORMAL_EXPONENT ) {\n\t\treturn copysign( 0.0, frac );\n\t}\n\tif ( exp > MAX_EXPONENT ) {\n\t\tif ( frac < 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn PINF;\n\t}\n\t// Check for a subnormal and scale accordingly to retain precision...\n\tif ( exp <= MAX_SUBNORMAL_EXPONENT ) {\n\t\texp += 52;\n\t\tm = TWO52_INV;\n\t} else {\n\t\tm = 1.0;\n\t}\n\t// Split the fraction into higher and lower order words:\n\ttoWords( WORDS, frac );\n\thigh = WORDS[ 0 ];\n\n\t// Clear the exponent bits within the higher order word:\n\thigh &= CLEAR_EXP_MASK;\n\n\t// Set the exponent bits to the new exponent:\n\thigh |= ((exp+BIAS) << 20);\n\n\t// Create a new floating-point number:\n\treturn m * fromWords( high, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ldexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-max-base2-exponent\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT = require( '@stdlib/constants/math/float64-max-base2-exponent' );\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* ```text\n* 11111111110 => 2046 - BIAS = 1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE2_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-max-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/math/float64-max-base2-exponent-subnormal' );\n* // returns -1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* 00000000000 => 0 - BIAS = -1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default -1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-min-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants/math/float64-min-base2-exponent-subnormal' );\n* // returns -1074\n*/\n\n\n// MAIN //\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* -(BIAS+(52-1)) = -(1023+51) = -1074\n* ```\n*\n* where `BIAS = 1023` and `52` is the number of digits in the significand.\n*\n* @constant\n* @type {integer32}\n* @default -1074\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\n\n\n// MAIN //\n\n/**\n* Tests if a numeric value is infinite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is infinite\n*\n* @example\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( -Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( NaN );\n* // returns false\n*/\nfunction isInfinite( x ) {\n\treturn (x === PINF || x === NINF);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\n\n\n// VARIABLES //\n\n// 10000000000000000000000000000000 => 2147483648 => 0x80000000\nvar SIGN_MASK = 0x80000000>>>0; // asm type annotation\n\n// 01111111111111111111111111111111 => 2147483647 => 0x7fffffff\nvar MAGNITUDE_MASK = 0x7fffffff|0; // asm type annotation\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @param {number} x - number from which to derive a magnitude\n* @param {number} y - number from which to derive a sign\n* @returns {number} a double-precision floating-point number\n*\n* @example\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* @example\n* var z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* @example\n* var z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\nfunction copysign( x, y ) {\n\tvar hx;\n\tvar hy;\n\n\t// Split `x` into higher and lower order words:\n\ttoWords( WORDS, x );\n\thx = WORDS[ 0 ];\n\n\t// Turn off the sign bit of `x`:\n\thx &= MAGNITUDE_MASK;\n\n\t// Extract the higher order word from `y`:\n\thy = getHighWord( y );\n\n\t// Leave only the sign bit of `y` turned on:\n\thy &= SIGN_MASK;\n\n\t// Copy the sign bit of `y` to `x`:\n\thx |= hy;\n\n\t// Return a new value having the same magnitude as `x`, but with the sign of `y`:\n\treturn fromWords( hx, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = copysign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fcn = require( './to_words.js' );\n\n\n// MAIN //\n\n/**\n* Splits a floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( out, x ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn fcn( [ 0, 0 ], out );\n\t}\n\treturn fcn( out, x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar indices = require( './indices.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Splits a floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var Uint32Array = require( '@stdlib/array/uint32' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( out, x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tout[ 0 ] = UINT32_VIEW[ HIGH ];\n\tout[ 1 ] = UINT32_VIEW[ LOW ];\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint32Array` support.\n*\n* @module @stdlib/assert/has-uint32array-support\n*\n* @example\n* var hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\n*\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint32Array = require( '@stdlib/assert/is-uint32array' );\nvar UINT32_MAX = require( '@stdlib/constants/math/uint32-max' );\nvar GlobalUint32Array = require( './uint32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];\n\t\tarr = new GlobalUint32Array( arr );\n\t\tbool = (\n\t\t\tisUint32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint32Array.\n*\n* @module @stdlib/assert/is-uint32array\n*\n* @example\n* var isUint32Array = require( '@stdlib/assert/is-uint32array' );\n*\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* bool = isUint32Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint32Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/\nfunction isUint32Array( value ) {\n\treturn (\n\t\t( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants/math/uint32-max\n* @type {uinteger32}\n*\n* @example\n* var UINT32_MAX = require( '@stdlib/constants/math/uint32-max' );\n* // returns 4294967295\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar UINT32_MAX = 4294967295;\n\n\n// EXPORTS //\n\nmodule.exports = UINT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Float64Array` support.\n*\n* @module @stdlib/assert/has-float64array-support\n*\n* @example\n* var hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\n*\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFloat64Array = require( '@stdlib/assert/is-float64array' );\nvar GlobalFloat64Array = require( './float64array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat64ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );\n\t\tbool = (\n\t\t\tisFloat64Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.14 &&\n\t\t\tarr[ 2 ] === -3.14 &&\n\t\t\tarr[ 3 ] !== arr[ 3 ]\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Float64Array.\n*\n* @module @stdlib/assert/is-float64array\n*\n* @example\n* var isFloat64Array = require( '@stdlib/assert/is-float64array' );\n*\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* bool = isFloat64Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat64Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\nfunction isFloat64Array( value ) {\n\treturn (\n\t\t( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nmodule.exports = indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctors = require( './ctors.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an environment is little endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is little endian\n*\n* @example\n* var bool = isLittleEndian();\n* // returns <boolean>\n*/\nfunction isLittleEndian() {\n\tvar uint16view;\n\tvar uint8view;\n\n\tuint16view = new ctors[ 'uint16' ]( 1 );\n\n\t/*\n\t* Set the uint16 view to a value having distinguishable lower and higher order words.\n\t*\n\t* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n\t*/\n\tuint16view[ 0 ] = 0x1234;\n\n\t// Create a uint8 view on top of the uint16 buffer:\n\tuint8view = new ctors[ 'uint8' ]( uint16view.buffer );\n\n\t// If little endian, the least significant byte will be first...\n\treturn ( uint8view[ 0 ] === 0x34 );\n}\n\n\n// MAIN //\n\nbool = isLittleEndian();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\n\n\n// MAIN //\n\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint8': Uint8Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint8\n*\n* @example\n* var ctor = require( '@stdlib/array/uint8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\nvar builtin = require( './uint8array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint8Array` support.\n*\n* @module @stdlib/assert/has-uint8array-support\n*\n* @example\n* var hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\n*\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8Array = require( '@stdlib/assert/is-uint8array' );\nvar UINT8_MAX = require( '@stdlib/constants/math/uint8-max' );\nvar GlobalUint8Array = require( './uint8array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT8_MAX+1, UINT8_MAX+2 ];\n\t\tarr = new GlobalUint8Array( arr );\n\t\tbool = (\n\t\t\tisUint8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&           // truncation\n\t\t\tarr[ 2 ] === UINT8_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&           // wrap around\n\t\t\tarr[ 4 ] === 1              // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint8Array.\n*\n* @module @stdlib/assert/is-uint8array\n*\n* @example\n* var isUint8Array = require( '@stdlib/assert/is-uint8array' );\n*\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* bool = isUint8Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint8Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint8Array = ( typeof Uint8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/\nfunction isUint8Array( value ) {\n\treturn (\n\t\t( hasUint8Array && value instanceof Uint8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* @module @stdlib/constants/math/uint8-max\n* @type {integer32}\n*\n* @example\n* var UINT8_MAX = require( '@stdlib/constants/math/uint8-max' );\n* // returns 255\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{8} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 255\n*/\nvar UINT8_MAX = 255|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = UINT8_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint16\n*\n* @example\n* var ctor = require( '@stdlib/array/uint16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\nvar builtin = require( './uint16array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint16Array` support.\n*\n* @module @stdlib/assert/has-uint16array-support\n*\n* @example\n* var hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\n*\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint16Array = require( '@stdlib/assert/is-uint16array' );\nvar UINT16_MAX = require( '@stdlib/constants/math/uint16-max' );\nvar GlobalUint16Array = require( './uint16array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT16_MAX+1, UINT16_MAX+2 ];\n\t\tarr = new GlobalUint16Array( arr );\n\t\tbool = (\n\t\t\tisUint16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT16_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint16Array.\n*\n* @module @stdlib/assert/is-uint16array\n*\n* @example\n* var isUint16Array = require( '@stdlib/assert/is-uint16array' );\n*\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* bool = isUint16Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint16Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint16Array = ( typeof Uint16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/\nfunction isUint16Array( value ) {\n\treturn (\n\t\t( hasUint16Array && value instanceof Uint16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* @module @stdlib/constants/math/uint16-max\n* @type {integer32}\n*\n* @example\n* var UINT16_MAX = require( '@stdlib/constants/math/uint16-max' );\n* // returns 65535\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{16} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 1111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 65535\n*/\nvar UINT16_MAX = 65535|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = UINT16_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar HIGH = require( './high.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} higher order word\n*\n* @example\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\nfunction getHighWord( x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\treturn UINT32_VIEW[ HIGH ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = getHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nmodule.exports = HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar indices = require( './indices.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n*\n* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {uinteger32} high - higher order word (unsigned 32-bit integer)\n* @param {uinteger32} low - lower order word (unsigned 32-bit integer)\n* @returns {number} floating-point number\n*\n* @example\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* @example\n* var v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* @example\n* var v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* @example\n* var v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* @example\n* var v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* @example\n* var v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\nfunction fromWords( high, low ) {\n\tUINT32_VIEW[ HIGH ] = high;\n\tUINT32_VIEW[ LOW ] = low;\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nmodule.exports = indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @module @stdlib/number/float64/base/normalize\n*\n* @example\n* var normalize = require( '@stdlib/number/float64/base/normalize' );\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var normalize = require( '@stdlib/number/float64/base/normalize' );\n*\n* var out = new Float64Array( 2 );\n*\n* var v = normalize( out, 3.14e-319 );\n* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar normalize = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar fcn = require( './normalize.js' );\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( new Array( 2 ), 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = new Float64Array( 2 );\n*\n* var v = normalize( out, 3.14e-319 );\n* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var out = normalize( new Array( 2 ), 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* var out = normalize( new Array( 2 ), Infinity );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var out = normalize( new Array( 2 ), -Infinity );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( new Array( 2 ), NaN );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( out, x ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn fcn( [ 0.0, 0 ], out );\n\t}\n\treturn fcn( out, x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants/math/float64-smallest-normal' );\nvar isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar abs = require( '@stdlib/math/base/special/abs' );\n\n\n// VARIABLES //\n\n// (1<<52)\nvar SCALAR = 4503599627370496;\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var pow = require( '@stdlib/math/base/special/pow' );\n*\n* var out = normalize( new Array( 2 ), 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( new Array( 2 ), 0.0 );\n* // returns [ 0.0, 0 ];\n*\n* @example\n* var out = normalize( new Array( 2 ), Infinity );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var out = normalize( new Array( 2 ), -Infinity );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( new Array( 2 ), NaN );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( out, x ) {\n\tif ( isnan( x ) || isInfinite( x ) ) {\n\t\tout[ 0 ] = x;\n\t\tout[ 1 ] = 0;\n\t\treturn out;\n\t}\n\tif ( x !== 0.0 && abs( x ) < FLOAT64_SMALLEST_NORMAL ) {\n\t\tout[ 0 ] = x * SCALAR;\n\t\tout[ 1 ] = -52;\n\t\treturn out;\n\t}\n\tout[ 0 ] = x;\n\tout[ 1 ] = 0;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the absolute value of `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\nfunction abs( x ) {\n\tif ( x < 0.0 ) {\n\t\treturn -x;\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn 0.0; // handle negative zero\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/exponent\n*\n* @example\n* var exponent = require( '@stdlib/number/float64/base/exponent' );\n*\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* exp = exponent( -3.14 );\n* // returns 1\n*\n* exp = exponent( 0.0 );\n* // returns -1023\n*\n* exp = exponent( NaN );\n* // returns 1024\n*/\n\n// MODULES //\n\nvar exponent = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = exponent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar EXP_MASK = require( '@stdlib/constants/math/float64-high-word-exponent-mask' );\nvar BIAS = require( '@stdlib/constants/math/float64-exponent-bias' );\n\n\n// MAIN //\n\n/**\n* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {integer32} unbiased exponent\n*\n* @example\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* @example\n* var exp = exponent( -3.14 );\n* // returns 1\n*\n* @example\n* var exp = exponent( 0.0 );\n* // returns -1023\n*\n* @example\n* var exp = exponent( NaN );\n* // returns 1024\n*/\nfunction exponent( x ) {\n\t// Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:\n\tvar high = getHighWord( x );\n\n\t// Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:\n\thigh = ( high & EXP_MASK ) >>> 20;\n\n\t// Remove the bias and return:\n\treturn (high - BIAS)|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = exponent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-high-word-exponent-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_EXPONENT_MASK = require( '@stdlib/constants/math/float64-high-word-exponent-mask' );\n* // returns 2146435072\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2146435072 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7ff00000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_HIGH_WORD_EXPONENT_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666602;\n\t}\n\treturn 0.16666666666666602 + (x * (-0.0027777777777015593 + (x * (0.00006613756321437934 + (x * (-0.0000016533902205465252 + (x * 4.1381367970572385e-8))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNegativeInteger = require( '@stdlib/math/base/assert/is-negative-integer' );\nvar gammaln = require( '@stdlib/math/base/special/gammaln' );\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the factorial of `x`.\n*\n* @param {number} x - input value\n* @returns {number} natural logarithm of factorial of `x`\n*\n* @example\n* var v = factorialln( 3.0 );\n* // returns ~1.792\n*\n* @example\n* var v = factorialln( 2.4 );\n* // returns ~1.092\n*\n* @example\n* var v = factorialln( -1.0 );\n* // returns NaN\n*\n* @example\n* var v = factorialln( -1.5 );\n* // returns ~1.266\n*\n* @example\n* var v = factorialln( NaN );\n* // returns NaN\n*/\nfunction factorialln( x ) {\n\tif ( isNegativeInteger( x ) ) {\n\t\treturn NaN;\n\t}\n\treturn gammaln( x + 1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = factorialln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is a negative integer.\n*\n* @module @stdlib/math/base/assert/is-negative-integer\n*\n* @example\n* var isNegativeInteger = require( '@stdlib/math/base/assert/is-negative-integer' );\n*\n* var bool = isNegativeInteger( -1.0 );\n* // returns true\n*\n* bool = isNegativeInteger( 0.0 );\n* // returns false\n*\n* bool = isNegativeInteger( 10.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNegativeInteger = require( './is_negative_integer.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is a negative integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is a negative integer\n*\n* @example\n* var bool = isNegativeInteger( -1.0 );\n* // returns true\n*\n* @example\n* var bool = isNegativeInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isNegativeInteger( 10.0 );\n* // returns false\n*/\nfunction isNegativeInteger( x ) {\n\treturn (floor(x) === x && x < 0.0);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_lgamma_r.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar trunc = require( '@stdlib/math/base/special/trunc' );\nvar sinpi = require( '@stdlib/math/base/special/sinpi' );\nvar PI = require( '@stdlib/constants/math/float64-pi' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar polyvalA1 = require( './polyval_a1.js' );\nvar polyvalA2 = require( './polyval_a2.js' );\nvar polyvalR = require( './polyval_r.js' );\nvar polyvalS = require( './polyval_s.js' );\nvar polyvalT1 = require( './polyval_t1.js' );\nvar polyvalT2 = require( './polyval_t2.js' );\nvar polyvalT3 = require( './polyval_t3.js' );\nvar polyvalU = require( './polyval_u.js' );\nvar polyvalV = require( './polyval_v.js' );\nvar polyvalW = require( './polyval_w.js' );\n\n\n// VARIABLES //\n\nvar A1C = 7.72156649015328655494e-02; // 0x3FB3C467E37DB0C8\nvar A2C = 3.22467033424113591611e-01; // 0x3FD4A34CC4A60FAD\nvar RC = 1.0;\nvar SC = -7.72156649015328655494e-02; // 0xBFB3C467E37DB0C8\nvar T1C = 4.83836122723810047042e-01; // 0x3FDEF72BC8EE38A2\nvar T2C = -1.47587722994593911752e-01; // 0xBFC2E4278DC6C509\nvar T3C = 6.46249402391333854778e-02; // 0x3FB08B4294D5419B\nvar UC = -7.72156649015328655494e-02; // 0xBFB3C467E37DB0C8\nvar VC = 1.0;\nvar WC = 4.18938533204672725052e-01; // 0x3FDACFE390C97D69\nvar YMIN = 1.461632144968362245;\nvar TWO52 = 4503599627370496; // 2**52\nvar TWO58 = 288230376151711744; // 2**58\nvar TINY = 8.470329472543003e-22;\nvar TC = 1.46163214496836224576e+00; // 0x3FF762D86356BE3F\nvar TF = -1.21486290535849611461e-01; // 0xBFBF19B9BCC38A42\nvar TT = -3.63867699703950536541e-18; // 0xBC50C7CAA48A971F => TT = -(tail of TF)\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the gamma function.\n*\n* ## Method\n*\n* 1.  Argument reduction for \\\\(0 < x \\leq 8\\\\). Since \\\\(\\Gamma(1+s) = s \\Gamma(s)\\\\), for \\\\(x \\in \\[0,8]\\\\), we may reduce \\\\(x\\\\) to a number in \\\\(\\[1.5,2.5]\\\\) by\n*\n*     ```tex\n*     \\operatorname{lgamma}(1+s) = \\ln(s) + \\operatorname{lgamma}(s)\n*     ```\n*\n*     For example,\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{lgamma}(7.3) &= \\ln(6.3) + \\operatorname{lgamma}(6.3) \\\\\n*     &= \\ln(6.3 \\cdot 5.3) + \\operatorname{lgamma}(5.3) \\\\\n*     &= \\ln(6.3 \\cdot 5.3 \\cdot 4.3 \\cdot 3.3 \\cdot2.3) + \\operatorname{lgamma}(2.3)\n*     \\end{align*}\n*     ```\n*\n* 2.  Compute a polynomial approximation of \\\\(\\mathrm{lgamma}\\\\) around its minimum (\\\\(\\mathrm{ymin} = 1.461632144968362245\\\\)) to maintain monotonicity. On the interval \\\\(\\[\\mathrm{ymin} - 0.23, \\mathrm{ymin} + 0.27]\\\\) (i.e., \\\\(\\[1.23164,1.73163]\\\\)), we let \\\\(z = x - \\mathrm{ymin}\\\\) and use\n*\n*     ```tex\n*     \\operatorname{lgamma}(x) = -1.214862905358496078218 + z^2 \\cdot \\operatorname{poly}(z)\n*     ```\n*\n*     where \\\\(\\operatorname{poly}(z)\\\\) is a \\\\(14\\\\) degree polynomial.\n*\n* 3.  Compute a rational approximation in the primary interval \\\\(\\[2,3]\\\\). Let \\\\( s = x - 2.0 \\\\). We can thus use the approximation\n*\n*     ```tex\n*     \\operatorname{lgamma}(x) = \\frac{s}{2} + s\\frac{\\operatorname{P}(s)}{\\operatorname{Q}(s)}\n*     ```\n*\n*     with accuracy\n*\n*     ```tex\n*     \\biggl|\\frac{\\mathrm{P}}{\\mathrm{Q}} - \\biggr(\\operatorname{lgamma}(x)-\\frac{s}{2}\\biggl)\\biggl| < 2^{-61.71}\n*     ```\n*\n*     The algorithms are based on the observation\n*\n*     ```tex\n*     \\operatorname{lgamma}(2+s) = s(1 - \\gamma) + \\frac{\\zeta(2) - 1}{2} s^2 - \\frac{\\zeta(3) - 1}{3} s^3 + \\ldots\n*     ```\n*\n*     where \\\\(\\zeta\\\\) is the zeta function and \\\\(\\gamma = 0.5772156649...\\\\) is the Euler-Mascheroni constant, which is very close to \\\\(0.5\\\\).\n*\n* 4.  For \\\\(x \\geq 8\\\\),\n*\n*     ```tex\n*     \\operatorname{lgamma}(x) \\approx \\biggl(x-\\frac{1}{2}\\biggr) \\ln(x) - x + \\frac{\\ln(2\\pi)}{2} + \\frac{1}{12x} - \\frac{1}{360x^3} + \\ldots\n*     ```\n*\n*     which can be expressed\n*\n*     ```tex\n*     \\operatorname{lgamma}(x) \\approx \\biggl(x-\\frac{1}{2}\\biggr)(\\ln(x)-1)-\\frac{\\ln(2\\pi)-1}{2} + \\ldots\n*     ```\n*\n*     Let \\\\(z = \\frac{1}{x}\\\\). We can then use the approximation\n*\n*     ```tex\n*     f(z) = \\operatorname{lgamma}(x) - \\biggl(x-\\frac{1}{2}\\biggr)(\\ln(x)-1)\n*     ```\n*\n*     by\n*\n*     ```tex\n*     w = w_0 + w_1 z + w_2 z^3 + w_3 z^5 + \\ldots + w_6 z^{11}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     |w - f(z)| < 2^{-58.74}\n*     ```\n*\n* 5.  For negative \\\\(x\\\\), since\n*\n*     ```tex\n*     -x \\Gamma(-x) \\Gamma(x) = \\frac{\\pi}{\\sin(\\pi x)}\n*     ```\n*\n*     where \\\\(\\Gamma\\\\) is the gamma function, we have\n*\n*     ```tex\n*     \\Gamma(x) = \\frac{\\pi}{\\sin(\\pi x)(-x)\\Gamma(-x)}\n*     ```\n*\n*     Since \\\\(\\Gamma(-x)\\\\) is positive,\n*\n*     ```tex\n*     \\operatorname{sign}(\\Gamma(x)) = \\operatorname{sign}(\\sin(\\pi x))\n*     ```\n*\n*     for \\\\(x < 0\\\\). Hence, for \\\\(x < 0\\\\),\n*\n*     ```tex\n*     \\mathrm{signgam} = \\operatorname{sign}(\\sin(\\pi x))\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{lgamma}(x) &= \\ln(|\\Gamma(x)|) \\\\\n*     &= \\ln\\biggl(\\frac{\\pi}{|x \\sin(\\pi x)|}\\biggr) - \\operatorname{lgamma}(-x)\n*     \\end{align*}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     Note that one should avoid computing \\\\(\\pi (-x)\\\\) directly in the computation of \\\\(\\sin(\\pi (-x))\\\\).\n*\n*     <!-- </note> -->\n*\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{lgamma}(2+s) &\\approx s (1-\\gamma) & \\mathrm{for\\ tiny\\ s} \\\\\n* \\operatorname{lgamma}(x) &\\approx -\\ln(x) & \\mathrm{for\\ tiny\\ x} \\\\\n* \\operatorname{lgamma}(1) &= 0 & \\\\\n* \\operatorname{lgamma}(2) &= 0 & \\\\\n* \\operatorname{lgamma}(0) &= \\infty & \\\\\n* \\operatorname{lgamma}(\\infty) &= \\infty & \\\\\n* \\operatorname{lgamma}(-\\mathrm{integer}) &= \\pm \\infty\n* \\end{align*}\n* ```\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = gammaln( 1.0 );\n* // returns 0.0\n*\n* @example\n* var v = gammaln( 2.0 );\n* // returns 0.0\n*\n* @example\n* var v = gammaln( 4.0 );\n* // returns ~1.792\n*\n* @example\n* var v = gammaln( -0.5 );\n* // returns ~1.266\n*\n* @example\n* var v = gammaln( 0.5 );\n* // returns ~0.572\n*\n* @example\n* var v = gammaln( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = gammaln( NaN );\n* // returns NaN\n*/\nfunction gammaln( x ) {\n\tvar isNegative;\n\tvar nadj;\n\tvar flg;\n\tvar p3;\n\tvar p2;\n\tvar p1;\n\tvar p;\n\tvar q;\n\tvar t;\n\tvar w;\n\tvar y;\n\tvar z;\n\tvar r;\n\n\t// Special cases: NaN, +-infinity\n\tif ( isnan( x ) || isInfinite( x ) ) {\n\t\treturn x;\n\t}\n\t// Special case: 0\n\tif ( x === 0.0 ) {\n\t\treturn PINF;\n\t}\n\tif ( x < 0.0 ) {\n\t\tisNegative = true;\n\t\tx = -x;\n\t} else {\n\t\tisNegative = false;\n\t}\n\t// If |x| < 2**-70, return -ln(|x|)\n\tif ( x < TINY ) {\n\t\treturn -ln( x );\n\t}\n\tif ( isNegative ) {\n\t\t// If |x| >= 2**52, must be -integer\n\t\tif ( x >= TWO52 ) {\n\t\t\treturn PINF;\n\t\t}\n\t\tt = sinpi( x );\n\t\tif ( t === 0.0 ) {\n\t\t\treturn PINF;\n\t\t}\n\t\tnadj = ln( PI / abs( t*x ) );\n\t}\n\t// If x equals 1 or 2, return 0\n\tif ( x === 1.0 || x === 2.0 ) {\n\t\treturn 0.0;\n\t}\n\t// If x < 2, use lgamma(x) = lgamma(x+1) - log(x)\n\tif ( x < 2.0 ) {\n\t\tif ( x <= 0.9 ) {\n\t\t\tr = -ln( x );\n\n\t\t\t// 0.7316 <= x <=  0.9\n\t\t\tif ( x >= ( YMIN - 1.0 + 0.27 ) ) {\n\t\t\t\ty = 1.0 - x;\n\t\t\t\tflg = 0;\n\t\t\t}\n\t\t\t// 0.2316 <= x < 0.7316\n\t\t\telse if ( x >= (YMIN - 1.0 - 0.27) ) {\n\t\t\t\ty = x - (TC - 1.0);\n\t\t\t\tflg = 1;\n\t\t\t}\n\t\t\t// 0 < x < 0.2316\n\t\t\telse {\n\t\t\t\ty = x;\n\t\t\t\tflg = 2;\n\t\t\t}\n\t\t} else {\n\t\t\tr = 0.0;\n\n\t\t\t// 1.7316 <= x < 2\n\t\t\tif ( x >= (YMIN + 0.27) ) {\n\t\t\t\ty = 2.0 - x;\n\t\t\t\tflg = 0;\n\t\t\t}\n\t\t\t// 1.2316 <= x < 1.7316\n\t\t\telse if ( x >= (YMIN - 0.27) ) {\n\t\t\t\ty = x - TC;\n\t\t\t\tflg = 1;\n\t\t\t}\n\t\t\t// 0.9 < x < 1.2316\n\t\t\telse {\n\t\t\t\ty = x - 1.0;\n\t\t\t\tflg = 2;\n\t\t\t}\n\t\t}\n\t\tswitch ( flg ) { // eslint-disable-line default-case\n\t\tcase 0:\n\t\t\tz = y * y;\n\t\t\tp1 = A1C + (z*polyvalA1( z ));\n\t\t\tp2 = z * (A2C + (z*polyvalA2( z )));\n\t\t\tp = (y*p1) + p2;\n\t\t\tr += ( p - (0.5*y) );\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tz = y * y;\n\t\t\tw = z * y;\n\t\t\tp1 = T1C + (w*polyvalT1( w ));\n\t\t\tp2 = T2C + (w*polyvalT2( w ));\n\t\t\tp3 = T3C + (w*polyvalT3( w ));\n\t\t\tp = (z*p1) - (TT - (w*(p2+(y*p3))));\n\t\t\tr += ( TF + p );\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tp1 = y * (UC + (y*polyvalU( y )));\n\t\t\tp2 = VC + (y*polyvalV( y ));\n\t\t\tr += (-0.5*y) + (p1/p2);\n\t\t\tbreak;\n\t\t}\n\t}\n\t// 2 <= x < 8\n\telse if ( x < 8.0 ) {\n\t\tflg = trunc( x );\n\t\ty = x - flg;\n\t\tp = y * (SC + (y*polyvalS( y )));\n\t\tq = RC + (y*polyvalR( y ));\n\t\tr = (0.5*y) + (p/q);\n\t\tz = 1.0; // gammaln(1+s) = ln(s) + gammaln(s)\n\t\tswitch ( flg ) { // eslint-disable-line default-case\n\t\tcase 7:\n\t\t\tz *= y + 6.0;\n\n\t\t\t/* falls through */\n\t\tcase 6:\n\t\t\tz *= y + 5.0;\n\n\t\t\t/* falls through */\n\t\tcase 5:\n\t\t\tz *= y + 4.0;\n\n\t\t\t/* falls through */\n\t\tcase 4:\n\t\t\tz *= y + 3.0;\n\n\t\t\t/* falls through */\n\t\tcase 3:\n\t\t\tz *= y + 2.0;\n\t\t\tr += ln( z );\n\t\t}\n\t}\n\t// 8 <= x < 2**58\n\telse if ( x < TWO58 ) {\n\t\tt = ln( x );\n\t\tz = 1.0 / x;\n\t\ty = z * z;\n\t\tw = WC + (z*polyvalW( y ));\n\t\tr = ((x-0.5)*(t-1.0)) + w;\n\t}\n\t// 2**58 <= x <= Inf\n\telse {\n\t\tr = x * ( ln(x)-1.0 );\n\t}\n\tif ( isNegative ) {\n\t\tr = nadj - r;\n\t}\n\treturn r;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammaln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_log.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar BIAS = require( '@stdlib/constants/math/float64-exponent-bias' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar polyvalP = require( './polyval_p.js' );\nvar polyvalQ = require( './polyval_q.js' );\n\n\n// VARIABLES //\n\nvar LN2_HI = 6.93147180369123816490e-01; // 3FE62E42 FEE00000\nvar LN2_LO = 1.90821492927058770002e-10; // 3DEA39EF 35793C76\nvar TWO54 = 1.80143985094819840000e+16;  // 0x43500000, 0x00000000\nvar ONE_THIRD = 0.33333333333333333;\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x7ff00000 = 2146435072 => 0 11111111111 00000000000000000000 => biased exponent: 2047 = 1023+1023 => 2^1023\nvar HIGH_MAX_NORMAL_EXP = 0x7ff00000|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm.\n*\n* @param {NonNegativeNumber} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = ln( 4.0 );\n* // returns ~1.386\n*\n* @example\n* var v = ln( 0.0 );\n* // returns -Infinity\n*\n* @example\n* var v = ln( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = ln( NaN );\n* // returns NaN\n*\n* @example\n* var v = ln( -4.0 );\n* // returns NaN\n*/\nfunction ln( x ) {\n\tvar hfsq;\n\tvar hx;\n\tvar t2;\n\tvar t1;\n\tvar k;\n\tvar R;\n\tvar f;\n\tvar i;\n\tvar j;\n\tvar s;\n\tvar w;\n\tvar z;\n\n\tif ( x === 0.0 ) {\n\t\treturn NINF;\n\t}\n\tif ( isnan( x ) || x < 0.0 ) {\n\t\treturn NaN;\n\t}\n\thx = getHighWord( x );\n\tk = 0|0; // asm type annotation\n\tif ( hx < HIGH_MIN_NORMAL_EXP ) {\n\t\t// Case: 0 < x < 2**-1022\n\t\tk -= 54|0; // asm type annotation\n\n\t\t// Subnormal number, scale up `x`:\n\t\tx *= TWO54;\n\t\thx = getHighWord( x );\n\t}\n\tif ( hx >= HIGH_MAX_NORMAL_EXP ) {\n\t\treturn x + x;\n\t}\n\tk += ( ( hx>>20 ) - BIAS )|0; // asm type annotation\n\thx &= HIGH_SIGNIFICAND_MASK;\n\ti = ( (hx+0x95f64) & 0x100000 )|0; // asm type annotation\n\n\t// Normalize `x` or `x/2`...\n\tx = setHighWord( x, hx|(i^HIGH_BIASED_EXP_0) );\n\tk += ( i>>20 )|0; // asm type annotation\n\tf = x - 1.0;\n\tif ( (HIGH_SIGNIFICAND_MASK&(2+hx)) < 3 ) {\n\t\t// Case: -2**-20 <= f < 2**-20\n\t\tif ( f === 0.0 ) {\n\t\t\tif ( k === 0 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn (k * LN2_HI) + (k * LN2_LO);\n\t\t}\n\t\tR = f * f * ( 0.5 - (ONE_THIRD*f) );\n\t\tif ( k === 0 ) {\n\t\t\treturn f - R;\n\t\t}\n\t\treturn (k * LN2_HI) - ( (R-(k*LN2_LO)) - f );\n\t}\n\ts = f / (2.0 + f);\n\tz = s * s;\n\ti = ( hx - 0x6147a )|0; // asm type annotation\n\tw = z * z;\n\tj = ( 0x6b851 - hx )|0; // asm type annotation\n\tt1 = w * polyvalP( w );\n\tt2 = z * polyvalQ( w );\n\ti |= j;\n\tR = t2 + t1;\n\tif ( i > 0 ) {\n\t\thfsq = 0.5 * f * f;\n\t\tif ( k === 0 ) {\n\t\t\treturn f - ( hfsq - (s * (hfsq+R)) );\n\t\t}\n\t\treturn (k * LN2_HI) - ( hfsq - ((s*(hfsq+R))+(k*LN2_LO)) - f );\n\t}\n\tif ( k === 0 ) {\n\t\treturn f - (s*(f-R));\n\t}\n\treturn (k * LN2_HI) - ( ( (s*(f-R)) - (k*LN2_LO) ) - f );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar HIGH = require( './high.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} high - unsigned 32-bit integer to replace the higher order word of `x`\n* @returns {number} double having the same lower order word as `x`\n*\n* @example\n* var high = 5 >>> 0; // => 0 00000000000 00000000000000000101\n*\n* var y = setHighWord( 3.14e201, high ); //  => 0 00000000000 0000000000000000010110010011110010110101100010000010\n* // returns 1.18350528745e-313\n*\n* @example\n* var PINF = require( '@stdlib/constants/math/float64-pinf' ); // => 0 11111111111 00000000000000000000 00000000000000000000000000000000\n*\n* var high = 1072693248 >>> 0; // => 0 01111111111 00000000000000000000\n*\n* // Set the higher order bits of `+infinity` to return `1`:\n* var y = setHighWord( PINF, high ); // => 0 01111111111 0000000000000000000000000000000000000000000000000000\n* // returns 1.0\n*/\nfunction setHighWord( x, high ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ HIGH ] = ( high >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = setHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nmodule.exports = HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.3999999999940942;\n\t}\n\treturn 0.3999999999940942 + (x * (0.22222198432149784 + (x * 0.15313837699209373))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.6666666666666735;\n\t}\n\treturn 0.6666666666666735 + (x * (0.2857142874366239 + (x * (0.1818357216161805 + (x * 0.14798198605116586))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the value of `sin(πx)`.\n*\n* @module @stdlib/math/base/special/sinpi\n*\n* @example\n* var sinpi = require( '@stdlib/math/base/special/sinpi' );\n*\n* var y = sinpi( 0.0 );\n* // returns 0.0\n*\n* y = sinpi( 0.5 );\n* // returns 1.0\n*\n* y = sinpi( 0.9 );\n* // returns ~0.309\n*\n* y = sinpi( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar sinpi = require( './sinpi.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sinpi;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* Notes:\n*\t=> sin(-x) = -sin(x)\n*\t=> sin(+n) = +0, where `n` is a positive integer\n*\t=> sin(-n) = -sin(+n) = -0, where `n` is a positive integer\n*\t=> cos(-x) = cos(x)\n*/\n\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\nvar cos = require( '@stdlib/math/base/special/cos' );\nvar sin = require( '@stdlib/math/base/special/sin' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar copysign = require( '@stdlib/math/base/special/copysign' );\nvar PI = require( '@stdlib/constants/math/float64-pi' );\n\n\n// MAIN //\n\n/**\n* Computes the value of `sin(πx)`.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var y = sinpi( 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = sinpi( 0.5 );\n* // returns 1.0\n*\n* @example\n* var y = sinpi( 0.9 );\n* // returns ~0.309\n*\n* @example\n* var y = sinpi( NaN );\n* // returns NaN\n*/\nfunction sinpi( x ) {\n\tvar ar;\n\tvar r;\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isInfinite( x ) ) {\n\t\treturn NaN;\n\t}\n\t// Argument reduction (reduce to [0,2))...\n\tr = x % 2.0; // sign preserving\n\tar = abs( r );\n\n\t// If `x` is an integer, the mod is an integer...\n\tif ( ar === 0.0 || ar === 1.0 ) {\n\t\treturn copysign( 0.0, r );\n\t}\n\tif ( ar < 0.25 ) {\n\t\treturn sin( PI*r );\n\t}\n\t// In each of the following, we further reduce to [-π/4,π/4)...\n\tif ( ar < 0.75 ) {\n\t\tar = 0.5 - ar;\n\t\treturn copysign( cos( PI*ar ), r );\n\t}\n\tif ( ar < 1.25 ) {\n\t\tr = copysign( 1.0, r ) - r;\n\t\treturn sin( PI*r );\n\t}\n\tif ( ar < 1.75 ) {\n\t\tar -= 1.5;\n\t\treturn -copysign( cos( PI*ar ), r );\n\t}\n\tr -= copysign( 2.0, r );\n\treturn sin( PI*r );\n}\n\n\n// EXPORTS //\n\nmodule.exports = sinpi;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_cos.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar kernelCos = require( '@stdlib/math/base/special/kernel-cos' );\nvar kernelSin = require( '@stdlib/math/base/special/kernel-sin' );\nvar rempio2 = require( '@stdlib/math/base/special/rempio2' );\n\n\n// VARIABLES //\n\n// Scratch array for storing temporary values:\nvar buffer = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n// High word absolute value mask: 0x7fffffff => 01111111111111111111111111111111\nvar HIGH_WORD_ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// High word of π/4: 0x3fe921fb => 00111111111010010010000111111011\nvar HIGH_WORD_PIO4 = 0x3fe921fb|0; // asm type annotation\n\n// High word of 2^-27: 0x3e400000 => 00111110010000000000000000000000\nvar HIGH_WORD_TWO_NEG_27 = 0x3e400000|0; // asm type annotation\n\n// High word exponent mask: 0x7ff00000 => 01111111111100000000000000000000\nvar HIGH_WORD_EXPONENT_MASK = 0x7ff00000|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Computes the cosine of a number.\n*\n* @param {number} x - input value (in radians)\n* @returns {number} cosine\n*\n* @example\n* var v = cos( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = cos( 3.141592653589793/4.0 );\n* // returns ~0.707\n*\n* @example\n* var v = cos( -3.141592653589793/6.0 );\n* // returns ~0.866\n*\n* @example\n* var v = cos( NaN );\n* // returns NaN\n*/\nfunction cos( x ) {\n\tvar ix;\n\tvar n;\n\n\tix = getHighWord( x );\n\tix &= HIGH_WORD_ABS_MASK;\n\n\t// Case: |x| ~< pi/4\n\tif ( ix <= HIGH_WORD_PIO4 ) {\n\t\t// Case: x < 2**-27\n\t\tif ( ix < HIGH_WORD_TWO_NEG_27 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\treturn kernelCos( x, 0.0 );\n\t}\n\t// Case: cos(Inf or NaN) is NaN */\n\tif ( ix >= HIGH_WORD_EXPONENT_MASK ) {\n\t\treturn NaN;\n\t}\n\t// Case: Argument reduction needed...\n\tn = rempio2( x, buffer );\n\tswitch ( n & 3 ) {\n\tcase 0:\n\t\treturn kernelCos( buffer[ 0 ], buffer[ 1 ] );\n\tcase 1:\n\t\treturn -kernelSin( buffer[ 0 ], buffer[ 1 ] );\n\tcase 2:\n\t\treturn -kernelCos( buffer[ 0 ], buffer[ 1 ] );\n\tdefault:\n\t\treturn kernelSin( buffer[ 0 ], buffer[ 1 ] );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = cos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_cos.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar polyval13 = require( './polyval_c13.js' );\nvar polyval46 = require( './polyval_c46.js' );\n\n\n// MAIN //\n\n/**\n* Computes the cosine on \\\\( \\[-\\pi/4, \\pi/4] \\\\), where \\\\( \\pi/4 \\approx 0.785398164 \\\\).\n*\n* ## Method\n*\n* -   Since \\\\( \\cos(-x) = \\cos(x) \\\\), we need only to consider positive \\\\(x\\\\).\n*\n* -   If \\\\( x < 2^{-27} \\\\), return \\\\(1\\\\) which is inexact if \\\\( x \\ne 0 \\\\).\n*\n* -   \\\\( cos(x) \\\\) is approximated by a polynomial of degree \\\\(14\\\\) on \\\\( \\[0,\\pi/4] \\\\).\n*\n*     ```tex\n*     \\cos(x) \\approx 1 - \\frac{x \\cdot x}{2} + C_1 \\cdot x^4 + \\ldots + C_6 \\cdot x^{14}\n*     ```\n*\n*     where the Remez error is\n*\n*     ```tex\n*     \\left| \\cos(x) - \\left( 1 - \\frac{x^2}{2} + C_1x^4 + C_2x^6 + C_3x^8 + C_4x^{10} + C_5x^{12} + C_6x^{15} \\right) \\right| \\le 2^{-58}\n*     ```\n*\n* -   Let \\\\( C_1x^4 + C_2x^6 + C_3x^8 + C_4x^{10} + C_5x^{12} + C_6x^{14} \\\\), then\n*\n*     ```tex\n*     \\cos(x) \\approx 1 - \\frac{x \\cdot x}{2} + r\n*     ```\n*\n*     Since\n*\n*     ```tex\n*     \\cos(x+y) \\approx \\cos(x) - \\sin(x) \\cdot y \\approx \\cos(x) - x \\cdot y\n*     ```\n*\n*     a correction term is necessary in \\\\( \\cos(x) \\\\). Hence,\n*\n*     ```tex\n*     \\cos(x+y) = 1 - \\left( \\frac{x \\cdot x}{2} - (r - x \\cdot y) \\right)\n*     ```\n*\n*     For better accuracy, rearrange to\n*\n*     ```tex\n*     \\cos(x+y) \\approx w + \\left( t + ( r - x \\cdot y ) \\right)\n*     ```\n*\n*     where \\\\( w = 1 - \\frac{x \\cdot x}{2} \\\\) and \\\\( t \\\\) is a tiny correction term (\\\\( 1 - \\frac{x \\cdot x}{2} = w + t \\\\) exactly in infinite precision). The exactness of \\\\(w + t\\\\) in infinite precision depends on \\\\(w\\\\) and \\\\(t\\\\) having the same precision as \\\\(x\\\\).\n*\n*\n* @param {number} x - input value (in radians, assumed to be bounded by ~pi/4 in magnitude)\n* @param {number} y - tail of `x`\n* @returns {number} cosine\n*\n* @example\n* var v = kernelCos( 0.0, 0.0 );\n* // returns ~1.0\n*\n* @example\n* var v = kernelCos( 3.141592653589793/6.0, 0.0 );\n* // returns ~0.866\n*\n* @example\n* var v = kernelCos( 0.785, -1.144e-17 );\n* // returns ~0.707\n*\n* @example\n* var v = kernelCos( NaN, 0.0 );\n* // returns NaN\n*/\nfunction kernelCos( x, y ) {\n\tvar hz;\n\tvar r;\n\tvar w;\n\tvar z;\n\n\tz = x * x;\n\tw = z * z;\n\tr = z * polyval13( z );\n\tr += w * w * polyval46( z );\n\thz = 0.5 * z;\n\tw = 1.0 - hz;\n\treturn w + ( ((1.0-w) - hz) + ((z*r) - (x*y)) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = kernelCos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0416666666666666;\n\t}\n\treturn 0.0416666666666666 + (x * (-0.001388888888887411 + (x * 0.00002480158728947673))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -2.7557314351390663e-7;\n\t}\n\treturn -2.7557314351390663e-7 + (x * (2.087572321298175e-9 + (x * -1.1359647557788195e-11))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_sin.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar S1 = -1.66666666666666324348e-01; // 0xBFC55555, 0x55555549\nvar S2 = 8.33333333332248946124e-03;  // 0x3F811111, 0x1110F8A6\nvar S3 = -1.98412698298579493134e-04; // 0xBF2A01A0, 0x19C161D5\nvar S4 = 2.75573137070700676789e-06;  // 0x3EC71DE3, 0x57B1FE7D\nvar S5 = -2.50507602534068634195e-08; // 0xBE5AE5E6, 0x8A2B9CEB\nvar S6 = 1.58969099521155010221e-10;  // 0x3DE5D93A, 0x5ACFD57C\n\n\n// MAIN //\n\n/**\n* Computes the sine on \\\\( \\approx \\[-\\pi/4, \\pi/4] \\\\) (except on \\\\(-0\\\\)), where \\\\( \\pi/4 \\approx 0.7854 \\\\).\n*\n* ## Method\n*\n* -   Since \\\\( \\sin(-x) = -\\sin(x) \\\\), we need only to consider positive \\\\(x\\\\).\n*\n* -   Callers must return \\\\( \\sin(-0) = -0 \\\\) without calling here since our odd polynomial is not evaluated in a way that preserves \\\\(-0\\\\). Callers may do the optimization \\\\( \\sin(x) \\approx x \\\\) for tiny \\\\(x\\\\).\n*\n* -   \\\\( \\sin(x) \\\\) is approximated by a polynomial of degree \\\\(13\\\\) on \\\\( \\left\\[0,\\tfrac{pi}{4}\\right] \\\\)\n*\n*     ```tex\n*     \\sin(x) \\approx x + S_1 \\cdot x^3 + \\ldots + S_6 \\cdot x^{13}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\left| \\frac{\\sin(x)}{x} \\left( 1 + S_1 \\cdot x + S_2 \\cdot x + S_3 \\cdot x + S_4 \\cdot x + S_5 \\cdot x + S_6 \\cdot x \\right) \\right| \\le 2^{-58}\n*     ```\n*\n* -   We have\n*\n*     ```tex\n*     \\sin(x+y) = \\sin(x) + \\sin'(x') \\cdot y \\approx \\sin(x) + (1-x*x/2) \\cdot y\n*     ```\n*\n*     For better accuracy, let\n*\n*     ```tex\n*     r = x^3 * \\left( S_2 + x^2 \\cdot \\left( S_3 + x^2 * \\left( S_4 + x^2 \\cdot ( S_5+x^2 \\cdot S_6 ) \\right) \\right) \\right)\n*     ```\n*\n*     then\n*\n*     ```tex\n*     \\sin(x) = x + \\left( S_1 \\cdot x + ( x \\cdot (r-y/2) + y ) \\right)\n*     ```\n*\n*\n* @param {number} x - input value (in radians, assumed to be bounded by `~pi/4` in magnitude)\n* @param {number} y - tail of `x`\n* @returns {number} sine\n*\n* @example\n* var v = kernelSin( 0.0, 0.0 );\n* // returns ~0.0\n*\n* @example\n* var v = kernelSin( 3.141592653589793/6.0, 0.0 );\n* // returns ~0.5\n*\n* @example\n* var v = kernelSin( 0.619, 9.279e-18 );\n* // returns ~0.58\n*\n* @example\n* var v = kernelSin( NaN, 0.0 );\n* // returns NaN\n*\n* @example\n* var v = kernelSin( 3.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = kernelSin( NaN, NaN );\n* // returns NaN\n*/\nfunction kernelSin( x, y ) {\n\tvar r;\n\tvar v;\n\tvar w;\n\tvar z;\n\n\tz = x * x;\n\tw = z * z;\n\tr = S2 + (z * (S3 + (z*S4))) + (z * w * (S5 + (z*S6)));\n\tv = z * x;\n\tif ( y === 0.0 ) {\n\t\treturn x + (v * (S1 + (z*r)));\n\t}\n\treturn x - (((z*((0.5*y) - (v*r))) - y) - (v*S1));\n}\n\n\n// EXPORTS //\n\nmodule.exports = kernelSin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n*\n* Optimized by Bruce D. Evans.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar getLowWord = require( '@stdlib/number/float64/base/get-low-word' );\nvar fromWords = require( '@stdlib/number/float64/base/from-words' );\nvar rempio2Kernel = require( './kernel_rempio2.js' );\nvar rempio2Medium = require( './rempio2_medium.js' );\n\n\n// VARIABLES //\n\nvar ZERO = 0.00000000000000000000e+00;    // 0x00000000, 0x00000000\nvar TWO24 = 1.67772160000000000000e+07;   // 0x41700000, 0x00000000\n\n// 33 bits of π/2:\nvar PIO2_1 = 1.57079632673412561417e+00;  // 0x3FF921FB, 0x54400000\n\n// PIO2_1T = π/2 - PIO2_1:\nvar PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331\nvar TWO_PIO2_1T = 2.0 * PIO2_1T;\nvar THREE_PIO2_1T = 3.0 * PIO2_1T;\nvar FOUR_PIO2_1T = 4.0 * PIO2_1T;\n\n// Absolute value mask: 0x7fffffff = 2147483647 => 01111111111111111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// Exponent mask: 0x7ff00000 = 2146435072 => 01111111111100000000000000000000\nvar EXPONENT_MASK = 0x7ff00000|0; // asm type annotation\n\n// High word significand mask: 0xfffff = 1048575 => 00000000000011111111111111111111\nvar SIGNIFICAND_MASK = 0xfffff|0; // asm type annotation\n\n// High word significand for π and π/2: 0x921fb = 598523 => 00000000000010010010000111111011\nvar PI_HIGH_WORD_SIGNIFICAND = 0x921fb|0; // asm type annotation\n\n// High word for π/4: 0x3fe921fb = 1072243195 => 00111111111010010010000111111011\nvar PIO4_HIGH_WORD = 0x3fe921fb|0; // asm type annotation\n\n// High word for 3π/4: 0x4002d97c = 1073928572 => 01000000000000101101100101111100\nvar THREE_PIO4_HIGH_WORD = 0x4002d97c|0; // asm type annotation\n\n// High word for 5π/4: 0x400f6a7a = 1074752122 => 01000000000011110110101001111010\nvar FIVE_PIO4_HIGH_WORD = 0x400f6a7a|0; // asm type annotation\n\n// High word for 6π/4: 0x4012d97c = 1074977148 => 01000000000100101101100101111100\nvar THREE_PIO2_HIGH_WORD = 0x4012d97c|0; // asm type annotation\n\n// High word for 7π/4: 0x4015fdbc = 1075183036 => 01000000000101011111110110111100\nvar SEVEN_PIO4_HIGH_WORD = 0x4015fdbc|0; // asm type annotation\n\n// High word for 8π/4: 0x401921fb = 1075388923 => 01000000000110010010000111111011\nvar TWO_PI_HIGH_WORD = 0x401921fb|0; // asm type annotation\n\n// High word for 9π/4: 0x401c463b = 1075594811 => 01000000000111000100011000111011\nvar NINE_PIO4_HIGH_WORD = 0x401c463b|0; // asm type annotation\n\n// 2^20*π/2 = 1647099.3291652855 => 0100000100111001001000011111101101010100010001000010110100011000 => high word => 0x413921fb = 1094263291 => 01000001001110010010000111111011\nvar MEDIUM = 0x413921fb|0; // asm type annotation\n\n// Arrays for storing temporary values:\nvar TX = new Array( 3 ); // WARNING: not thread safe\nvar TY = new Array( 2 ); // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Computes `x - nπ/2 = r`.\n*\n* ## Notes\n*\n* -   Returns `n` and stores the remainder `r` as two numbers `y[0]` and `y[1]`, such that `y[0]+y[1] = r`.\n*\n*\n* @param {number} x - input value\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @returns {integer} factor of `π/2`\n*\n* @example\n* var y = new Array( 2 );\n* var n = rempio2( 128.0, y );\n* // returns 81\n*\n* var y1 = y[ 0 ];\n* // returns ~0.765\n*\n* var y2 = y[ 1 ];\n* // returns ~3.618e-17\n*\n* @example\n* var y = new Array( 2 );\n* var n = rempio2( NaN, y );\n* // returns 0\n*\n* var y1 = y[ 0 ];\n* // returns NaN\n*\n* var y2 = y[ 1 ];\n* // returns NaN\n*/\nfunction rempio2( x, y ) {\n\tvar low;\n\tvar e0;\n\tvar hx;\n\tvar ix;\n\tvar nx;\n\tvar i;\n\tvar n;\n\tvar z;\n\n\thx = getHighWord( x );\n\tix = (hx & ABS_MASK)|0; // asm type annotation\n\n\t// Case: |x| ~<= π/4 (no need for reduction)\n\tif ( ix <= PIO4_HIGH_WORD ) {\n\t\ty[ 0 ] = x;\n\t\ty[ 1 ] = 0.0;\n\t\treturn 0;\n\t}\n\t// Case: |x| ~<= 5π/4\n\tif ( ix <= FIVE_PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~= π/2 or π\n\t\tif ( (ix & SIGNIFICAND_MASK) === PI_HIGH_WORD_SIGNIFICAND ) {\n\t\t\t// Cancellation => use medium case\n\t\t\treturn rempio2Medium( x, ix, y );\n\t\t}\n\t\t// Case: |x| ~<= 3π/4\n\t\tif ( ix <= THREE_PIO4_HIGH_WORD ) {\n\t\t\tif ( x > 0.0 ) {\n\t\t\t\tz = x - PIO2_1;\n\t\t\t\ty[ 0 ] = z - PIO2_1T;\n\t\t\t\ty[ 1 ] = (z - y[0]) - PIO2_1T;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tz = x + PIO2_1;\n\t\t\ty[ 0 ] = z + PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) + PIO2_1T;\n\t\t\treturn -1;\n\t\t}\n\t\tif ( x > 0.0 ) {\n\t\t\tz = x - ( 2.0*PIO2_1 );\n\t\t\ty[ 0 ] = z - TWO_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) - TWO_PIO2_1T;\n\t\t\treturn 2;\n\t\t}\n\t\tz = x + ( 2.0*PIO2_1 );\n\t\ty[ 0 ] = z + TWO_PIO2_1T;\n\t\ty[ 1 ] = (z - y[0]) + TWO_PIO2_1T;\n\t\treturn -2;\n\t}\n\t// Case: |x| ~<= 9π/4\n\tif ( ix <= NINE_PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~<= 7π/4\n\t\tif ( ix <= SEVEN_PIO4_HIGH_WORD ) {\n\t\t\t// Case: |x| ~= 3π/2\n\t\t\tif ( ix === THREE_PIO2_HIGH_WORD ) {\n\t\t\t\treturn rempio2Medium( x, ix, y );\n\t\t\t}\n\t\t\tif ( x > 0.0 ) {\n\t\t\t\tz = x - ( 3.0*PIO2_1 );\n\t\t\t\ty[ 0 ] = z - THREE_PIO2_1T;\n\t\t\t\ty[ 1 ] = (z - y[0]) - THREE_PIO2_1T;\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t\tz = x + ( 3.0*PIO2_1 );\n\t\t\ty[ 0 ] = z + THREE_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) + THREE_PIO2_1T;\n\t\t\treturn -3;\n\t\t}\n\t\t// Case: |x| ~= 4π/2\n\t\tif ( ix === TWO_PI_HIGH_WORD ) {\n\t\t\treturn rempio2Medium( x, ix, y );\n\t\t}\n\t\tif ( x > 0.0 ) {\n\t\t\tz = x - ( 4.0*PIO2_1 );\n\t\t\ty[ 0 ] = z - FOUR_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) - FOUR_PIO2_1T;\n\t\t\treturn 4;\n\t\t}\n\t\tz = x + ( 4.0*PIO2_1 );\n\t\ty[ 0 ] = z + FOUR_PIO2_1T;\n\t\ty[ 1 ] = (z - y[0]) + FOUR_PIO2_1T;\n\t\treturn -4;\n\t}\n\t// Case: |x| ~< 2^20*π/2 (medium size)\n\tif ( ix < MEDIUM ) {\n\t\treturn rempio2Medium( x, ix, y );\n\t}\n\t// Case: x is NaN or infinity\n\tif ( ix >= EXPONENT_MASK ) {\n\t\ty[ 0 ] = NaN;\n\t\ty[ 1 ] = NaN;\n\t\treturn 0.0;\n\t}\n\t// Set z = scalbn(|x|, ilogb(x)-23)...\n\tlow = getLowWord( x );\n\te0 = (ix >> 20) - 1046; // `e0 = ilogb(z) - 23` => unbiased exponent minus 23\n\tz = fromWords( ix - ((e0 << 20)|0), low );\n\tfor ( i = 0; i < 2; i++ ) {\n\t\tTX[ i ] = z|0;\n\t\tz = (z - TX[i]) * TWO24;\n\t}\n\tTX[ 2 ] = z;\n\tnx = 3;\n\twhile ( TX[ nx-1 ] === ZERO ) {\n\t\t// Skip zero term...\n\t\tnx -= 1;\n\t}\n\tn = rempio2Kernel( TX, TY, e0, nx, 1 );\n\tif ( x < 0.0 ) {\n\t\ty[ 0 ] = -TY[ 0 ];\n\t\ty[ 1 ] = -TY[ 1 ];\n\t\treturn -n;\n\t}\n\ty[ 0 ] = TY[ 0 ];\n\ty[ 1 ] = TY[ 1 ];\n\treturn n;\n}\n\n\n// EXPORTS //\n\nmodule.exports = rempio2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an unsigned 32-bit integer corresponding to the less significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/get-low-word\n*\n* @example\n* var getLowWord = require( '@stdlib/number/float64/base/get-low-word' );\n*\n* var w = getLowWord( 3.14e201 ); // => 10010011110010110101100010000010\n* // returns 2479577218\n*/\n\n// MODULES //\n\nvar getLowWord = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar LOW = require( './low.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Returns a 32-bit unsigned integer corresponding to the less significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the lower order bits? If little endian, the first; if big endian, the second.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} lower order word\n*\n* @example\n* var w = getLowWord( 3.14e201 ); // => 10010011110010110101100010000010\n* // returns 2479577218\n*/\nfunction getLowWord( x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\treturn UINT32_VIEW[ LOW ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = getLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar LOW;\nif ( isLittleEndian === true ) {\n\tLOW = 0; // first index\n} else {\n\tLOW = 1; // second index\n}\n\n\n// EXPORTS //\n\nmodule.exports = LOW;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n/* eslint-disable array-element-newline */\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar ldexp = require( '@stdlib/math/base/special/ldexp' );\n\n\n// VARIABLES //\n\n/*\n* Table of constants for `2/π` (`396` hex digits, `476` decimal).\n*\n* Integer array which contains the (`24*i`)-th to (`24*i+23`)-th bit of `2/π` after binary point. The corresponding floating value is\n*\n* ```tex\n* \\operatorname{ipio2}[i] \\cdot 2^{-24(i+1)}\n* ```\n*\n* This table must have at least `(e0-3)/24 + jk` terms. For quad precision (`e0 <= 16360`, `jk = 6`), this is `686`.\n*/\nvar IPIO2 = [\n\t0xA2F983, 0x6E4E44, 0x1529FC, 0x2757D1, 0xF534DD, 0xC0DB62,\n\t0x95993C, 0x439041, 0xFE5163, 0xABDEBB, 0xC561B7, 0x246E3A,\n\t0x424DD2, 0xE00649, 0x2EEA09, 0xD1921C, 0xFE1DEB, 0x1CB129,\n\t0xA73EE8, 0x8235F5, 0x2EBB44, 0x84E99C, 0x7026B4, 0x5F7E41,\n\t0x3991D6, 0x398353, 0x39F49C, 0x845F8B, 0xBDF928, 0x3B1FF8,\n\t0x97FFDE, 0x05980F, 0xEF2F11, 0x8B5A0A, 0x6D1F6D, 0x367ECF,\n\t0x27CB09, 0xB74F46, 0x3F669E, 0x5FEA2D, 0x7527BA, 0xC7EBE5,\n\t0xF17B3D, 0x0739F7, 0x8A5292, 0xEA6BFB, 0x5FB11F, 0x8D5D08,\n\t0x560330, 0x46FC7B, 0x6BABF0, 0xCFBC20, 0x9AF436, 0x1DA9E3,\n\t0x91615E, 0xE61B08, 0x659985, 0x5F14A0, 0x68408D, 0xFFD880,\n\t0x4D7327, 0x310606, 0x1556CA, 0x73A8C9, 0x60E27B, 0xC08C6B\n];\n\n// Double precision array, obtained by cutting `π/2` into `24` bits chunks...\nvar PIO2 = [\n\t1.57079625129699707031e+00, // 0x3FF921FB, 0x40000000\n\t7.54978941586159635335e-08, // 0x3E74442D, 0x00000000\n\t5.39030252995776476554e-15, // 0x3CF84698, 0x80000000\n\t3.28200341580791294123e-22, // 0x3B78CC51, 0x60000000\n\t1.27065575308067607349e-29, // 0x39F01B83, 0x80000000\n\t1.22933308981111328932e-36, // 0x387A2520, 0x40000000\n\t2.73370053816464559624e-44, // 0x36E38222, 0x80000000\n\t2.16741683877804819444e-51  // 0x3569F31D, 0x00000000\n];\nvar TWO24 = 1.67772160000000000000e+07;  // 0x41700000, 0x00000000\nvar TWON24 = 5.96046447753906250000e-08; // 0x3E700000, 0x00000000\n\n// Arrays for storing temporary values (note that, in C, this is not thread safe):\nvar F = zero( new Array( 20 ) );\nvar Q = zero( new Array( 20 ) );\nvar FQ = zero( new Array( 20 ) );\nvar IQ = zero( new Array( 20 ) );\n\n\n// FUNCTIONS //\n\n/**\n* Zeros an array.\n*\n* @private\n* @param {Array<number>} arr - array to zero\n* @returns {Array<number>} input array\n*/\nfunction zero( arr ) {\n\tvar len = arr.length;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr[ i ] = 0.0;\n\t}\n\treturn arr;\n}\n\n/**\n* Performs the computation for `kernelRempio2()`.\n*\n* @private\n* @param {PositiveNumber} x - input value\n* @param {(Array|TypedArray|Object)} y - output object for storing double precision numbers\n* @param {integer} jz - number of terms of `ipio2[]` used\n* @param {Array<integer>} q - array with integral values, representing the 24-bits chunk of the product of `x` and `2/π`\n* @param {integer} q0 - the corresponding exponent of `q[0]` (the exponent for `q[i]` would be `q0-24*i`)\n* @param {integer} jk - `jk+1` is the initial number of terms of `IPIO2[]` needed in the computation\n* @param {integer} jv - index for pointing to the suitable `ipio2[]` for the computation\n* @param {integer} jx - `nx - 1`\n* @param {Array<number>} f - `IPIO2[]` in floating point\n* @returns {number} last three binary digits of `N`\n*/\nfunction compute( x, y, jz, q, q0, jk, jv, jx, f ) {\n\tvar carry;\n\tvar fw;\n\tvar ih;\n\tvar jp;\n\tvar i;\n\tvar k;\n\tvar n;\n\tvar j;\n\tvar z;\n\n\t// `jp+1` is the number of terms in `PIO2[]` needed:\n\tjp = jk;\n\n\t// Distill `q[]` into `IQ[]` in reverse order...\n\tz = q[ jz ];\n\tj = jz;\n\tfor ( i = 0; j > 0; i++ ) {\n\t\tfw = ( TWON24 * z )|0;\n\t\tIQ[ i ] = ( z - (TWO24*fw) )|0;\n\t\tz = q[ j-1 ] + fw;\n\t\tj -= 1;\n\t}\n\t// Compute `n`...\n\tz = ldexp( z, q0 );\n\tz -= 8.0 * floor( z*0.125 ); // Trim off integer >= 8\n\tn = z|0;\n\tz -= n;\n\tih = 0;\n\tif ( q0 > 0 ) {\n\t\t// Need `IQ[jz-1]` to determine `n`...\n\t\ti = ( IQ[ jz-1 ] >> (24-q0) );\n\t\tn += i;\n\t\tIQ[ jz-1 ] -= ( i << (24-q0) );\n\t\tih = ( IQ[ jz-1 ] >> (23-q0) );\n\t}\n\telse if ( q0 === 0 ) {\n\t\tih = ( IQ[ jz-1 ] >> 23 );\n\t}\n\telse if ( z >= 0.5 ) {\n\t\tih = 2;\n\t}\n\t// Case: q > 0.5\n\tif ( ih > 0 ) {\n\t\tn += 1;\n\t\tcarry = 0;\n\n\t\t// Compute `1-q`:\n\t\tfor ( i = 0; i < jz; i++ ) {\n\t\t\tj = IQ[ i ];\n\t\t\tif ( carry === 0 ) {\n\t\t\t\tif ( j !== 0 ) {\n\t\t\t\t\tcarry = 1;\n\t\t\t\t\tIQ[ i ] = 0x1000000 - j;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tIQ[ i ] = 0xffffff - j;\n\t\t\t}\n\t\t}\n\t\tif ( q0 > 0 ) {\n\t\t\t// Rare case: chance is 1 in 12...\n\t\t\tswitch ( q0 ) { // eslint-disable-line default-case\n\t\t\tcase 1:\n\t\t\t\tIQ[ jz-1 ] &= 0x7fffff;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tIQ[ jz-1 ] &= 0x3fffff;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( ih === 2 ) {\n\t\t\tz = 1.0 - z;\n\t\t\tif ( carry !== 0 ) {\n\t\t\t\tz -= ldexp( 1.0, q0 );\n\t\t\t}\n\t\t}\n\t}\n\t// Check if re-computation is needed...\n\tif ( z === 0.0 ) {\n\t\tj = 0;\n\t\tfor ( i = jz-1; i >= jk; i-- ) {\n\t\t\tj |= IQ[ i ];\n\t\t}\n\t\tif ( j === 0 ) {\n\t\t\t// Need re-computation...\n\t\t\tfor ( k = 1; IQ[ jk-k ] === 0; k++ ) {\n\t\t\t\t// `k` is the number of terms needed...\n\t\t\t}\n\t\t\tfor ( i = jz+1; i <= jz+k; i++ ) {\n\t\t\t\t// Add `q[jz+1]` to `q[jz+k]`...\n\t\t\t\tf[ jx+i ] = IPIO2[ jv+i ];\n\t\t\t\tfw = 0.0;\n\t\t\t\tfor ( j = 0; j <= jx; j++ ) {\n\t\t\t\t\tfw += x[ j ] * f[ jx + (i-j) ];\n\t\t\t\t}\n\t\t\t\tq[ i ] = fw;\n\t\t\t}\n\t\t\tjz += k;\n\t\t\treturn compute( x, y, jz, q, q0, jk, jv, jx, f );\n\t\t}\n\t}\n\t// Chop off zero terms...\n\tif ( z === 0.0 ) {\n\t\tjz -= 1;\n\t\tq0 -= 24;\n\t\twhile ( IQ[ jz ] === 0 ) {\n\t\t\tjz -= 1;\n\t\t\tq0 -= 24;\n\t\t}\n\t} else {\n\t\t// Break `z` into 24-bit if necessary...\n\t\tz = ldexp( z, -q0 );\n\t\tif ( z >= TWO24 ) {\n\t\t\tfw = (TWON24*z)|0;\n\t\t\tIQ[ jz ] = ( z - (TWO24*fw) )|0;\n\t\t\tjz += 1;\n\t\t\tq0 += 24;\n\t\t\tIQ[ jz ] = fw;\n\t\t} else {\n\t\t\tIQ[ jz ] = z|0;\n\t\t}\n\t}\n\t// Convert integer \"bit\" chunk to floating-point value...\n\tfw = ldexp( 1.0, q0 );\n\tfor ( i = jz; i >= 0; i-- ) {\n\t\tq[ i ] = fw * IQ[i];\n\t\tfw *= TWON24;\n\t}\n\t// Compute `PIO2[0,...,jp]*q[jz,...,0]`...\n\tfor ( i = jz; i >= 0; i-- ) {\n\t\tfw = 0.0;\n\t\tfor ( k = 0; k <= jp && k <= jz-i; k++ ) {\n\t\t\tfw += PIO2[ k ] * q[ i+k ];\n\t\t}\n\t\tFQ[ jz-i ] = fw;\n\t}\n\t// Compress `FQ[]` into `y[]`...\n\tfw = 0.0;\n\tfor ( i = jz; i >= 0; i-- ) {\n\t\tfw += FQ[ i ];\n\t}\n\tif ( ih === 0 ) {\n\t\ty[ 0 ] = fw;\n\t} else {\n\t\ty[ 0 ] = -fw;\n\t}\n\tfw = FQ[ 0 ] - fw;\n\tfor ( i = 1; i <= jz; i++ ) {\n\t\tfw += FQ[i];\n\t}\n\tif ( ih === 0 ) {\n\t\ty[ 1 ] = fw;\n\t} else {\n\t\ty[ 1 ] = -fw;\n\t}\n\treturn ( n & 7 );\n}\n\n\n// MAIN //\n\n/**\n* Returns the last three binary digits of `N` with `y = x - Nπ/2` so that `|y| < π/2`.\n*\n* ## Method\n*\n* -   The method is to compute the integer (`mod 8`) and fraction parts of `2x/π` without doing the full multiplication. In general, we skip the part of the product that is known to be a huge integer (more accurately, equals `0 mod 8` ). Thus, the number of operations is independent of the exponent of the input.\n*\n* @private\n* @param {PositiveNumber} x - input value\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @param {PositiveInteger} e0 - the exponent of `x[0]` (must be <= 16360)\n* @param {PositiveInteger} nx - dimension of `x[]`\n* @returns {number} last three binary digits of `N`\n*/\nfunction kernelRempio2( x, y, e0, nx ) {\n\tvar fw;\n\tvar jk;\n\tvar jv;\n\tvar jx;\n\tvar jz;\n\tvar q0;\n\tvar i;\n\tvar j;\n\tvar m;\n\n\t// Initialize `jk` for double-precision floating-point numbers:\n\tjk = 4;\n\n\t// Determine `jx`, `jv`, `q0` (note that `q0 < 3`):\n\tjx = nx - 1;\n\tjv = ( (e0 - 3) / 24 )|0;\n\tif ( jv < 0 ) {\n\t\tjv = 0;\n\t}\n\tq0 = e0 - (24 * (jv + 1));\n\n\t// Set up `F[0]` to `F[jx+jk]` where `F[jx+jk] = IPIO2[jv+jk]`:\n\tj = jv - jx;\n\tm = jx + jk;\n\tfor ( i = 0; i <= m; i++ ) {\n\t\tif ( j < 0 ) {\n\t\t\tF[ i ] = 0.0;\n\t\t} else {\n\t\t\tF[ i ] = IPIO2[ j ];\n\t\t}\n\t\tj += 1;\n\t}\n\t// Compute `Q[0],Q[1],...,Q[jk]`:\n\tfor ( i = 0; i <= jk; i++ ) {\n\t\tfw = 0.0;\n\t\tfor ( j = 0; j <= jx; j++ ) {\n\t\t\tfw += x[ j ] * F[ jx + (i-j) ];\n\t\t}\n\t\tQ[ i ] = fw;\n\t}\n\tjz = jk;\n\treturn compute( x, y, jz, Q, q0, jk, jv, jx, F );\n}\n\n\n// EXPORTS //\n\nmodule.exports = kernelRempio2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar round = require( '@stdlib/math/base/special/round' );\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\n\n\n// VARIABLES //\n\n// 53 bits of 2/π:\nvar INVPIO2 = 6.36619772367581382433e-01; // 0x3FE45F30, 0x6DC9C883\n\n// First 33 bits of π/2:\nvar PIO2_1 = 1.57079632673412561417e+00;  // 0x3FF921FB, 0x54400000\n\n// PIO2_1T = π/2 - PIO2_1:\nvar PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331\n\n// Another 33 bits of π/2:\nvar PIO2_2 = 6.07710050630396597660e-11;  // 0x3DD0B461, 0x1A600000\n\n// PIO2_2T = π/2 - ( PIO2_1 + PIO2_2 ):\nvar PIO2_2T = 2.02226624879595063154e-21; // 0x3BA3198A, 0x2E037073\n\n// Another 33 bits of π/2:\nvar PIO2_3 = 2.02226624871116645580e-21;  // 0x3BA3198A, 0x2E000000\n\n// PIO2_3T = π/2 - ( PIO2_1 + PIO2_2 + PIO2_3 ):\nvar PIO2_3T = 8.47842766036889956997e-32; // 0x397B839A, 0x252049C1\n\n// Exponent mask (2047 => 0x7ff):\nvar EXPONENT_MASK = 0x7ff|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Computes `x - nπ/2 = r` for medium-sized inputs.\n*\n* @private\n* @param {number} x - input value\n* @param {uint32} ix - high word of `x`\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @returns {integer} factor of `π/2`\n*/\nfunction rempio2Medium( x, ix, y ) {\n\tvar high;\n\tvar n;\n\tvar t;\n\tvar r;\n\tvar w;\n\tvar i;\n\tvar j;\n\n\tn = round( x * INVPIO2 );\n\tr = x - ( n * PIO2_1 );\n\tw = n * PIO2_1T;\n\n\t// First rounding (good to 85 bits)...\n\tj = (ix >> 20)|0; // asm type annotation\n\ty[ 0 ] = r - w;\n\thigh = getHighWord( y[0] );\n\ti = j - ( (high >> 20) & EXPONENT_MASK );\n\n\t// Check if a second iteration is needed (good to 118 bits)...\n\tif ( i > 16 ) {\n\t\tt = r;\n\t\tw = n * PIO2_2;\n\t\tr = t - w;\n\t\tw = (n * PIO2_2T) - ((t-r) - w);\n\t\ty[ 0 ] = r - w;\n\t\thigh = getHighWord( y[0] );\n\t\ti = j - ( (high >> 20) & EXPONENT_MASK );\n\n\t\t// Check if a third iteration is needed (151 bits accumulated)...\n\t\tif ( i > 49 ) {\n\t\t\tt = r;\n\t\t\tw = n * PIO2_3;\n\t\t\tr = t - w;\n\t\t\tw = (n * PIO2_3T) - ((t-r) - w);\n\t\t\ty[ 0 ] = r - w;\n\t\t}\n\t}\n\ty[ 1 ] = (r - y[0]) - w;\n\treturn n;\n}\n\n\n// EXPORTS //\n\nmodule.exports = rempio2Medium;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation\n\n/**\n* Rounds a numeric value to the nearest integer.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.5 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.6 );\n* // returns -5.0\n*\n* @example\n* var v = round( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.5 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.2 );\n* // returns 9.0\n*\n* @example\n* var v = round( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = round( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = round( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = round( -Infinity );\n* // returns -Infinity\n*\n* @example\n* var v = round( NaN );\n* // returns NaN\n*/\nvar round = Math.round; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = round;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_sin.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar kernelCos = require( '@stdlib/math/base/special/kernel-cos' );\nvar kernelSin = require( '@stdlib/math/base/special/kernel-sin' );\nvar rempio2 = require( '@stdlib/math/base/special/rempio2' );\n\n\n// VARIABLES //\n\n// Absolute value mask: 0x7fffffff = 2147483647 => 01111111111111111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// Exponent mask: 0x7ff00000 = 2146435072 => 01111111111100000000000000000000\nvar EXPONENT_MASK = 0x7ff00000|0; // asm type annotation\n\n// High word for PI/4: 0x3fe921fb = 1072243195 => 00111111111010010010000111111011\nvar PIO4_HIGH_WORD = 0x3fe921fb|0; // asm type annotation\n\n// 2^-26 = 1.4901161193847656e-8 => 0011111001010000000000000000000000000000000000000000000000000000 => high word => 00111110010100000000000000000000 => 0x3e500000 = 1045430272\nvar SMALL_HIGH_WORD = 0x3e500000|0; // asm type annotation\n\n// Array for storing remainder elements:\nvar Y = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Computes the sine of a number.\n*\n* ## Method\n*\n* -   Let \\\\(S\\\\), \\\\(C\\\\), and \\\\(T\\\\) denote the \\\\(\\sin\\\\), \\\\(\\cos\\\\), and \\\\(\\tan\\\\), respectively, on \\\\(\\[-\\pi/4, +\\pi/4\\]\\\\).\n*\n* -   Reduce the argument \\\\(x\\\\) to \\\\(y1+y2 = x-k\\pi/2\\\\) in \\\\(\\[-\\pi/4, +\\pi/4\\]\\\\), and let \\\\(n = k \\mod 4\\\\).\n*\n* -   We have\n*\n*     | n | sin(x) | cos(x) | tan(x) |\n*     | - | ------ | ------ | ------ |\n*     | 0 |   S    |   C    |    T   |\n*     | 1 |   C    |  -S    |  -1/T  |\n*     | 2 |  -S    |  -C    |    T   |\n*     | 3 |  -C    |   S    |  -1/T  |\n*\n*\n* @param {number} x - input value (in radians)\n* @returns {number} sine\n*\n* @example\n* var v = sin( 0.0 );\n* // returns ~0.0\n*\n* @example\n* var v = sin( 3.141592653589793/2.0 );\n* // returns ~1.0\n*\n* @example\n* var v = sin( -3.141592653589793/6.0 );\n* // returns ~-0.5\n*\n* @example\n* var v = sin( NaN );\n* // returns NaN\n*/\nfunction sin( x ) {\n\tvar ix;\n\tvar n;\n\n\tix = getHighWord( x );\n\tix &= ABS_MASK;\n\n\t// Case: |x| ~< π/4\n\tif ( ix <= PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~< 2^-26\n\t\tif ( ix < SMALL_HIGH_WORD ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn kernelSin( x, 0.0 );\n\t}\n\t// Case: x is NaN or infinity\n\tif ( ix >= EXPONENT_MASK ) {\n\t\treturn NaN;\n\t}\n\t// Argument reduction...\n\tn = rempio2( x, Y );\n\tswitch ( n & 3 ) {\n\tcase 0:\n\t\treturn kernelSin( Y[ 0 ], Y[ 1 ] );\n\tcase 1:\n\t\treturn kernelCos( Y[ 0 ], Y[ 1 ] );\n\tcase 2:\n\t\treturn -kernelSin( Y[ 0 ], Y[ 1 ] );\n\tdefault:\n\t\treturn -kernelCos( Y[ 0 ], Y[ 1 ] );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = sin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.06735230105312927;\n\t}\n\treturn 0.06735230105312927 + (x * (0.007385550860814029 + (x * (0.0011927076318336207 + (x * (0.00022086279071390839 + (x * 0.000025214456545125733))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.020580808432516733;\n\t}\n\treturn 0.020580808432516733 + (x * (0.0028905138367341563 + (x * (0.0005100697921535113 + (x * (0.00010801156724758394 + (x * 0.000044864094961891516))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.3920053346762105;\n\t}\n\treturn 1.3920053346762105 + (x * (0.7219355475671381 + (x * (0.17193386563280308 + (x * (0.01864591917156529 + (x * (0.0007779424963818936 + (x * 0.000007326684307446256))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.21498241596060885;\n\t}\n\treturn 0.21498241596060885 + (x * (0.325778796408931 + (x * (0.14635047265246445 + (x * (0.02664227030336386 + (x * (0.0018402845140733772 + (x * 0.00003194753265841009))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.032788541075985965;\n\t}\n\treturn -0.032788541075985965 + (x * (0.006100538702462913 + (x * (-0.0014034646998923284 + (x * 0.00031563207090362595))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.01797067508118204;\n\t}\n\treturn 0.01797067508118204 + (x * (-0.0036845201678113826 + (x * (0.000881081882437654 + (x * -0.00031275416837512086))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.010314224129834144;\n\t}\n\treturn -0.010314224129834144 + (x * (0.0022596478090061247 + (x * (-0.0005385953053567405 + (x * 0.0003355291926355191))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.6328270640250934;\n\t}\n\treturn 0.6328270640250934 + (x * (1.4549225013723477 + (x * (0.9777175279633727 + (x * (0.22896372806469245 + (x * 0.013381091853678766))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 2.4559779371304113;\n\t}\n\treturn 2.4559779371304113 + (x * (2.128489763798934 + (x * (0.7692851504566728 + (x * (0.10422264559336913 + (x * 0.003217092422824239))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.08333333333333297;\n\t}\n\treturn 0.08333333333333297 + (x * (-0.0027777777772877554 + (x * (0.0007936505586430196 + (x * (-0.00059518755745034 + (x * (0.0008363399189962821 + (x * -0.0016309293409657527))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar fln = require( '@stdlib/math/base/special/factorialln' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) for a hypergeometric distribution with population size `N`, subpopulation size `K`, and number of draws `n`.\n*\n* @param {NonNegativeInteger} N - population size\n* @param {NonNegativeInteger} K - subpopulation size\n* @param {NonNegativeInteger} n - number of draws\n* @returns {Function} PMF\n*\n* @example\n* var mypmf = factory( 30, 20, 5 );\n* var y = mypmf( 4.0 );\n* // returns ~0.34\n*\n* y = mypmf( 1.0 );\n* // returns ~0.029\n*/\nfunction factory( N, K, n ) {\n\tvar maxs;\n\tvar mins;\n\tif (\n\t\tisnan( N ) ||\n\t\tisnan( K ) ||\n\t\tisnan( n ) ||\n\t\t!isNonNegativeInteger( N ) ||\n\t\t!isNonNegativeInteger( K ) ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tN === PINF ||\n\t\tK === PINF ||\n\t\tK > N ||\n\t\tn > N\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\n\tmins = max( 0, n + K - N );\n\tmaxs = min( K, n );\n\treturn pmf;\n\n\t/**\n\t* Evaluates the probability mass function (PMF) for a hypergeometric distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated PMF\n\t*/\n\tfunction pmf( x ) {\n\t\tvar ldenom;\n\t\tvar lnum;\n\t\tvar lpmf;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif (\n\t\t\tisNonNegativeInteger( x ) &&\n\t\t\tmins <= x &&\n\t\t\tx <= maxs\n\t\t) {\n\t\t\tlnum = fln( n ) + fln( K ) + fln( N - n ) + fln( N - K );\n\t\t\tldenom = fln( N ) + fln( x ) + fln( n - x );\n\t\t\tldenom += fln( K - x ) + fln( N - K + x - n );\n\t\t\tlpmf = lnum - ldenom;\n\t\t\treturn exp( lpmf );\n\t\t}\n\t\treturn 0.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Creates a function which always returns the same value.\n*\n* @param {*} [value] - value to always return\n* @returns {Function} constant function\n*\n* @example\n* var fcn = wrap( 3.14 );\n*\n* var v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*/\nfunction wrap( value ) {\n\treturn constantFunction;\n\n\t/**\n\t* Constant function.\n\t*\n\t* @private\n\t* @returns {*} constant value\n\t*/\n\tfunction constantFunction() {\n\t\treturn value;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar trunc = require( '@stdlib/math/base/special/trunc' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar pmf = require( '@stdlib/stats/base/dists/hypergeometric/pmf' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar sum = require( './sum.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a hypergeometric distribution with population size `N`, subpopulation size `K`, and number of draws `n`.\n*\n* @param {NonNegativeInteger} N - population size\n* @param {NonNegativeInteger} K - subpopulation size\n* @param {NonNegativeInteger} n - number of draws\n* @returns {Function} CDF\n*\n* @example\n* var mycdf = factory( 30, 20, 5 );\n* var y = mycdf( 4.0 );\n* // returns ~0.891\n*\n* y = mycdf( 1.0 );\n* // returns ~0.031\n*/\nfunction factory( N, K, n ) {\n\tif (\n\t\tisnan( N ) ||\n\t\tisnan( K ) ||\n\t\tisnan( n ) ||\n\t\t!isNonNegativeInteger( N ) ||\n\t\t!isNonNegativeInteger( K ) ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tN === PINF ||\n\t\tK === PINF ||\n\t\tK > N ||\n\t\tn > N\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a hypergeometric distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar denom;\n\t\tvar probs;\n\t\tvar num;\n\t\tvar ret;\n\t\tvar i;\n\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tx = trunc( x );\n\t\tif ( x < max( 0, n + K - N ) ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x >= min( n, K ) ) {\n\t\t\treturn 1.0;\n\t\t}\n\n\t\tprobs = new Array( x + 1 );\n\t\tprobs[ x ] = pmf( x, N, K, n );\n\n\t\t/*\n\t\t* Use recurrence relation:\n\t\t* (x+1)( N - K - (n-x-1) )P(X=x+1)=(K-x)(n-x)P(X=x)\n\t\t*/\n\t\tfor ( i = x - 1; i >= 0; i-- ) {\n\t\t\tnum = ( i + 1 ) * ( N - K - (n-i-1) );\n\t\t\tdenom = ( K - i ) * ( n - i );\n\t\t\tprobs[ i ] = ( num / denom ) * probs[ i + 1 ];\n\t\t}\n\t\tret = sum( probs );\n\t\treturn min( ret, 1.0 );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\nvar tCDF = require( '@stdlib/stats/base/dists/t/cdf' );\nvar tQuantile = require( '@stdlib/stats/base/dists/t/quantile' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar validate = require( './validate.js' );\nvar variance = require( './variance.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\nvar mean = require( './mean.js' );\n\n\n// MAIN //\n\n/**\n* Computes a two-sample Student's t test.\n*\n* @param {NumericArray} x - first data array\n* @param {NumericArray} y - second data array\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.difference=0] - difference in means under H0\n* @param {string} [options.variance='unequal'] - whether variances are `equal` or `unequal` under H0\n* @throws {TypeError} x argument has to be a typed array or array of numbers\n* @throws {TypeError} y argument has to be a typed array or array of numbers\n* @throws {TypeError} options has to be simple object\n* @throws {TypeError} alpha option has to be a number primitive\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {TypeError} alternative option has to be a string primitive\n* @throws {Error} alternative option must be `two-sided`, `less` or `greater`\n* @throws {TypeError} difference option has to be a number primitive\n* @throws {TypeError} variance option has to be a string primitive\n* @throws {Error} variance option must be `equal` or `unequal`\n* @returns {Object} test result object\n*/\nfunction ttest2( x, y, options ) {\n\tvar stderr;\n\tvar alpha;\n\tvar xmean;\n\tvar ymean;\n\tvar vars;\n\tvar cint;\n\tvar diff;\n\tvar opts;\n\tvar pval;\n\tvar xvar;\n\tvar yvar;\n\tvar stat;\n\tvar sdx;\n\tvar sdy;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar nx;\n\tvar ny;\n\tvar df;\n\tvar v;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument `x` must be a numeric array. Value: `' + x + '`.' );\n\t}\n\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument `y` must be a numeric array. Value: `' + y + '`.' );\n\t}\n\topts = {};\n\tif ( options ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tdiff = opts.difference || 0.0;\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( 'invalid argument. Option `alpha` must be a number in the range 0 to 1. Value: `' + alpha + '`.' );\n\t}\n\tnx = x.length;\n\tny = y.length;\n\n\txvar = variance( x );\n\tyvar = variance( y );\n\n\tvars = opts.variance || 'unequal';\n\tif ( vars === 'equal' ) {\n\t\tdf = nx + ny - 2;\n\t\tv = ((nx-1) * xvar) + ((ny-1) * yvar);\n\t\tv /= df;\n\t\tstderr = sqrt( v * ((1/nx) + (1/ny)) );\n\t}\n\telse if ( vars === 'unequal' ) {\n\t\tsdx = sqrt( xvar/nx );\n\t\tsdy = sqrt( yvar/ny );\n\t\tstderr = sqrt( (sdx*sdx) + (sdy*sdy) );\n\t\tv = pow( sdx, 4 ) / ( nx - 1 );\n\t\tv += pow( sdy, 4 ) / ( ny - 1 );\n\t\tdf = pow( stderr, 4 ) / v;\n\t}\n\telse {\n\t\tthrow new Error( 'Invalid option. `variance` must be either `equal` or `unequal`. Value: `' + vars + '`' );\n\t}\n\n\txmean = mean( x );\n\tymean = mean( y );\n\tstat = ( xmean - ymean - diff ) / stderr;\n\n\talt = opts.alternative || 'two-sided';\n\tswitch ( alt ) {\n\tcase 'two-sided':\n\t\tpval = 2.0 * tCDF( -abs(stat), df );\n\t\tcint = [\n\t\t\tstat - tQuantile( 1.0-(alpha/2.0), df ),\n\t\t\tstat + tQuantile( 1.0-(alpha/2.0), df )\n\t\t];\n\t\tcint[ 0 ] = diff + (cint[ 0 ] * stderr);\n\t\tcint[ 1 ] = diff + (cint[ 1 ] * stderr);\n\t\tbreak;\n\tcase 'greater':\n\t\tpval = 1.0 - tCDF( stat, df );\n\t\tcint = [ stat - tQuantile( 1.0-alpha, df ), PINF ];\n\t\tcint[ 0 ] = diff + (cint[ 0 ] * stderr);\n\t\tbreak;\n\tcase 'less':\n\t\tpval = tCDF( stat, df );\n\t\tcint = [ NINF, stat + tQuantile( 1.0-alpha, df ) ];\n\t\tcint[ 1 ] = diff + (cint[ 1 ] * stderr);\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'Invalid option. `alternative` must be either `two-sided`, `less` or `greater`. Value: `' + alt + '`' );\n\t}\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'df', df );\n\tsetReadOnly( out, 'method', ( vars === 'equal' ) ? 'Two-sample t-test' : 'Welch two-sample t-test' );\n\tsetReadOnly( out, 'nullValue', diff );\n\tsetReadOnly( out, 'xmean', xmean );\n\tsetReadOnly( out, 'ymean', ymean );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ttest2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object of numbers.\n*\n* @module @stdlib/assert/is-number-array\n*\n* @example\n* var isNumberArray = require( '@stdlib/assert/is-number-array' );\n*\n* var bool = isNumberArray( [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = isNumberArray( [ '1', 2, 3 ] );\n* // returns false\n*\n* @example\n* var isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\n*\n* var bool = isNumberArray( [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = isNumberArray( [ 1, new Number( 2 ) ] );\n* // returns false\n*\n* @example\n* var isNumberArray = require( '@stdlib/assert/is-number-array' ).objects;\n*\n* var bool = isNumberArray( [ new Number( 1 ), new Number( 2 ) ] );\n* // returns true\n*\n* bool = isNumberArray( [ new Number( 1 ), 2 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( '@stdlib/assert/tools/array-like-function' );\nvar isNumber = require( '@stdlib/assert/is-number' );\n\n\n// MAIN //\n\nvar isNumberArray = arrayfun( isNumber );\nsetReadOnly( isNumberArray, 'primitives', arrayfun( isNumber.isPrimitive ) );\nsetReadOnly( isNumberArray, 'objects', arrayfun( isNumber.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNumberArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function which tests if every element in an array-like object passes a test condition.\n*\n* @module @stdlib/assert/tools/array-like-function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n* var arraylikefcn = require( '@stdlib/assert/tools/array-like-function' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\n\n// MODULES //\n\nvar arraylikefcn = require( './arraylikefcn.js' );\n\n\n// EXPORTS //\n\nmodule.exports = arraylikefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLike = require( '@stdlib/assert/is-array-like' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array-like object passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array-like object function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arraylikefcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a function. Value: `' + predicate + '`.' );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array-like object passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array-like object for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArrayLike( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arraylikefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is array-like.\n*\n* @module @stdlib/assert/is-array-like\n*\n* @example\n* var isArrayLike = require( '@stdlib/assert/is-array-like' );\n*\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* bool = isArrayLike( { 'length': 10 } );\n* // returns true\n*\n* bool = isArrayLike( 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isArrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is array-like\n*\n* @example\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLike( {'length':10} );\n* // returns true\n*/\nfunction isArrayLike( value ) {\n\treturn (\n\t\tvalue !== void 0 &&\n\t\tvalue !== null &&\n\t\ttypeof value !== 'function' &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is typed-array-like.\n*\n* @module @stdlib/assert/is-typed-array-like\n*\n* @example\n* var Int16Array = require( '@stdlib/array/int16' );\n* var isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\n*\n* var bool = isTypedArrayLike( new Int16Array() );\n* // returns true\n*\n* bool = isTypedArrayLike({\n*\t'length': 10,\n*\t'byteOffset': 0,\n*\t'byteLength': 10,\n*\t'BYTES_PER_ELEMENT': 4\n* });\n* // returns true\n*/\n\n// MODULES //\n\nvar isTypedArrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar MAX = require( '@stdlib/constants/array/max-typed-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is typed-array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is typed-array-like\n*\n* @example\n* var arr = {\n*\t'BYTES_PER_ELEMENT': 8,\n*\t'length': 10,\n*\t'byteOffset': 0,\n*\t'byteLength': 10\n* };\n* var val = isTypedArrayLike( arr );\n* // returns true\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var val = isTypedArrayLike( new Int8Array( 4 ) );\n* // returns true\n*\n* @example\n* var val = isTypedArrayLike( [] );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( {} );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( null );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( 'beep' );\n* // returns false\n*/\nfunction isTypedArrayLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\tisNonNegativeInteger( value.length ) &&\n\t\tvalue.length <= MAX &&\n\t\ttypeof value.BYTES_PER_ELEMENT === 'number' &&\n\t\ttypeof value.byteOffset === 'number' &&\n\t\ttypeof value.byteLength === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert/is-nonnegative-integer\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isObject;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNonNegativeInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonNegativeInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants/array/max-typed-array-length\n*\n* @example\n* var MAX_TYPED_ARRAY_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n* // returns 9007199254740991\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/\nvar MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n\n\n// EXPORTS //\n\nmodule.exports = MAX_TYPED_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a read-only property.\n*\n* @module @stdlib/utils/define-read-only-property\n*\n* @example\n* var setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n*\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setReadOnly = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( '@stdlib/utils/define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Student's t distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/t/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/t/cdf' );\n*\n* var y = cdf( 2.0, 0.1 );\n* // returns ~0.611\n*\n* y = cdf( 1.0, 2.0 );\n* // returns ~0.789\n*\n* y = cdf( -1.0, 4.0 );\n* // returns ~0.187\n*\n* var mycdf = cdf.factory( 0.5 );\n* y = mycdf( 3.0 );\n* // returns ~0.816\n*\n* y = mycdf( 1.0 );\n* // returns ~0.699\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar cdf = require( './cdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Student's t distribution with degrees of freedom `v` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 2.0, 0.1 );\n* // returns ~0.611\n*\n* @example\n* var y = cdf( 1.0, 2.0 );\n* // returns ~0.789\n*\n* @example\n* var y = cdf( -1.0, 4.0 );\n* // returns ~0.187\n*\n* @example\n* var y = cdf( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, v ) {\n\tvar x2;\n\tvar p;\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( v ) ||\n\t\tv <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn 0.5;\n\t}\n\tx2 = pow( x, 2.0 );\n\tif ( v > 2.0*x2 ) {\n\t\tz = x2 / ( v + x2 );\n\t\tp = betainc( z, 0.5, v/2.0, true, true ) / 2.0;\n\t} else {\n\t\tz = v / ( v + x2 );\n\t\tp = betainc( z, v/2.0, 0.5, true, false ) / 2.0;\n\t}\n\treturn ( x > 0.0 ) ? 1.0 - p : p;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar kernelBetainc = require( '@stdlib/math/base/special/kernel-betainc' );\n\n\n// VARIABLES //\n\nvar out = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Evaluates the incomplete beta function.\n*\n* @param {Probability} x - function parameter\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {boolean} [regularized=true] - boolean indicating if the function should evaluate the regularized or non-regularized incomplete beta function\n* @param {boolean} [upper=false] - boolean indicating if the function should return the upper tail of the incomplete beta function\n* @returns {number} function value\n*\n* @example\n* var y = betainc( 0.5, 2.0, 2.0 );\n* // returns 0.5\n*\n* @example\n* var y = betainc( 0.5, 2.0, 2.0, false );\n* // returns ~0.083\n*\n* @example\n* var y = betainc( 0.2, 1.0, 2.0 );\n* // returns 0.36\n*/\nfunction betainc( x, a, b, regularized, upper ) {\n\t/* eslint-disable no-unneeded-ternary */\n\tregularized = ( regularized === false ) ? false : true;\n\tupper = ( upper === true ) ? true : false;\n\tout = kernelBetainc( out, x, a, b, upper, regularized );\n\treturn out[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = betainc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar compute = require( './kernel_betainc.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the incomplete beta function and its first derivative.\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {Probability} x - function input\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {boolean} invert - boolean indicating if the function should return the upper tail of the incomplete beta function instead\n* @param {boolean} normalized - boolean indicating if the function should evaluate the regularized boolean beta function\n* @returns {(Array|TypedArray|Object)} function value and first derivative\n*\n* @example\n* var out = kernelBetainc( 0.5, 2.0, 2.0, false, false );\n* // returns [ ~0.083, ~1.5 ]\n*\n* @example\n* var out = kernelBetainc( 0.2, 1.0, 2.0, true, false );\n* // returns [ 0.32, 1.6 ]\n*\n* @example\n* var arr = new Array( 2 );\n* var out = kernelBetainc( arr, 0.2, 1.0, 2.0, true, true );\n* // returns [ 0.64, 1.6 ]\n*\n* var bool = ( arr === out );\n* // returns true\n*/\nfunction kernelBetainc( out, x, a, b, invert, normalized ) {\n\tif ( arguments.length === 5 ) {\n\t\treturn compute( new Array( 2 ), out, x, a, b, invert );\n\t}\n\treturn compute( out, x, a, b, invert, normalized );\n}\n\n\n// EXPORTS //\n\nmodule.exports = kernelBetainc;\n","/* eslint-disable max-statements, max-lines */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar expm1 = require( '@stdlib/math/base/special/expm1' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar asin = require( '@stdlib/math/base/special/asin' );\nvar beta = require( '@stdlib/math/base/special/beta' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar MAX_FLOAT64 = require( '@stdlib/constants/math/float64-max' );\nvar MIN_FLOAT64 = require( '@stdlib/constants/math/float64-smallest-normal' );\nvar MAX_INT32 = require( '@stdlib/constants/math/int32-max' );\nvar HALF_PI = require( '@stdlib/constants/math/float64-half-pi' );\nvar PI = require( '@stdlib/constants/math/float64-pi' );\nvar betaSmallBLargeASeries = require( './beta_small_b_large_a_series.js' );\nvar risingFactorialRatio = require( './rising_factorial_ratio.js' );\nvar ibetaPowerTerms = require( './ibeta_power_terms.js' );\nvar ibetaFraction2 = require( './ibeta_fraction2.js');\nvar binomialCCDF = require( './binomial_ccdf.js' );\nvar ibetaAStep = require( './ibeta_a_step.js' );\nvar ibetaSeries = require( './ibeta_series.js' );\n\n\n// VARIABLES //\n\nvar ONE_OVER_PI = 1.0 / PI;\n\n\n// MAIN //\n\n/**\n* Evaluates the incomplete beta function and its first derivative. This function divides up the input range and selects the right implementation method for each domain.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {Probability} x - function input\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {boolean} invert - boolean indicating if the function should return the upper tail of the incomplete beta function instead\n* @param {boolean} normalized - boolean indicating if the function should evaluate the regularized boolean beta function\n* @returns {(Array|TypedArray|Object)} function value and first derivative\n*\n* @example\n* var out = ibetaImp( new Array( 2 ), 0.5, 2.0, 2.0, false, false );\n* // returns [ ~0.083, ~1.5 ]\n*\n* @example\n* var out = ibetaImp( new Array( 2 ), 0.2, 1.0, 2.0, true, false );\n* // returns [ 0.32, 1.6 ]\n*\n* @example\n* var out = ibetaImp( new Array( 2 ), 0.2, 1.0, 2.0, true, true );\n* // returns [ 0.64, 1.6 ]\n*/\nfunction ibetaImp( out, x, a, b, invert, normalized ) {\n\tvar lambda;\n\tvar prefix;\n\tvar fract;\n\tvar bbar;\n\tvar div;\n\tvar tmp;\n\tvar k;\n\tvar n;\n\tvar p;\n\tvar y;\n\ty = 1.0 - x;\n\n\t// Derivative not set...\n\tout[ 1 ] = -1;\n\tif ( isnan( x ) || x < 0.0 || x > 1.0 ) {\n\t\tout[ 0 ] = NaN;\n\t\tout[ 1 ] = NaN;\n\t\treturn out;\n\t}\n\tif ( normalized ) {\n\t\tif ( a < 0.0 || b < 0.0 ) {\n\t\t\tout[ 0 ] = NaN;\n\t\t\tout[ 1 ] = NaN;\n\t\t\treturn out;\n\t\t}\n\t\t// Extend to a few very special cases...\n\t\tif ( a === 0.0 ) {\n\t\t\tif ( b === 0.0 ) {\n\t\t\t\tout[ 0 ] = NaN;\n\t\t\t\tout[ 1 ] = NaN;\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\tif ( b > 0.0 ) {\n\t\t\t\tout[ 0 ] = ( invert ) ? 0.0 : 1.0;\n\t\t\t\treturn out;\n\t\t\t}\n\t\t} else if ( b === 0.0 ) {\n\t\t\tif ( a > 0.0 ) {\n\t\t\t\tout[ 0 ] = ( invert ) ? 1.0 : 0.0;\n\t\t\t\treturn out;\n\t\t\t}\n\t\t}\n\t} else if ( a <= 0.0 || b <= 0.0 ) {\n\t\tout[ 0 ] = NaN;\n\t\tout[ 1 ] = NaN;\n\t\treturn out;\n\t}\n\tif ( x === 0.0 ) {\n\t\tif ( a === 1.0 ) {\n\t\t\tout[ 1 ] = 1.0;\n\t\t} else {\n\t\t\tout[ 1 ] = ( a < 1.0 ) ? MAX_FLOAT64 / 2.0 : MIN_FLOAT64 * 2.0;\n\t\t}\n\t\tif ( invert ) {\n\t\t\tout[ 0 ] = ( normalized ) ? 1.0 : beta( a, b );\n\t\t\treturn out;\n\t\t}\n\t\tout[ 0 ] = 0.0;\n\t\treturn out;\n\t}\n\tif ( x === 1.0 ) {\n\t\tif ( b === 1.0 ) {\n\t\t\tout[ 1 ] = 1.0;\n\t\t} else {\n\t\t\tout[ 1 ] = ( b < 1.0 ) ? MAX_FLOAT64 / 2.0 : MIN_FLOAT64 * 2.0;\n\t\t}\n\t\tif ( invert ) {\n\t\t\tout[ 0 ] = 0.0;\n\t\t} else {\n\t\t\tout[ 0 ] = ( normalized ) ? 1.0 : beta( a, b );\n\t\t}\n\t\treturn out;\n\t}\n\tif ( a === 0.5 && b === 0.5 ) {\n\t\tout[ 1 ] = ONE_OVER_PI * sqrt( y * x );\n\n\t\t// We have an arcsine distribution:\n\t\tp = ( invert ) ? asin( sqrt(y) ) : asin( sqrt(x) );\n\t\tp /= HALF_PI;\n\t\tif ( !normalized ) {\n\t\t\tp *= PI;\n\t\t}\n\t\tout[ 0 ] = p;\n\t\treturn out;\n\t}\n\tif ( a === 1.0 ) {\n\t\ttmp = b;\n\t\tb = a;\n\t\ta = tmp;\n\n\t\ttmp = y;\n\t\ty = x;\n\t\tx = tmp;\n\n\t\tinvert = !invert;\n\t}\n\tif ( b === 1.0 ) {\n\t\t// Special case see: http://functions.wolfram.com/GammaBetaErf/BetaRegularized/03/01/01/\n\t\tif ( a === 1.0 ) {\n\t\t\tout[ 1 ] = 1.0;\n\t\t\tout[ 0 ] = ( invert ) ? y : x;\n\t\t\treturn out;\n\t\t}\n\t\tout[ 1 ] = a * pow( x, a - 1.0 );\n\t\tif ( y < 0.5 ) {\n\t\t\tp = ( invert ) ? -expm1( a * log1p(-y) ) : exp( a * log1p(-y) );\n\t\t} else {\n\t\t\tp = ( invert ) ? -( pow( x, a ) - 1.0 ) : pow( x, a );\n\t\t}\n\t\tif ( !normalized ) {\n\t\t\tp /= a;\n\t\t}\n\t\tout[ 0 ] = p;\n\t\treturn out;\n\t}\n\tif ( min( a, b ) <= 1.0 ) {\n\t\tif ( x > 0.5 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = y;\n\t\t\ty = x;\n\t\t\tx = tmp;\n\n\t\t\tinvert = !invert;\n\t\t}\n\t\tif ( max( a, b ) <= 1.0 ) {\n\t\t\t// Both a,b < 1:\n\t\t\tif ( (a >= min( 0.2, b ) ) || ( pow(x, a) <= 0.9 ) ) {\n\t\t\t\tif ( invert ) {\n\t\t\t\t\tfract = -( ( normalized ) ? 1.0 : beta( a, b ) );\n\t\t\t\t\tinvert = false;\n\t\t\t\t\tfract = -ibetaSeries( a, b, x, fract, normalized, out, y );\n\t\t\t\t} else {\n\t\t\t\t\tfract = ibetaSeries( a, b, x, 0, normalized, out, y );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttmp = b;\n\t\t\t\tb = a;\n\t\t\t\ta = tmp;\n\n\t\t\t\ttmp = y;\n\t\t\t\ty = x;\n\t\t\t\tx = tmp;\n\n\t\t\t\tinvert = !invert;\n\t\t\t\tif ( y >= 0.3 ) {\n\t\t\t\t\tif ( invert ) {\n\t\t\t\t\t\tfract = -( ( normalized ) ? 1.0 : beta( a, b ) );\n\t\t\t\t\t\tinvert = false;\n\t\t\t\t\t\tfract = -ibetaSeries( a, b, x, fract, normalized, out, y ); // eslint-disable-line max-len\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfract = ibetaSeries( a, b, x, 0, normalized, out, y );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Sidestep on a, and then use the series representation:\n\t\t\t\t\tif ( normalized ) {\n\t\t\t\t\t\tprefix = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprefix = risingFactorialRatio( a + b, a, 20 );\n\t\t\t\t\t}\n\t\t\t\t\tfract = ibetaAStep( a, b, x, y, 20, normalized, out );\n\t\t\t\t\tif ( invert ) {\n\t\t\t\t\t\tfract -= ( ( normalized ) ? 1 : beta( a, b ) );\n\t\t\t\t\t\tinvert = false;\n\t\t\t\t\t\tfract = -betaSmallBLargeASeries( a + 20.0, b, x, y, fract, prefix, normalized ); // eslint-disable-line max-len\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfract = betaSmallBLargeASeries( a + 20.0, b, x, y, fract, prefix, normalized ); // eslint-disable-line max-len\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( b <= 1.0 || ( x < 0.1 && ( pow( b * x, a ) <= 0.7 ) ) ) {\n\t\t\tif ( invert ) {\n\t\t\t\tfract = -( ( normalized ) ? 1 : beta( a, b ) );\n\t\t\t\tinvert = false;\n\t\t\t\tfract = -ibetaSeries( a, b, x, fract, normalized, out, y );\n\t\t\t} else {\n\t\t\t\tfract = ibetaSeries( a, b, x, 0.0, normalized, out, y );\n\t\t\t}\n\t\t} else {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = y;\n\t\t\ty = x;\n\t\t\tx = tmp;\n\t\t\tinvert = !invert;\n\n\t\t\tif ( y >= 0.3 ) {\n\t\t\t\tif (invert) {\n\t\t\t\t\tfract = -(( normalized ) ? 1.0 : beta( a, b ));\n\t\t\t\t\tinvert = false;\n\t\t\t\t\tfract = -ibetaSeries( a, b, x, fract, normalized, out, y );\n\t\t\t\t} else {\n\t\t\t\t\tfract = ibetaSeries( a, b, x, 0.0, normalized, out, y );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( a >= 15.0 ) {\n\t\t\t\tif ( invert ) {\n\t\t\t\t\tfract = -(( normalized ) ? 1.0 : beta( a, b ));\n\t\t\t\t\tinvert = false;\n\t\t\t\t\tfract = -betaSmallBLargeASeries( a, b, x, y, fract, 1.0, normalized ); // eslint-disable-line max-len\n\t\t\t\t} else {\n\t\t\t\t\tfract = betaSmallBLargeASeries( a, b, x, y, 0.0, 1.0, normalized ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( normalized ) {\n\t\t\t\t\tprefix = 1;\n\t\t\t\t} else {\n\t\t\t\t\t// Sidestep to improve errors:\n\t\t\t\t\tprefix = risingFactorialRatio( a + b, a, 20.0 );\n\t\t\t\t}\n\t\t\t\tfract = ibetaAStep( a, b, x, y, 20.0, normalized, out );\n\t\t\t\tif ( invert ) {\n\t\t\t\t\tfract -= ( ( normalized ) ? 1.0 : beta( a, b ) );\n\t\t\t\t\tinvert = false;\n\t\t\t\t\tfract = -betaSmallBLargeASeries( a + 20.0, b, x, y, fract, prefix, normalized ); // eslint-disable-line max-len\n\t\t\t\t} else {\n\t\t\t\t\tfract = betaSmallBLargeASeries( a + 20.0, b, x, y, fract, prefix, normalized ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Both a,b >= 1:\n\t\tif ( a < b ) {\n\t\t\tlambda = a - ( (a + b) * x );\n\t\t} else {\n\t\t\tlambda = ( (a + b) * y ) - b;\n\t\t}\n\t\tif ( lambda < 0.0 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = y;\n\t\t\ty = x;\n\t\t\tx = tmp;\n\t\t\tinvert = !invert;\n\t\t}\n\t\tif ( b < 40.0 ) {\n\t\t\tif (\n\t\t\t\tfloor(a) === a &&\n\t\t\t\tfloor(b) === b &&\n\t\t\t\ta < MAX_INT32 - 100\n\t\t\t) {\n\t\t\t\t// Relate to the binomial distribution and use a finite sum:\n\t\t\t\tk = a - 1.0;\n\t\t\t\tn = b + k;\n\t\t\t\tfract = binomialCCDF( n, k, x, y );\n\t\t\t\tif ( !normalized ) {\n\t\t\t\t\tfract *= beta( a, b );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( b * x <= 0.7 ) {\n\t\t\t\tif ( invert ) {\n\t\t\t\t\tfract = -( ( normalized ) ? 1.0 : beta( a, b ) );\n\t\t\t\t\tinvert = false;\n\t\t\t\t\tfract = -ibetaSeries( a, b, x, fract, normalized, out, y );\n\t\t\t\t} else {\n\t\t\t\t\tfract = ibetaSeries( a, b, x, 0.0, normalized, out, y );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( a > 15.0 ) {\n\t\t\t\t// Sidestep so we can use the series representation:\n\t\t\t\tn = floor( b );\n\t\t\t\tif ( n === b ) {\n\t\t\t\t\tn -= 1;\n\t\t\t\t}\n\t\t\t\tbbar = b - n;\n\t\t\t\tif ( normalized ) {\n\t\t\t\t\tprefix = 1;\n\t\t\t\t} else {\n\t\t\t\t\tprefix = risingFactorialRatio( a + bbar, bbar, n );\n\t\t\t\t}\n\t\t\t\tfract = ibetaAStep( bbar, a, y, x, n, normalized );\n\t\t\t\tfract = betaSmallBLargeASeries( a, bbar, x, y, fract, 1.0, normalized ); // eslint-disable-line max-len\n\t\t\t\tfract /= prefix;\n\t\t\t}\n\t\t\telse if ( normalized ) {\n\t\t\t\tn = floor( b );\n\t\t\t\tbbar = b - n;\n\t\t\t\tif ( bbar <= 0 ) {\n\t\t\t\t\tn -= 1;\n\t\t\t\t\tbbar += 1;\n\t\t\t\t}\n\t\t\t\tfract = ibetaAStep( bbar, a, y, x, n, normalized );\n\t\t\t\tfract += ibetaAStep( a, bbar, x, y, 20.0, normalized );\n\t\t\t\tif ( invert ) {\n\t\t\t\t\tfract -= 1;\n\t\t\t\t}\n\t\t\t\tfract = betaSmallBLargeASeries( a + 20.0, bbar, x, y, fract, 1, normalized ); // eslint-disable-line max-len\n\t\t\t\tif ( invert ) {\n\t\t\t\t\tfract = -fract;\n\t\t\t\t\tinvert = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfract = ibetaFraction2( a, b, x, y, normalized, out );\n\t\t\t}\n\t\t} else {\n\t\t\tfract = ibetaFraction2( a, b, x, y, normalized, out );\n\t\t}\n\t}\n\tif ( out[ 1 ] < 0.0 ) {\n\t\tout[ 1 ] = ibetaPowerTerms( a, b, x, y, true );\n\t}\n\tdiv = y * x;\n\tif ( out[ 1 ] !== 0.0 ) {\n\t\tif ( ( MAX_FLOAT64 * div < out[ 1 ] ) ) {\n\t\t\t// Overflow, return an arbitrarily large value:\n\t\t\tout[ 1 ] = MAX_FLOAT64 / 2.0;\n\t\t} else {\n\t\t\tout[ 1 ] /= div;\n\t\t}\n\t}\n\tout[ 0 ] = ( invert ) ? ( ( normalized ) ? 1.0 : beta( a, b ) ) - fract : fract; // eslint-disable-line max-len\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaImp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FDLIBM]{@link http://www.netlib.org/fdlibm/s_expm1.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar FLOAT64_EXPONENT_BIAS = require( '@stdlib/constants/math/float64-exponent-bias' );\nvar HALF_LN2 = require( '@stdlib/constants/math/float64-half-ln-two' );\nvar polyval = require( './polyval_q.js' );\n\n\n// VARIABLES //\n\nvar OVERFLOW_THRESHOLD = 7.09782712893383973096e+02; // 0x40862E42 0xFEFA39EF\n\n// High and low words of ln(2):\nvar LN2_HI = 6.93147180369123816490e-01; // 0x3FE62E42 0xFEE00000\nvar LN2_LO = 1.90821492927058770002e-10; // 0x3DEA39EF 0x35793C76\n\n// 1 / ln(2):\nvar LN2_INV = 1.44269504088896338700e+00; // 0x3FF71547 0x652B82FE\n\n// ln(2) * 56:\nvar LN2x56 = 3.88162421113569373274e+01; // 0x4043687A 0x9F1AF2B1\n\n// ln(2) * 1.5:\nvar LN2_HALFX3 = 1.03972077083991796413e+00; // 0x3FF0A2B2 0x3F3BAB73\n\n\n// MAIN //\n\n/**\n* Computes `exp(x) - 1`.\n*\n* ## Method\n*\n* 1.  Given \\\\(x\\\\), we use argument reduction to find \\\\(r\\\\) and an integer \\\\(k\\\\) such that\n*\n*     ```tex\n*     x = k \\cdot \\ln(2) + r\n*     ```\n*\n*     where\n*\n*     ```tex\n*     |r| \\leq \\frac{\\ln(2)}{2} \\approx 0.34658\n*     ```\n*\n*     <!-- <note> -->\n*\n*     A correction term \\\\(c\\\\) will need to be computed to compensate for the error in \\\\(r\\\\) when rounded to a floating-point number.\n*\n*     <!-- </note> -->\n*\n* 2.  To approximate \\\\(\\operatorname{expm1}(r)\\\\), we use a special rational function on the interval \\\\(\\[0,0.34658]\\\\). Since\n*\n*     ```tex\n*     r \\frac{e^r + 1}{e^r - 1} = 2 + \\frac{r^2}{6} - \\frac{r^4}{360} + \\ldots\n*     ```\n*\n*     we define \\\\(\\operatorname{R1}(r^2)\\\\) by\n*\n*     ```tex\n*     r \\frac{e^r + 1}{e^r - 1} = 2 + \\frac{r^2}{6} \\operatorname{R1}(r^2)\n*     ```\n*\n*     That is,\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{R1}(r^2) &= \\frac{6}{r} \\biggl(\\frac{e^r+1}{e^r-1} - \\frac{2}{r}\\biggr) \\\\\n*     &= \\frac{6}{r} \\biggl( 1 + 2 \\biggl(\\frac{1}{e^r-1} - \\frac{1}{r}\\biggr)\\biggr) \\\\\n*     &= 1 - \\frac{r^2}{60} + \\frac{r^4}{2520} - \\frac{r^6}{100800} + \\ldots\n*     \\end{align*}\n*     ```\n*\n*     We use a special Remes algorithm on \\\\(\\[0,0.347]\\\\) to generate a polynomial of degree \\\\(5\\\\) in \\\\(r^2\\\\) to approximate \\\\(\\mathrm{R1}\\\\). The maximum error of this polynomial approximation is bounded by \\\\(2^{-61}\\\\). In other words,\n*\n*     ```tex\n*     \\operatorname{R1}(z) \\approx 1 + \\mathrm{Q1} \\cdot z + \\mathrm{Q2} \\cdot z^2 + \\mathrm{Q3} \\cdot z^3 + \\mathrm{Q4} \\cdot z^4 + \\mathrm{Q5} \\cdot z^5\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\begin{align*}\n*     \\mathrm{Q1} &= -1.6666666666666567384\\mbox{e-}2 \\\\\n*     \\mathrm{Q2} &= 3.9682539681370365873\\mbox{e-}4 \\\\\n*     \\mathrm{Q3} &= -9.9206344733435987357\\mbox{e-}6 \\\\\n*     \\mathrm{Q4} &= 2.5051361420808517002\\mbox{e-}7 \\\\\n*     \\mathrm{Q5} &= -6.2843505682382617102\\mbox{e-}9\n*     \\end{align*}\n*     ```\n*\n*     where \\\\(z = r^2\\\\) and the values of \\\\(\\mathrm{Q1}\\\\) to \\\\(\\mathrm{Q5}\\\\) are listed in the source. The error is bounded by\n*\n*     ```tex\n*     \\biggl| 1 + \\mathrm{Q1} \\cdot z + \\ldots + \\mathrm{Q5} \\cdot z - \\operatorname{R1}(z) \\biggr| \\leq 2^{-61}\n*     ```\n*\n*     \\\\(\\operatorname{expm1}(r) = e^r - 1\\\\) is then computed by the following specific way which minimizes the accumulated rounding error\n*\n*     ```tex\n*     \\operatorname{expm1}(r) = r + \\frac{r^2}{2} + \\frac{r^3}{2} \\biggl( \\frac{3 - (\\mathrm{R1} + \\mathrm{R1} \\cdot \\frac{r}{2})}{6 - r ( 3 - \\mathrm{R1} \\cdot \\frac{r}{2})} \\biggr)\n*     ```\n*\n*     To compensate for the error in the argument reduction, we use\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{expm1}(r+c) &= \\operatorname{expm1}(r) + c + \\operatorname{expm1}(r) \\cdot c \\\\\n*     &\\approx \\operatorname{expm1}(r) + c + rc\n*     \\end{align*}\n*     ```\n*\n*     Thus, \\\\(c + rc\\\\) will be added in as the correction terms for \\\\(\\operatorname{expm1}(r+c)\\\\). Now, we can rearrange the term to avoid optimization screw up.\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{expm1}(r+c) &\\approx r - \\biggl( \\biggl( r + \\biggl( \\frac{r^2}{2} \\biggl( \\frac{\\mathrm{R1} - (3 - \\mathrm{R1} \\cdot \\frac{r}{2})}{6 - r (3 - \\mathrm{R1} \\cdot \\frac{r}{2})} \\biggr) - c \\biggr) - c \\biggr) - \\frac{r^2}{2} \\biggr) \\\\\n*     &= r - \\mathrm{E}\n*     \\end{align*}\n*     ```\n*\n* 3.  To scale back to obtain \\\\(\\operatorname{expm1}(x)\\\\), we have (from step 1)\n*\n*     ```tex\n*     \\operatorname{expm1}(x) = \\begin{cases}\n*     2^k  (\\operatorname{expm1}(r) + 1) - 1 \\\\\n*     2^k (\\operatorname{expm1}(r) + (1-2^{-k}))\n*     \\end{cases}\n*     ```\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{expm1}(\\infty) &= \\infty \\\\\n* \\operatorname{expm1}(-\\infty) &= -1 \\\\\n* \\operatorname{expm1}(\\mathrm{NaN}) &= \\mathrm{NaN}\n* \\end{align*}\n* ```\n*\n*\n* ## Notes\n*\n* -   For finite arguments, only \\\\(\\operatorname{expm1}(0) = 0\\\\) is exact.\n*\n* -   To save one multiplication, we scale the coefficient \\\\(\\mathrm{Qi}\\\\) to \\\\(\\mathrm{Qi} \\cdot {2^i}\\\\) and replace \\\\(z\\\\) by \\\\(\\frac{x^2}{2}\\\\).\n*\n* -   To achieve maximum accuracy, we compute \\\\(\\operatorname{expm1}(x)\\\\) by\n*\n*     -   if \\\\(x < -56 \\cdot \\ln(2)\\\\), return \\\\(-1.0\\\\) (raise inexact if \\\\(x\\\\) does not equal \\\\(\\infty\\\\))\n*\n*     -   if \\\\(k = 0\\\\), return \\\\(r-\\mathrm{E}\\\\)\n*\n*     -   if \\\\(k = -1\\\\), return \\\\(\\frac{(r-\\mathrm{E})-1}{2}\\\\)\n*\n*     -   if \\\\(k = 1\\\\),\n*\n*         -   if \\\\(r < -0.25\\\\), return \\\\(2((r+0.5)- \\mathrm{E})\\\\)\n*         -   else return \\\\(1+2(r-\\mathrm{E})\\\\)\n*\n*     -   if \\\\(k < -2\\\\) or \\\\(k > 56\\\\), return \\\\(2^k(1-(\\mathrm{E}-r)) - 1\\\\) (or \\\\(e^x-1\\\\))\n*\n*     -   if \\\\(k \\leq 20\\\\), return \\\\(2^k((1-2^{-k})-(\\mathrm{E}-r))\\\\)\n*\n*     -   else return \\\\(2^k(1-((\\mathrm{E}+2^{-k})-r))\\\\)\n*\n* -   For IEEE 754 double, if \\\\(x > 7.09782712893383973096\\mbox{e+}02\\\\), then \\\\(\\operatorname{expm1}(x)\\\\) will overflow.\n*\n* -   The hexadecimal values listed in the source are the intended ones for the implementation constants. Decimal values may be used, provided that the compiler will convert from decimal to binary accurately enough to produce the intended hexadecimal values.\n*\n* -   According to an error analysis, the error is always less than \\\\(1\\\\) ulp (unit in the last place).\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = expm1( 0.2 );\n* // returns ~0.221\n*\n* @example\n* var v = expm1( -9.0 );\n* // returns ~-0.9999\n*\n* @example\n* var v = expm1( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = expm1( NaN );\n* // returns NaN\n*/\nfunction expm1( x ) {\n\tvar halfX;\n\tvar sign;\n\tvar hi;\n\tvar lo;\n\tvar hx;\n\tvar r1;\n\tvar y;\n\tvar z;\n\tvar c;\n\tvar t;\n\tvar e;\n\tvar k;\n\n\tif ( x === PINF || isnan( x ) ) {\n\t\treturn x;\n\t}\n\tif ( x === NINF ) {\n\t\treturn -1.0;\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn x; // handles +-0 (IEEE 754-2008)\n\t}\n\t// Set y = |x|:\n\tif ( x < 0.0 ) {\n\t\tsign = true;\n\t\ty = -x;\n\t} else {\n\t\tsign = false;\n\t\ty = x;\n\t}\n\t// Filter out huge and non-finite arguments...\n\tif ( y >= LN2x56 ) { // if |x| >= 56*ln(2)\n\t\tif ( sign ) { // if x <= -56*ln(2)\n\t\t\treturn -1.0;\n\t\t}\n\t\tif ( y >= OVERFLOW_THRESHOLD ) { // if |x| >= 709.78...\n\t\t\treturn PINF;\n\t\t}\n\t}\n\t// Extract the more significant bits from |x|:\n\thx = getHighWord( y )|0; // asm type annotation\n\n\t// Argument reduction...\n\tif ( y > HALF_LN2 ) { // if |x| > 0.5*ln(2)\n\t\tif ( y < LN2_HALFX3 ) { // if |x| < 1.5*ln(2)\n\t\t\tif ( sign ) {\n\t\t\t\thi = x + LN2_HI;\n\t\t\t\tlo = -LN2_LO;\n\t\t\t\tk = -1;\n\t\t\t} else {\n\t\t\t\thi = x - LN2_HI;\n\t\t\t\tlo = LN2_LO;\n\t\t\t\tk = 1;\n\t\t\t}\n\t\t} else {\n\t\t\tif ( sign ) {\n\t\t\t\tk = (LN2_INV*x) - 0.5;\n\t\t\t} else {\n\t\t\t\tk = (LN2_INV*x) + 0.5;\n\t\t\t}\n\t\t\tk |= 0; // use a bitwise OR to cast `k` to an integer (see also asm.js type annotations: http://asmjs.org/spec/latest/#annotations)\n\t\t\tt = k;\n\t\t\thi = x - (t*LN2_HI); // t*ln2_hi is exact here\n\t\t\tlo = t * LN2_LO;\n\t\t}\n\t\tx = hi - lo;\n\t\tc = (hi-x) - lo;\n\t}\n\t// if |x| < 2**-54 => high word: 0 01111001001 00000000000000000000 => 0x3c900000 = 1016070144  => exponent = 01111001001 = 969 = 1023-54\n\telse if ( hx < 1016070144 ) {\n\t\treturn x;\n\t}\n\telse {\n\t\tk = 0;\n\t}\n\t// x is now in primary range...\n\thalfX = 0.5 * x;\n\tz = x * halfX;\n\n\tr1 = 1.0 + ( z * polyval( z ) );\n\n\tt = 3.0 - (r1*halfX);\n\te = z * ( (r1-t) / (6.0 - (x*t)) );\n\tif ( k === 0 ) {\n\t\treturn x - ( (x*e) - z );\t// c is 0\n\t}\n\te = ( x * (e-c) ) - c;\n\te -= z;\n\tif ( k === -1 ) {\n\t\treturn ( 0.5*(x-e) )- 0.5;\n\t}\n\tif ( k === 1 ) {\n\t\tif ( x < -0.25 ) {\n\t\t\treturn -2.0 * ( e - (x+0.5) );\n\t\t}\n\t\treturn 1 + ( 2.0 * (x-e) );\n\t}\n\tif ( k <= -2 || k > 56 ) { // suffice to return exp(x)-1\n\t\ty = 1.0 - (e-x);\n\n\t\t// Add k to y's exponent:\n\t\thi = (getHighWord( y ) + (k<<20))|0; // asm type annotation\n\t\ty = setHighWord( y, hi );\n\n\t\treturn y - 1.0;\n\t}\n\tt = 1.0;\n\tif ( k < 20 ) {\n\t\t// 0x3ff00000 - (0x200000>>k) = 1072693248 - (0x200000>>k) => 0x200000 = 0 00000000010 00000000000000000000\n\t\thi = (1072693248 - (0x200000>>k))|0; // asm type annotation\n\t\tt = setHighWord( t, hi ); // t=1-2^-k\n\t\ty = t - (e-x);\n\t} else {\n\t\thi = ( (FLOAT64_EXPONENT_BIAS-k)<<20 )|0; // asm type annotation\n\t\tt = setHighWord( t, hi ); // t=2^-k\n\t\ty = x - (e+t);\n\t\ty += 1.0;\n\t}\n\t// Add k to y's exponent:\n\thi = (getHighWord( y ) + (k<<20))|0; // asm type annotation\n\treturn setHighWord( y, hi );\n}\n\n\n// EXPORTS //\n\nmodule.exports = expm1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* One half times the natural logarithm of 2.\n*\n* @module @stdlib/constants/math/float64-half-ln-two\n* @type {number}\n*\n* @example\n* var HALF_LN2 = require( '@stdlib/constants/math/float64-half-ln-two' );\n* // returns 3.46573590279972654709e-01\n*/\n\n// MAIN //\n\n/**\n* One half times the natural logarithm of 2.\n*\n* ```tex\n* \\frac{\\ln 2}{2}\n* ```\n*\n* @constant\n* @type {number}\n* @default 3.46573590279972654709e-01\n*/\nvar HALF_LN2 = 3.46573590279972654709e-01; // 0x3FD62E42 0xFEFA39EF\n\n\n// EXPORTS //\n\nmodule.exports = HALF_LN2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.03333333333333313;\n\t}\n\treturn -0.03333333333333313 + (x * (0.0015873015872548146 + (x * (-0.0000793650757867488 + (x * (0.000004008217827329362 + (x * -2.0109921818362437e-7))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FDLIBM]{@link http://www.netlib.org/fdlibm/s_log1p.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar FLOAT64_EXPONENT_BIAS = require( '@stdlib/constants/math/float64-exponent-bias' );\nvar polyval = require( './polyval_lp.js' );\n\n\n// VARIABLES //\n\n// High and low words of ln(2):\nvar LN2_HI = 6.93147180369123816490e-01; // 0x3fe62e42 0xfee00000\nvar LN2_LO = 1.90821492927058770002e-10; // 0x3dea39ef 0x35793c76\n\n// sqrt(2)-1:\nvar SQRT2M1 = 4.142135623730950488017e-01; // 0x3fda8279 0x99fcef34\n\n// sqrt(2)/2-1:\nvar SQRT2HALFM1 = -2.928932188134524755992e-01; // 0xbfd2bec3 0x33018866\n\n// 2**-29:\nvar SMALL = 1.862645149230957e-09; // 0x3e200000 0x00000000\n\n// 2**-54:\nvar TINY = 5.551115123125783e-17;\n\n// Max integer (unsafe) => 2**53:\nvar TWO53 = 9007199254740992;\n\n// 2/3:\nvar TWO_THIRDS = 6.666666666666666666e-01;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of \\\\(1+x\\\\).\n*\n* ## Method\n*\n* 1.  Argument Reduction: find \\\\(k\\\\) and \\\\(f\\\\) such that\n*\n*     ```tex\n*     1+x = 2^k (1+f)\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\frac{\\sqrt{2}}{2} < 1+f < \\sqrt{2}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     If \\\\(k=0\\\\), then \\\\(f=x\\\\) is exact. However, if \\\\(k \\neq 0\\\\), then \\\\(f\\\\) may not be representable exactly. In that case, a correction term is needed. Let\n*\n*     ```tex\n*     u = \\operatorname{round}(1+x)\n*     ```\n*\n*     and\n*\n*     ```tex\n*     c = (1+x) - u\n*     ```\n*\n*     then\n*\n*     ```tex\n*     \\ln (1+x) - \\ln u \\approx \\frac{c}{u}\n*     ```\n*\n*     We can thus proceed to compute \\\\(\\ln(u)\\\\), and add back the correction term \\\\(c/u\\\\).\n*\n*     <!-- </note> -->\n*\n*     <!-- <note> -->\n*\n*     When \\\\(x > 2^{53}\\\\), one can simply return \\\\(\\ln(x)\\\\).\n*\n*     <!-- </note> -->\n*\n* 2.  Approximation of \\\\(\\operatorname{log1p}(f)\\\\). Let\n*\n*     ```tex\n*     s = \\frac{f}{2+f}\n*     ```\n*\n*     based on\n*\n*     ```tex\n*     \\begin{align*}\n*     \\ln 1+f &= \\ln (1+s) - \\ln (1-s) \\\\\n*             &= 2s + \\frac{2}{3} s^3 + \\frac{2}{5} s^5 + ... \\\\\n*             &= 2s + sR \\\\\n*     \\end{align*}\n*     ```\n*\n*     We use a special Reme algorithm on \\\\(\\[0,0.1716\\]\\\\) to generate a polynomial of degree \\\\(14\\\\) to approximate \\\\(R\\\\). The maximum error of this polynomial approximation is bounded by \\\\(2^{-58.45}\\\\). In other words,\n*\n*     ```tex\n*     R(z) \\approx \\mathrm{Lp}_1 s^2 + \\mathrm{Lp}_2 s^4 + \\mathrm{Lp}_3 s^6 + \\mathrm{Lp}_4 s^8 + \\mathrm{Lp}_5 s^{10} + \\mathrm{Lp}_6 s^{12} + \\mathrm{Lp}_7 s^{14}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     | \\mathrm{Lp}_1 s^2 + \\ldots + \\mathrm{Lp}_7 s^14 - R(z) | \\leq 2^{-58.45}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     The values of \\\\(Lp1\\\\) to \\\\(Lp7\\\\) may be found in the source.\n*\n*     <!-- </note> -->\n*\n*     Note that\n*\n*     ```tex\n*     \\begin{align*}\n*     2s &= f - sf \\\\\n*        &= f - \\frac{f^2}{2} + s \\frac{f^2}{2} \\\\\n*     \\end{align*}\n*     ```\n*\n*     In order to guarantee error in \\\\(\\ln\\\\) below \\\\(1\\ \\mathrm{ulp}\\\\), we compute the log by\n*\n*     ```tex\n*     \\operatorname{log1p}(f) = f - \\biggl(\\frac{f^2}{2} - s\\biggl(\\frac{f^2}{2}+R\\biggr)\\biggr)\n*     ```\n*\n* 3.  Finally,\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{log1p}(x) &= k \\cdot \\mathrm{ln2} + \\operatorname{log1p}(f) \\\\\n*     &= k \\cdot \\mathrm{ln2}_{hi}+\\biggl(f-\\biggl(\\frac{f^2}{2}-\\biggl(s\\biggl(\\frac{f^2}{2}+R\\biggr)+k \\cdot \\mathrm{ln2}_{lo}\\biggr)\\biggr)\\biggr) \\\\\n*     \\end{align*}\n*     ```\n*\n*     Here \\\\(\\mathrm{ln2}\\\\) is split into two floating point numbers:\n*\n*     ```tex\n*     \\mathrm{ln2}_{hi} + \\mathrm{ln2}_{lo}\n*     ```\n*\n*     where \\\\(n \\cdot \\mathrm{ln2}_{hi}\\\\) is always exact for \\\\(|n| < 2000\\\\).\n*\n*\n* ## Special Cases\n*\n* -   \\\\(\\operatorname{log1p}(x) = \\mathrm{NaN}\\\\) with signal if \\\\(x < -1\\\\) (including \\\\(-\\infty\\\\))\n* -   \\\\(\\operatorname{log1p}(+\\infty) = +\\infty\\\\)\n* -   \\\\(\\operatorname{log1p}(-1) = -\\infty\\\\) with signal\n* -   \\\\(\\operatorname{log1p}(\\mathrm{NaN})= \\mathrm{NaN}\\\\) with no signal\n*\n*\n* ## Notes\n*\n* -   According to an error analysis, the error is always less than \\\\(1\\\\) ulp (unit in the last place).\n*\n* -   The hexadecimal values are the intended ones for the used constants. The decimal values may be used, provided that the compiler will convert from decimal to binary accurately enough to produce the hexadecimal values shown.\n*\n* -   Assuming \\\\(\\ln(x)\\\\) is accurate, the following algorithm can be used to evaluate \\\\(\\operatorname{log1p}(x)\\\\) to within a few ULP:\n*\n*     ```javascript\n*     var u = 1.0 + x;\n*     if ( u === 1.0 ) {\n*         return x;\n*     } else {\n*         return ln(u) * (x/(u-1.0));\n*     }\n*     ```\n*\n*     See HP-15C Advanced Functions Handbook, p.193.\n*\n*\n* @param {number} x - input value\n* @returns {number} the natural logarithm of `1+x`\n*\n* @example\n* var v = log1p( 4.0 );\n* // returns ~1.609\n*\n* @example\n* var v = log1p( -1.0 );\n* // returns -Infinity\n*\n* @example\n* var v = log1p( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = log1p( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = log1p( -2.0 );\n* // returns NaN\n*\n* @example\n* var v = log1p( NaN );\n* // returns NaN\n*/\nfunction log1p( x ) {\n\tvar hfsq;\n\tvar hu;\n\tvar y;\n\tvar f;\n\tvar c;\n\tvar s;\n\tvar z;\n\tvar R;\n\tvar u;\n\tvar k;\n\n\tif ( x < -1.0 || isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x === -1.0 ) {\n\t\treturn NINF;\n\t}\n\tif ( x === PINF ) {\n\t\treturn x;\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn x; // handle +-0 (IEEE 754-2008 spec)\n\t}\n\t// Set y = |x|:\n\tif ( x < 0.0 ) {\n\t\ty = -x;\n\t} else {\n\t\ty = x;\n\t}\n\t// Argument reduction...\n\tk = 1;\n\n\t// Check if argument reduction is needed and if we can just return a small value approximation requiring less computation but with equivalent accuracy...\n\tif ( y < SQRT2M1 ) { // if |x| < sqrt(2)-1 => ~0.41422\n\t\tif ( y < SMALL ) { // if |x| < 2**-29\n\t\t\tif ( y < TINY ) { // if |x| < 2**-54\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\t// Use a simple two-term Taylor series...\n\t\t\treturn x - ( x*x*0.5 );\n\t\t}\n\t\t// Check if `f=x` can be represented exactly (no need for correction terms), allowing us to bypass argument reduction...\n\t\tif ( x > SQRT2HALFM1 ) { // if x > sqrt(2)/2-1 => ~-0.2929\n\t\t\t// -0.2929 < x < 0.41422\n\t\t\tk = 0;\n\t\t\tf = x; // exact\n\t\t\thu = 1;\n\t\t}\n\t}\n\t// Address case where `f` cannot be represented exactly...\n\tif ( k !== 0 ) {\n\t\tif ( y < TWO53 ) {\n\t\t\tu = 1.0 + x;\n\t\t\thu = getHighWord( u );\n\n\t\t\t// Bit shift to isolate the exponent and then subtract the bias:\n\t\t\tk = (hu>>20) - FLOAT64_EXPONENT_BIAS;\n\n\t\t\t// Correction term...\n\t\t\tif ( k > 0 ) { // positive unbiased exponent\n\t\t\t\tc = 1.0 - (u-x);\n\t\t\t} else { // nonpositive unbiased exponent\n\t\t\t\tc = x - (u-1.0);\n\t\t\t}\n\t\t\tc /= u;\n\t\t} else {\n\t\t\tu = x;\n\t\t\thu = getHighWord( u );\n\n\t\t\t// Bit shift to isolate the exponent and then subtract the bias:\n\t\t\tk = (hu>>20) - FLOAT64_EXPONENT_BIAS;\n\n\t\t\t// Correction term is zero:\n\t\t\tc = 0;\n\t\t}\n\t\t// Apply a bit mask (0 00000000000 11111111111111111111) to remove the exponent:\n\t\thu &= 0x000fffff; // max value => 1048575\n\n\t\t// Check if u significand is less than sqrt(2) significand => 0x6a09e => 01101010000010011110\n\t\tif ( hu < 434334 ) {\n\t\t\t// Normalize u by setting the exponent to 1023 (bias) => 0x3ff00000 => 0 01111111111 00000000000000000000\n\t\t\tu = setHighWord( u, hu|0x3ff00000 );\n\t\t} else {\n\t\t\tk += 1;\n\n\t\t\t// Normalize u/2 by setting the exponent to 1022 (bias-1 => 2**-1 = 1/2) => 0x3fe00000 => 0 01111111110 00000000000000000000\n\t\t\tu = setHighWord( u, hu|0x3fe00000 );\n\n\t\t\t// Subtract hu significand from next largest hu => 0 00000000001 00000000000000000000 => 0x00100000 => 1048576\n\t\t\thu = (1048576-hu)>>2;\n\t\t}\n\t\tf = u - 1.0;\n\t}\n\t// Approximation of log1p(f)...\n\thfsq = 0.5 * f * f;\n\tif ( hu === 0 ) { // if |f| < 2**-20\n\t\tif ( f === 0.0 ) {\n\t\t\tc += k * LN2_LO;\n\t\t\treturn ( k * LN2_HI ) + c;\n\t\t}\n\t\tR = hfsq * (1.0 - ( TWO_THIRDS*f ) ); // avoid division\n\t\treturn ( k*LN2_HI ) - ( (R - ( (k*LN2_LO) + c)) - f );\n\t}\n\ts = f / (2.0 + f);\n\tz = s * s;\n\n\tR = z * polyval( z );\n\n\tif ( k === 0 ) {\n\t\treturn f - ( hfsq - ( s*(hfsq+R) ) );\n\t}\n\treturn ( k*LN2_HI ) - ( (hfsq - ( (s*(hfsq+R)) + ((k*LN2_LO) + c))) - f );\n}\n\n\n// EXPORTS //\n\nmodule.exports = log1p;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.6666666666666735;\n\t}\n\treturn 0.6666666666666735 + (x * (0.3999999999940942 + (x * (0.2857142874366239 + (x * (0.22222198432149784 + (x * (0.1818357216161805 + (x * (0.15313837699209373 + (x * 0.14798198605116586))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1995, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar PIO4 = require( '@stdlib/constants/math/float64-fourth-pi' );\nvar ratevalPQ = require( './rational_pq.js' );\nvar ratevalRS = require( './rational_rs.js' );\n\n\n// VARIABLES //\n\nvar MOREBITS = 6.123233995736765886130e-17; // pi/2 = PIO2 + MOREBITS\n\n\n// MAIN //\n\n/**\n* Computes the arcsine of a number.\n*\n* ## Method\n*\n* -   A rational function of the form\n*\n*     ```tex\n*     x + x^3 \\frac{P(x^2)}{Q(x^2)}\n*     ```\n*\n*     is used for \\\\(\\|x\\|\\\\) in the interval \\\\(\\[0, 0.5\\]\\\\). If \\\\(\\|x\\| > 0.5\\\\), it is transformed by the identity\n*\n*     ```tex\n*     \\operatorname{asin}(x) = \\frac{\\pi}{2} - 2 \\operatorname{asin}( \\sqrt{ (1-x)/2 } )\n*     ```\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | arithmetic | domain | # trials | peak    | rms     |\n*     |:-----------|:-------|:---------|:--------|:--------|\n*     | DEC        | -1, 1  | 40000    | 2.6e-17 | 7.1e-18 |\n*     | IEEE       | -1, 1  | 10^6     | 1.9e-16 | 5.4e-17 |\n*\n* @param {number} x - input value\n* @returns {number} arcsine (in radians)\n*\n* @example\n* var v = asin( 0.0 );\n* // returns ~0.0\n*\n* @example\n* var v = asin( 3.141592653589793/4.0 );\n* // returns ~0.903\n*\n* @example\n* var v = asin( -3.141592653589793/6.0 );\n* // returns ~-0.551\n*\n* @example\n* var v = asin( NaN );\n* // returns NaN\n*/\nfunction asin( x ) {\n\tvar sgn;\n\tvar zz;\n\tvar a;\n\tvar p;\n\tvar z;\n\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x > 0.0 ) {\n\t\ta = x;\n\t} else {\n\t\tsgn = true;\n\t\ta = -x;\n\t}\n\tif ( a > 1.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( a > 0.625 ) {\n\t\t// arcsin(1-x) = pi/2 - sqrt(2x)(1+R(x))\n\t\tzz = 1.0 - a;\n\t\tp = zz * ratevalRS( zz );\n\t\tzz = sqrt( zz + zz );\n\t\tz = PIO4 - zz;\n\t\tzz = ( zz*p ) - MOREBITS;\n\t\tz -= zz;\n\t\tz += PIO4;\n\t} else {\n\t\tif ( a < 1.0e-8 ) {\n\t\t\treturn x;\n\t\t}\n\t\tzz = a * a;\n\t\tz = zz * ratevalPQ( zz );\n\t\tz = ( a*z ) + a;\n\t}\n\treturn ( sgn ) ? -z : z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = asin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the principal square root.\n*\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} principal square root\n*\n* @example\n* var v = sqrt( 4.0 );\n* // returns 2.0\n*\n* v = sqrt( 9.0 );\n* // returns 3.0\n*\n* v = sqrt( 0.0 );\n* // returns 0.0\n*\n* v = sqrt( -4.0 );\n* // returns NaN\n*\n* v = sqrt( NaN );\n* // returns NaN\n*/\nvar sqrt = Math.sqrt; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = sqrt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666713;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -8.198089802484825 + (x * (19.562619833175948 + (x * (-16.262479672107002 + (x * (5.444622390564711 + (x * (-0.6019598008014124 + (x * 0.004253011369004428))))))))); // eslint-disable-line max-len\n\t\ts2 = -49.18853881490881 + (x * (139.51056146574857 + (x * (-147.1791292232726 + (x * (70.49610280856842 + (x * (-14.740913729888538 + (x * 1.0))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.004253011369004428 + (x * (-0.6019598008014124 + (x * (5.444622390564711 + (x * (-16.262479672107002 + (x * (19.562619833175948 + (x * -8.198089802484825))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (-14.740913729888538 + (x * (70.49610280856842 + (x * (-147.1791292232726 + (x * (139.51056146574857 + (x * -49.18853881490881))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.08333333333333809;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 28.536655482610616 + (x * (-25.56901049652825 + (x * (6.968710824104713 + (x * (-0.5634242780008963 + (x * 0.002967721961301243))))))); // eslint-disable-line max-len\n\t\ts2 = 342.43986579130785 + (x * (-383.8770957603691 + (x * (147.0656354026815 + (x * (-21.947795316429207 + (x * 1.0))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.002967721961301243 + (x * (-0.5634242780008963 + (x * (6.968710824104713 + (x * (-25.56901049652825 + (x * 28.536655482610616))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (-21.947795316429207 + (x * (147.0656354026815 + (x * (-383.8770957603691 + (x * 342.43986579130785))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar E = require( '@stdlib/constants/math/float64-e' );\nvar EPSILON = require( '@stdlib/constants/math/float64-eps' );\nvar lanczosSumExpGScaled = require( './lanczos_sum_expg_scaled.js' ); // Lanczos approximation scaled by exp(G)\n\n\n// VARIABLES //\n\nvar G = 10.90051099999999983936049829935654997826;\n\n\n// MAIN //\n\n/**\n* Evaluate the beta function.\n*\n* @param {NonNegativeNumber} a - input value\n* @param {NonNegativeNumber} b - input value\n* @returns {number} evaluated beta function\n*\n* @example\n* var v = beta( 0.0, 0.5 );\n* // returns Infinity\n*\n* @example\n* var v = beta( 1.0, 1.0 );\n* // returns 1.0\n*\n* @example\n* var v = beta( -1.0, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = beta( 5.0, 0.2 );\n* // returns ~3.382\n*\n* @example\n* var v = beta( 4.0, 1.0 );\n* // returns 0.25\n*\n* @example\n* var v = beta( NaN, 2.0 );\n* // returns NaN\n*/\nfunction beta( a, b ) {\n\tvar ambh;\n\tvar agh;\n\tvar bgh;\n\tvar cgh;\n\tvar res;\n\tvar tmp;\n\tvar c;\n\n\tif ( isnan( a ) || isnan( b ) ) {\n\t\treturn NaN;\n\t}\n\tif ( a < 0.0 || b < 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( b === 1.0 ) {\n\t\treturn 1.0 / a;\n\t}\n\tif ( a === 1.0 ) {\n\t\treturn 1.0 / b;\n\t}\n\tc = a + b;\n\tif ( c < EPSILON ) {\n\t\tres = c / a;\n\t\tres /= b;\n\t\treturn res;\n\t}\n\n\t// Special cases:\n\tif ( c === a && b < EPSILON ) {\n\t\treturn 1.0 / b;\n\t}\n\tif ( c === b && a < EPSILON ) {\n\t\treturn 1.0 / a;\n\t}\n\n\tif ( a < b ) {\n\t\t// Swap `a` and `b`:\n\t\ttmp = b;\n\t\tb = a;\n\t\ta = tmp;\n\t}\n\n\t// Lanczos calculation:\n\tagh = a + G - 0.5;\n\tbgh = b + G - 0.5;\n\tcgh = c + G - 0.5;\n\tres = lanczosSumExpGScaled( a ) * ( lanczosSumExpGScaled( b )/lanczosSumExpGScaled( c ) ); // eslint-disable-line max-len\n\tambh = a - 0.5 - b;\n\tif ( ( abs( b*ambh ) < ( cgh*100.0 ) ) && a > 100.0 ) {\n\t\t// Special case where the base of the power term is close to 1; compute `(1+x)^y` instead:\n\t\tres *= exp( ambh * log1p( -b/cgh ) );\n\t} else {\n\t\tres *= pow( agh/cgh, ambh );\n\t}\n\tif ( cgh > 1.0e10 ) {\n\t\t// This avoids possible overflow, but appears to be marginally less accurate:\n\t\tres *= pow( (agh/cgh)*(bgh/cgh), b );\n\t} else {\n\t\tres *= pow( (agh*bgh)/(cgh*cgh), b );\n\t}\n\tres *= sqrt( E/bgh);\n\treturn res;\n}\n\n\n// EXPORTS //\n\nmodule.exports = beta;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isOdd = require( '@stdlib/math/base/assert/is-odd' );\nvar isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar toWords = require( '@stdlib/number/float64/base/to-words' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar uint32ToInt32 = require( '@stdlib/number/uint32/base/to-int32' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar xIsZero = require( './x_is_zero.js' );\nvar yIsHuge = require( './y_is_huge.js' );\nvar yIsInfinite = require( './y_is_infinite.js' );\nvar log2ax = require( './log2ax.js' );\nvar logx = require( './logx.js' );\nvar pow2 = require( './pow2.js' );\n\n\n// VARIABLES //\n\n// 0x7fffffff = 2147483647 => 0 11111111111 11111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\n// 0x41e00000 = 1105199104 => 0 10000011110 00000000000000000000 => biased exponent: 1054 = 31+1023 => 2^31\nvar HIGH_BIASED_EXP_31 = 0x41e00000|0; // asm type annotation\n\n// 0x43f00000 = 1139802112 => 0 10000111111 00000000000000000000 => biased exponent: 1087 = 64+1023 => 2^64\nvar HIGH_BIASED_EXP_64 = 0x43f00000|0; // asm type annotation\n\n// 0x40900000 = 1083179008 => 0 10000001001 00000000000000000000 => biased exponent: 1033 = 10+1023 => 2^10 = 1024\nvar HIGH_BIASED_EXP_10 = 0x40900000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// 0x4090cc00 = 1083231232 => 0 10000001001 00001100110000000000\nvar HIGH_1075 = 0x4090cc00|0; // asm type annotation\n\n// 0xc090cc00 = 3230714880 => 1 10000001001 00001100110000000000\nvar HIGH_NEG_1075 = 0xc090cc00>>>0; // asm type annotation\n\nvar HIGH_NUM_NONSIGN_BITS = 31|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n// -(1024-log2(ovfl+.5ulp))\nvar OVT = 8.0085662595372944372e-17;\n\n// High/low words workspace:\nvar WORDS = [ 0|0, 0|0 ]; // WARNING: not thread safe\n\n// Log workspace:\nvar LOG_WORKSPACE = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function.\n*\n* ## Method\n*\n* 1.  Let \\\\(x = 2^n (1+f)\\\\).\n*\n* 2.  Compute \\\\(\\operatorname{log2}(x)\\\\) as\n*\n*     ```tex\n*     \\operatorname{log2}(x) = w_1 + w_2\n*     ```\n*\n*     where \\\\(w_1\\\\) has \\\\(53 - 24 = 29\\\\) bit trailing zeros.\n*\n* 3.  Compute\n*\n*     ```tex\n*     y \\cdot \\operatorname{log2}(x) = n + y^\\prime\n*     ```\n*\n*     by simulating multi-precision arithmetic, where \\\\(|y^\\prime| \\leq 0.5\\\\).\n*\n* 4.  Return\n*\n*     ```tex\n*     x^y = 2^n e^{y^\\prime \\cdot \\mathrm{log2}}\n*     ```\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* x^{\\mathrm{NaN}} &= \\mathrm{NaN} & \\\\\n* (\\mathrm{NaN})^y &= \\mathrm{NaN} & \\\\\n* 1^y &= 1 & \\\\\n* x^0 &= 1 & \\\\\n* x^1 &= x & \\\\\n* (\\pm 0)^\\infty &= +0 & \\\\\n* (\\pm 0)^{-\\infty} &= +\\infty & \\\\\n* (+0)^y &= +0 & \\mathrm{if}\\ y > 0 \\\\\n* (+0)^y &= +\\infty & \\mathrm{if}\\ y < 0 \\\\\n* (-0)^y &= -\\infty & \\mathrm{if}\\ y\\ \\mathrm{is\\ an\\ odd\\ integer\\ and}\\ y < 0 \\\\\n* (-0)^y &= +\\infty & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ an\\ odd\\ integer\\ and}\\ y < 0 \\\\\n* (-0)^y &= -0 & \\mathrm{if}\\ y\\ \\mathrm{is\\ an\\ odd\\ integer\\ and}\\ y > 0 \\\\\n* (-0)^y &= +0 & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ an\\ odd\\ integer\\ and}\\ y > 0 \\\\\n* (-1)^{\\pm\\infty} &= \\mathrm{NaN} & \\\\\n* x^{\\infty} &= +\\infty & |x| > 1 \\\\\n* x^{\\infty} &= +0 & |x| < 1 \\\\\n* x^{-\\infty} &= +0 & |x| > 1 \\\\\n* x^{-\\infty} &= +\\infty & |x| < 1 \\\\\n* (-\\infty)^y &= (-0)^y & \\\\\n* \\infty^y &= +0 & y < 0 \\\\\n* \\infty^y &= +\\infty & y > 0 \\\\\n* x^y &= \\mathrm{NaN} & \\mathrm{if}\\ y\\ \\mathrm{is\\ not\\ a\\ finite\\ integer\\ and}\\ x < 0\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* -   \\\\(\\operatorname{pow}(x,y)\\\\) returns \\\\(x^y\\\\) nearly rounded. In particular, \\\\(\\operatorname{pow}(<\\mathrm{integer}>,<\\mathrm{integer}>)\\\\) **always** returns the correct integer, provided the value is representable.\n* -   The hexadecimal values shown in the source code are the intended values for used constants. Decimal values may be used, provided the compiler will accurately convert decimal to binary in order to produce the hexadecimal values.\n*\n*\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( 2.0, 3.0 );\n* // returns 8.0\n*\n* @example\n* var v = pow( 4.0, 0.5 );\n* // returns 2.0\n*\n* @example\n* var v = pow( 100.0, 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = pow( 3.141592653589793, 5.0 );\n* // returns ~306.0197\n*\n* @example\n* var v = pow( 3.141592653589793, -0.2 );\n* // returns ~0.7954\n*\n* @example\n* var v = pow( NaN, 3.0 );\n* // returns NaN\n*\n* @example\n* var v = pow( 5.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = pow( NaN, NaN );\n* // returns NaN\n*/\nfunction pow( x, y ) {\n\tvar ahx; // absolute value high word `x`\n\tvar ahy; // absolute value high word `y`\n\tvar ax;  // absolute value `x`\n\tvar hx;  // high word `x`\n\tvar lx;  // low word `x`\n\tvar hy;  // high word `y`\n\tvar ly;  // low word `y`\n\tvar sx;  // sign `x`\n\tvar sy;  // sign `y`\n\tvar y1;\n\tvar hp;\n\tvar lp;\n\tvar t;\n\tvar z;   // y prime\n\tvar j;\n\tvar i;\n\tif ( isnan( x ) || isnan( y ) ) {\n\t\treturn NaN;\n\t}\n\t// Split `y` into high and low words:\n\ttoWords( WORDS, y );\n\thy = WORDS[ 0 ];\n\tly = WORDS[ 1 ];\n\n\t// Special cases `y`...\n\tif ( ly === 0 ) {\n\t\tif ( y === 0.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif ( y === 1.0 ) {\n\t\t\treturn x;\n\t\t}\n\t\tif ( y === -1.0 ) {\n\t\t\treturn 1.0 / x;\n\t\t}\n\t\tif ( y === 0.5 ) {\n\t\t\treturn sqrt( x );\n\t\t}\n\t\tif ( y === -0.5 ) {\n\t\t\treturn 1.0 / sqrt( x );\n\t\t}\n\t\tif ( y === 2.0 ) {\n\t\t\treturn x * x;\n\t\t}\n\t\tif ( y === 3.0 ) {\n\t\t\treturn x * x * x;\n\t\t}\n\t\tif ( y === 4.0 ) {\n\t\t\tx *= x;\n\t\t\treturn x * x;\n\t\t}\n\t\tif ( isInfinite( y ) ) {\n\t\t\treturn yIsInfinite( x, y );\n\t\t}\n\t}\n\t// Split `x` into high and low words:\n\ttoWords( WORDS, x );\n\thx = WORDS[ 0 ];\n\tlx = WORDS[ 1 ];\n\n\t// Special cases `x`...\n\tif ( lx === 0 ) {\n\t\tif ( hx === 0 ) {\n\t\t\treturn xIsZero( x, y );\n\t\t}\n\t\tif ( x === 1.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif (\n\t\t\tx === -1.0 &&\n\t\t\tisOdd( y )\n\t\t) {\n\t\t\treturn -1.0;\n\t\t}\n\t\tif ( isInfinite( x ) ) {\n\t\t\tif ( x === NINF ) {\n\t\t\t\t// `pow( 1/x, -y )`\n\t\t\t\treturn pow( -0.0, -y );\n\t\t\t}\n\t\t\tif ( y < 0.0 ) {\n\t\t\t\treturn 0.0;\n\t\t\t}\n\t\t\treturn PINF;\n\t\t}\n\t}\n\tif (\n\t\tx < 0.0 &&\n\t\tisInteger( y ) === false\n\t) {\n\t\t// Signal NaN...\n\t\treturn (x-x)/(x-x);\n\t}\n\tax = abs( x );\n\n\t// Remove the sign bits (i.e., get absolute values):\n\tahx = (hx & ABS_MASK)|0; // asm type annotation\n\tahy = (hy & ABS_MASK)|0; // asm type annotation\n\n\t// Extract the sign bits:\n\tsx = (hx >>> HIGH_NUM_NONSIGN_BITS)|0; // asm type annotation\n\tsy = (hy >>> HIGH_NUM_NONSIGN_BITS)|0; // asm type annotation\n\n\t// Determine the sign of the result...\n\tif ( sx && isOdd( y ) ) {\n\t\tsx = -1.0;\n\t} else {\n\t\tsx = 1.0;\n\t}\n\t// Case 1: `|y|` is huge...\n\n\t// |y| > 2^31\n\tif ( ahy > HIGH_BIASED_EXP_31 ) {\n\t\t// `|y| > 2^64`, then must over- or underflow...\n\t\tif ( ahy > HIGH_BIASED_EXP_64 ) {\n\t\t\treturn yIsHuge( x, y );\n\t\t}\n\t\t// Over- or underflow if `x` is not close to unity...\n\n\t\tif ( ahx < HIGH_MAX_NEAR_UNITY ) {\n\t\t\t// y < 0\n\t\t\tif ( sy === 1 ) {\n\t\t\t\t// Signal overflow...\n\t\t\t\treturn sx * HUGE * HUGE;\n\t\t\t}\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\tif ( ahx > HIGH_BIASED_EXP_0 ) {\n\t\t\t// y > 0\n\t\t\tif ( sy === 0 ) {\n\t\t\t\t// Signal overflow...\n\t\t\t\treturn sx * HUGE * HUGE;\n\t\t\t}\n\t\t\t// Signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\t// At this point, `|1-x|` is tiny (`<= 2^-20`). Suffice to compute `log(x)` by `x - x^2/2 + x^3/3 - x^4/4`.\n\t\tt = logx( LOG_WORKSPACE, ax );\n\t}\n\t// Case 2: `|y|` is not huge...\n\telse {\n\t\tt = log2ax( LOG_WORKSPACE, ax, ahx );\n\t}\n\t// Split `y` into `y1 + y2` and compute `(y1+y2) * (t1+t2)`...\n\ty1 = setLowWord( y, 0 );\n\tlp = ( (y-y1)*t[0] ) + ( y*t[1] );\n\thp = y1 * t[0];\n\tz = lp + hp;\n\n\t// Note: *can* be more performant to use `getHighWord` and `getLowWord` directly, but using `toWords` looks cleaner.\n\ttoWords( WORDS, z );\n\tj = uint32ToInt32( WORDS[0] );\n\ti = uint32ToInt32( WORDS[1] );\n\n\t// z >= 1024\n\tif ( j >= HIGH_BIASED_EXP_10 ) {\n\t\t// z > 1024\n\t\tif ( ((j-HIGH_BIASED_EXP_10)|i) !== 0 ) {\n\t\t\t// Signal overflow...\n\t\t\treturn sx * HUGE * HUGE;\n\t\t}\n\t\tif ( (lp+OVT) > (z-hp) ) {\n\t\t\t// Signal overflow...\n\t\t\treturn sx * HUGE * HUGE;\n\t\t}\n\t}\n\t// z <= -1075\n\telse if ( (j&ABS_MASK) >= HIGH_1075 ) {\n\t\t// z < -1075\n\t\tif ( ((j-HIGH_NEG_1075)|i) !== 0 ) {\n\t\t\t// signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t\tif ( lp <= (z-hp) ) {\n\t\t\t// signal underflow...\n\t\t\treturn sx * TINY * TINY;\n\t\t}\n\t}\n\t// Compute `2^(hp+lp)`...\n\tz = pow2( j, hp, lp );\n\n\treturn sx * z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEven = require( '@stdlib/math/base/assert/is-even' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an odd number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an odd number\n*\n* @example\n* var bool = isOdd( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isOdd( -2.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( NaN );\n* // returns false\n*/\nfunction isOdd( x ) {\n\t// Check sign to prevent overflow...\n\tif ( x > 0.0 ) {\n\t\treturn isEven( x-1.0 );\n\t}\n\treturn isEven( x+1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite numeric value is an even number.\n*\n* @module @stdlib/math/base/assert/is-even\n*\n* @example\n* var isEven = require( '@stdlib/math/base/assert/is-even' );\n*\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* bool = isEven( -2.0 );\n* // returns true\n*\n* bool = isEven( 0.0 );\n* // returns true\n*\n* bool = isEven( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEven = require( './is_even.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an even number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an even number\n*\n* @example\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( -2.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( NaN );\n* // returns false\n*/\nfunction isEven( x ) {\n\treturn isInteger( x/2.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar LOW = require( './low.js' );\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Sets the less significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the lower order bits? If little endian, the first; if big endian, the second.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - double\n* @param {uinteger32} low - unsigned 32-bit integer to replace the lower order word of `x`\n* @returns {number} double having the same higher order word as `x`\n*\n* @example\n* var low = 5 >>> 0; // => 00000000000000000000000000000101\n*\n* var x = 3.14e201; // => 0 11010011100 01001000001011000011 10010011110010110101100010000010\n*\n* var y = setLowWord( x, low ); // => 0 11010011100 01001000001011000011 00000000000000000000000000000101\n* // returns 3.139998651394392e+201\n*\n* @example\n* var PINF = require( '@stdlib/constants/math/float64-pinf' );\n* var NINF = require( '@stdlib/constants/math/float64-ninf' );\n*\n* var low = 12345678;\n*\n* var y = setLowWord( PINF, low );\n* // returns NaN\n*\n* y = setLowWord( NINF, low );\n* // returns NaN\n*\n* y = setLowWord( NaN, low );\n* // returns NaN\n*/\nfunction setLowWord( x, low ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tUINT32_VIEW[ LOW ] = ( low >>> 0 ); // identity bit shift to ensure integer\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = setLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isLittleEndian = require( '@stdlib/assert/is-little-endian' );\n\n\n// MAIN //\n\nvar LOW;\nif ( isLittleEndian === true ) {\n\tLOW = 0; // first index\n} else {\n\tLOW = 1; // second index\n}\n\n\n// EXPORTS //\n\nmodule.exports = LOW;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Converts an unsigned 32-bit integer to a signed 32-bit integer.\n*\n* @param {uinteger32} x - unsigned 32-bit integer\n* @returns {integer32} signed 32-bit integer\n*\n* @example\n* var float64ToUint32 = require( '@stdlib/number/float64/base/to-uint32' );\n* var y = uint32ToInt32( float64ToUint32( 4294967295 ) );\n* // returns -1\n*\n* @example\n* var float64ToUint32 = require( '@stdlib/number/float64/base/to-uint32' );\n* var y = uint32ToInt32( float64ToUint32( 3 ) );\n* // returns 3\n*/\nfunction uint32ToInt32( x ) {\n\t// NOTE: we could also use typed-arrays to achieve the same end.\n\treturn x|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = uint32ToInt32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isOdd = require( '@stdlib/math/base/assert/is-odd' );\nvar copysign = require( '@stdlib/math/base/special/copysign' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|x| = 0\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( 0.0, 2 );\n* // returns 0.0\n*\n* @example\n* var v = pow( -0.0, -9 );\n* // returns -Infinity\n*\n* @example\n* var v = pow( 0.0, -9 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -0.0, 9 );\n* // returns 0.0\n*\n* @example\n* var v = pow( 0.0, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var v = pow( 0.0, Infinity );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tif ( y === NINF ) {\n\t\treturn PINF;\n\t}\n\tif ( y === PINF ) {\n\t\treturn 0.0;\n\t}\n\tif ( y > 0.0 ) {\n\t\tif ( isOdd( y ) ) {\n\t\t\treturn x; // handles +-0\n\t\t}\n\t\treturn 0.0;\n\t}\n\t// y < 0.0\n\tif ( isOdd( y ) ) {\n\t\treturn copysign( PINF, x ); // handles +-0\n\t}\n\treturn PINF;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\n\n\n// VARIABLES //\n\n// 0x7fffffff = 2147483647 => 0 11111111111 11111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|y| > 2^64\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} overflow or underflow result\n*\n* @example\n* var v = pow( 9.0, 3.6893488147419103e19 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -3.14, -3.6893488147419103e19 );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tvar ahx;\n\tvar hx;\n\n\thx = getHighWord( x );\n\tahx = (hx & ABS_MASK);\n\n\tif ( ahx <= HIGH_MAX_NEAR_UNITY ) {\n\t\tif ( y < 0 ) {\n\t\t\t// signal overflow...\n\t\t\treturn HUGE * HUGE;\n\t\t}\n\t\t// signal underflow...\n\t\treturn TINY * TINY;\n\t}\n\t// `x` has a biased exponent greater than or equal to `0`...\n\n\tif ( y > 0 ) {\n\t\t// signal overflow...\n\t\treturn HUGE * HUGE;\n\t}\n\t// signal underflow...\n\treturn TINY * TINY;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\( y = \\pm \\infty\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} function value\n*\n* @example\n* var v = pow( -1.0, Infinity );\n* // returns NaN\n*\n* @example\n* var v = pow( -1.0, -Infinity  );\n* // returns NaN\n*\n* @example\n* var v = pow( 1.0, Infinity );\n* // returns 1.0\n*\n* @example\n* var v = pow( 1.0, -Infinity  );\n* // returns 1.0\n*\n* @example\n* var v = pow( 0.5, Infinity );\n* // returns 0.0\n*\n* @example\n* var v = pow( 0.5, -Infinity  );\n* // returns Infinity\n*\n* @example\n* var v = pow( 1.5, -Infinity  );\n* // returns 0.0\n*\n* @example\n* var v = pow( 1.5, Infinity );\n* // returns Infinity\n*/\nfunction pow( x, y ) {\n\tif ( x === -1.0 ) {\n\t\t// Julia (0.4.2) and Python (2.7.9) return `1.0` (WTF???). JavaScript (`Math.pow`), R, and libm return `NaN`. We choose `NaN`, as the value is indeterminate; i.e., we cannot determine whether `y` is odd, even, or somewhere in between.\n\t\treturn (x-x)/(x-x); // signal NaN\n\t}\n\tif ( x === 1.0 ) {\n\t\treturn 1.0;\n\t}\n\t// (|x| > 1 && y === NINF) || (|x| < 1 && y === PINF)\n\tif ( (abs(x) < 1.0) === (y === PINF) ) {\n\t\treturn 0.0;\n\t}\n\t// (|x| > 1 && y === PINF) || (|x| < 1 && y === NINF)\n\treturn PINF;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar BIAS = require( '@stdlib/constants/math/float64-exponent-bias' );\nvar polyvalL = require( './polyval_l.js' );\n\n\n// VARIABLES //\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3ff00000 = 1072693248 => 0 01111111111 00000000000000000000 => biased exponent: 1023 = 0+1023 => 2^0 = 1\nvar HIGH_BIASED_EXP_0 = 0x3ff00000|0; // asm type annotation\n\n// 0x20000000 = 536870912 => 0 01000000000 00000000000000000000 => biased exponent: 512 = -511+1023\nvar HIGH_BIASED_EXP_NEG_512 = 0x20000000|0; // asm type annotation\n\n// 0x00080000 = 524288 => 0 00000000000 10000000000000000000\nvar HIGH_SIGNIFICAND_HALF = 0x00080000|0; // asm type annotation\n\n// TODO: consider making an external constant\nvar HIGH_NUM_SIGNIFICAND_BITS = 20|0; // asm type annotation\n\nvar TWO53 = 9007199254740992.0;\t// 0x43400000, 0x00000000\n\n// 2/(3*LN2)\nvar CP = 9.61796693925975554329e-01; // 0x3FEEC709, 0xDC3A03FD\n\n// (float)CP\nvar CP_HI = 9.61796700954437255859e-01; // 0x3FEEC709, 0xE0000000\n\n// Low: CP_HI\nvar CP_LO = -7.02846165095275826516e-09; // 0xBE3E2FE0, 0x145B01F5\n\nvar BP = [\n\t1.0,\n\t1.5\n];\nvar DP_HI = [\n\t0.0,\n\t5.84962487220764160156e-01 // 0x3FE2B803, 0x40000000\n];\nvar DP_LO = [\n\t0.0,\n\t1.35003920212974897128e-08 // 0x3E4CFDEB, 0x43CFD006\n];\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log2}(ax)\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @param {number} ahx - high word of `ax`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = log2ax( [ 0.0, 0.0 ], 9.0, 1075970048 ); // => [ t1, t2 ]\n* // returns [ 3.169923782348633, 0.0000012190936795504075 ]\n*/\nfunction log2ax( out, ax, ahx ) {\n\tvar tmp;\n\tvar ss; // `hs + ls`\n\tvar s2; // `ss` squared\n\tvar hs;\n\tvar ls;\n\tvar ht;\n\tvar lt;\n\tvar bp; // `BP` constant\n\tvar dp; // `DP` constant\n\tvar hp;\n\tvar lp;\n\tvar hz;\n\tvar lz;\n\tvar t1;\n\tvar t2;\n\tvar t;\n\tvar r;\n\tvar u;\n\tvar v;\n\tvar n;\n\tvar j;\n\tvar k;\n\n\tn = 0|0; // asm type annotation\n\n\t// Check if `x` is subnormal...\n\tif ( ahx < HIGH_MIN_NORMAL_EXP ) {\n\t\tax *= TWO53;\n\t\tn -= 53|0; // asm type annotation\n\t\tahx = getHighWord( ax );\n\t}\n\t// Extract the unbiased exponent of `x`:\n\tn += ((ahx >> HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // asm type annotation\n\n\t// Isolate the significand bits of `x`:\n\tj = (ahx & HIGH_SIGNIFICAND_MASK)|0; // asm type annotation\n\n\t// Normalize `ahx` by setting the (biased) exponent to `1023`:\n\tahx = (j | HIGH_BIASED_EXP_0)|0; // asm type annotation\n\n\t// Determine the interval of `|x|` by comparing significand bits...\n\n\t// |x| < sqrt(3/2)\n\tif ( j <= 0x3988E ) { // 0 00000000000 00111001100010001110\n\t\tk = 0;\n\t}\n\t// |x| < sqrt(3)\n\telse if ( j < 0xBB67A ) { // 0 00000000000 10111011011001111010\n\t\tk = 1;\n\t}\n\t// |x| >= sqrt(3)\n\telse {\n\t\tk = 0;\n\t\tn += 1|0; // asm type annotation\n\t\tahx -= HIGH_MIN_NORMAL_EXP;\n\t}\n\t// Load the normalized high word into `|x|`:\n\tax = setHighWord( ax, ahx );\n\n\t// Compute `ss = hs + ls = (x-1)/(x+1)` or `(x-1.5)/(x+1.5)`:\n\tbp = BP[ k ]; // BP[0] = 1.0, BP[1] = 1.5\n\tu = ax - bp; // (x-1) || (x-1.5)\n\tv = 1.0 / (ax + bp); // 1/(x+1) || 1/(x+1.5)\n\tss = u * v;\n\ths = setLowWord( ss, 0 ); // set all low word (less significant significand) bits to 0s\n\n\t// Compute `ht = ax + bp` (via manipulation, i.e., bit flipping, of the high word):\n\ttmp = ((ahx>>1) | HIGH_BIASED_EXP_NEG_512) + HIGH_SIGNIFICAND_HALF;\n\ttmp += (k << 18); // `(k<<18)` can be considered the word equivalent of `1.0` or `1.5`\n\tht = setHighWord( 0.0, tmp );\n\tlt = ax - (ht - bp);\n\tls = v * ( ( u - (hs*ht) ) - ( hs*lt ) );\n\n\t// Compute `log(ax)`...\n\n\ts2 = ss * ss;\n\tr = s2 * s2 * polyvalL( s2 );\n\tr += ls * (hs + ss);\n\ts2 = hs * hs;\n\tht = 3.0 + s2 + r;\n\tht = setLowWord( ht, 0 );\n\tlt = r - ((ht-3.0) - s2);\n\n\t// u+v = ss*(1+...):\n\tu = hs * ht;\n\tv = ( ls*ht ) + ( lt*ss );\n\n\t// 2/(3LN2) * (ss+...):\n\thp = u + v;\n\thp = setLowWord( hp, 0 );\n\tlp = v - (hp - u);\n\thz = CP_HI * hp; // CP_HI+CP_LO = 2/(3*LN2)\n\tlz = ( CP_LO*hp ) + ( lp*CP ) + DP_LO[ k ];\n\n\t// log2(ax) = (ss+...)*2/(3*LN2) = n + dp + hz + lz\n\tdp = DP_HI[ k ];\n\tt = n;\n\tt1 = ((hz+lz) + dp) + t; // log2(ax)\n\tt1 = setLowWord( t1, 0 );\n\tt2 = lz - (((t1-t) - dp) - hz);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = log2ax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.5999999999999946;\n\t}\n\treturn 0.5999999999999946 + (x * (0.4285714285785502 + (x * (0.33333332981837743 + (x * (0.272728123808534 + (x * (0.23066074577556175 + (x * 0.20697501780033842))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar polyvalW = require( './polyval_w.js' );\n\n\n// VARIABLES //\n\n// 1/LN2\nvar INV_LN2 = 1.44269504088896338700e+00; // 0x3FF71547, 0x652B82FE\n\n// High (24 bits): 1/LN2\nvar INV_LN2_HI = 1.44269502162933349609e+00; // 0x3FF71547, 0x60000000\n\n// Low: 1/LN2\nvar INV_LN2_LO = 1.92596299112661746887e-08; // 0x3E54AE0B, 0xF85DDF44\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log}(x)\\\\) assuming \\\\(|1-x|\\\\) is small and using the approximation \\\\(x - x^2/2 + x^3/3 - x^4/4\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = logx( [ 0.0, 0.0 ], 9.0 ); // => [ t1, t2 ]\n* // returns [ -1265.7236328125, -0.0008163940840404393 ]\n*/\nfunction logx( out, ax ) {\n\tvar t2;\n\tvar t1;\n\tvar t;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tt = ax - 1.0; // `t` has `20` trailing zeros\n\tw = t * t * polyvalW( t );\n\tu = INV_LN2_HI * t; // `INV_LN2_HI` has `21` significant bits\n\tv = ( t*INV_LN2_LO ) - ( w*INV_LN2 );\n\tt1 = u + v;\n\tt1 = setLowWord( t1, 0 );\n\tt2 = v - (t1 - u);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = logx;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.5;\n\t}\n\treturn 0.5 + (x * (-0.3333333333333333 + (x * 0.25)));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getHighWord = require( '@stdlib/number/float64/base/get-high-word' );\nvar setHighWord = require( '@stdlib/number/float64/base/set-high-word' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar uint32ToInt32 = require( '@stdlib/number/uint32/base/to-int32' );\nvar ldexp = require( '@stdlib/math/base/special/ldexp' );\nvar LN2 = require( '@stdlib/constants/math/float64-ln-two' );\nvar BIAS = require( '@stdlib/constants/math/float64-exponent-bias' );\nvar polyvalP = require( './polyval_p.js' );\n\n\n// VARIABLES //\n\n// 0x7fffffff = 2147483647 => 0 11111111111 11111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// 0x000fffff = 1048575 => 0 00000000000 11111111111111111111\nvar HIGH_SIGNIFICAND_MASK = 0x000fffff|0; // asm type annotation\n\n// 0x00100000 = 1048576 => 0 00000000001 00000000000000000000 => biased exponent: 1 = -1022+1023 => 2^-1022\nvar HIGH_MIN_NORMAL_EXP = 0x00100000|0; // asm type annotation\n\n// 0x3fe00000 = 1071644672 => 0 01111111110 00000000000000000000 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_BIASED_EXP_NEG_1 = 0x3fe00000|0; // asm type annotation\n\n// TODO: consider making into an external constant\nvar HIGH_NUM_SIGNIFICAND_BITS = 20|0; // asm type annotation\n\n// High: LN2\nvar LN2_HI = 6.93147182464599609375e-01; // 0x3FE62E43, 0x00000000\n\n// Low: LN2\nvar LN2_LO = -1.90465429995776804525e-09; // 0xBE205C61, 0x0CA86C39\n\n\n// MAIN //\n\n/**\n* Computes \\\\(2^{\\mathrm{hp} + \\mathrm{lp}\\\\).\n*\n* @private\n* @param {number} j - high word of `hp + lp`\n* @param {number} hp - first power summand\n* @param {number} lp - second power summand\n* @returns {number} function value\n*\n* @example\n* var z = pow2( 1065961648, -0.3398475646972656, -0.000002438187359100815 );\n* // returns ~0.79\n*/\nfunction pow2( j, hp, lp ) {\n\tvar tmp;\n\tvar t1;\n\tvar t;\n\tvar r;\n\tvar u;\n\tvar v;\n\tvar w;\n\tvar z;\n\tvar n;\n\tvar i;\n\tvar k;\n\n\ti = (j & ABS_MASK)|0; // asm type annotation\n\tk = ((i>>HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // asm type annotation\n\tn = 0;\n\n\t// `|z| > 0.5`, set `n = z+0.5`\n\tif ( i > HIGH_BIASED_EXP_NEG_1 ) {\n\t\tn = (j + (HIGH_MIN_NORMAL_EXP>>(k+1)))>>>0; // asm type annotation\n\t\tk = (((n & ABS_MASK)>>HIGH_NUM_SIGNIFICAND_BITS) - BIAS)|0; // new k for n\n\t\ttmp = ((n & ~(HIGH_SIGNIFICAND_MASK >> k)))>>>0; // asm type annotation\n\t\tt = setHighWord( 0.0, tmp );\n\t\tn = (((n & HIGH_SIGNIFICAND_MASK)|HIGH_MIN_NORMAL_EXP) >> (HIGH_NUM_SIGNIFICAND_BITS-k))>>>0; // eslint-disable-line max-len\n\t\tif ( j < 0 ) {\n\t\t\tn = -n;\n\t\t}\n\t\thp -= t;\n\t}\n\tt = lp + hp;\n\tt = setLowWord( t, 0 );\n\tu = t * LN2_HI;\n\tv = ( (lp - (t-hp))*LN2 ) + ( t*LN2_LO );\n\tz = u + v;\n\tw = v - (z - u);\n\tt = z * z;\n\tt1 = z - ( t*polyvalP( t ) );\n\tr = ( (z*t1) / (t1-2.0) ) - ( w + (z*w) );\n\tz = 1.0 - (r - z);\n\tj = getHighWord( z );\n\tj = uint32ToInt32( j );\n\tj += (n << HIGH_NUM_SIGNIFICAND_BITS)>>>0; // asm type annotation\n\n\t// Check for subnormal output...\n\tif ( (j>>HIGH_NUM_SIGNIFICAND_BITS) <= 0 ) {\n\t\tz = ldexp( z, n );\n\t} else {\n\t\tz = setHighWord( z, j );\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of `2`.\n*\n* @module @stdlib/constants/math/float64-ln-two\n* @type {number}\n*\n* @example\n* var LN2 = require( '@stdlib/constants/math/float64-ln-two' );\n* // returns 0.6931471805599453\n*/\n\n\n// MAIN //\n\n/**\n* Natural logarithm of `2`.\n*\n* ```tex\n* \\ln 2\n* ```\n*\n* @constant\n* @type {number}\n* @default 0.6931471805599453\n*/\nvar LN2 = 6.93147180559945309417232121458176568075500134360255254120680009493393621969694715605863326996418687542001481021e-01; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nmodule.exports = LN2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666602;\n\t}\n\treturn 0.16666666666666602 + (x * (-0.0027777777777015593 + (x * (0.00006613756321437934 + (x * (-0.0000016533902205465252 + (x * 4.1381367970572385e-8))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn Infinity;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 709811.662581658 + (x * (679979.8474157227 + (x * (293136.7857211597 + (x * (74887.54032914672 + (x * (12555.290582413863 + (x * (1443.4299244417066 + (x * (115.24194596137347 + (x * (6.309239205732627 + (x * (0.22668404630224365 + (x * (0.004826466289237662 + (x * 0.00004624429436045379))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (362880.0 + (x * (1026576.0 + (x * (1172700.0 + (x * (723680.0 + (x * (269325.0 + (x * (63273.0 + (x * (9450.0 + (x * (870.0 + (x * (45.0 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.00004624429436045379 + (x * (0.004826466289237662 + (x * (0.22668404630224365 + (x * (6.309239205732627 + (x * (115.24194596137347 + (x * (1443.4299244417066 + (x * (12555.290582413863 + (x * (74887.54032914672 + (x * (293136.7857211597 + (x * (679979.8474157227 + (x * 709811.662581658))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (45.0 + (x * (870.0 + (x * (9450.0 + (x * (63273.0 + (x * (269325.0 + (x * (723680.0 + (x * (1172700.0 + (x * (1026576.0 + (x * (362880.0 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 32-bit integer.\n*\n* @module @stdlib/constants/math/int32-max\n* @type {integer32}\n*\n* @example\n* var INT32_MAX = require( '@stdlib/constants/math/int32-max' );\n* // returns 2147483647\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{31} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 2147483647\n*/\nvar INT32_MAX = 2147483647|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaDeltaRatio = require( '@stdlib/math/base/special/gamma-delta-ratio' );\nvar factorial = require( '@stdlib/math/base/special/factorial' );\nvar gammainc = require( '@stdlib/math/base/special/gammainc' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar MIN_VALUE = require( '@stdlib/constants/math/float64-smallest-normal' );\nvar EPSILON = require( '@stdlib/constants/math/float64-eps' );\nvar fullIGammaPrefix = require( './full_igamma_prefix.js' );\nvar regularizedGammaPrefix = require( './regularized_gamma_prefix.js' );\n\n\n// VARIABLES //\n\nvar p = new Array( 30 );\n\n\n// MAIN //\n\n/**\n* This is DiDonato and Morris's BGRAT routine, see Eq's 9 through 9.6.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @param {NonNegativeInteger} s0 - initial value\n* @param {number} mult - initial value\n* @param {boolean} normalized - boolean indicating whether to evaluate the regularized or non-regularized incomplete beta function\n* @returns {number} function value\n*/\nfunction betaSmallBLargeASeries( a, b, x, y, s0, mult, normalized ) {\n\tvar prefix;\n\tvar tmp1;\n\tvar tnp1;\n\tvar sum;\n\tvar b2n;\n\tvar bm1;\n\tvar lx2;\n\tvar lxp;\n\tvar mbn;\n\tvar lx;\n\tvar t4;\n\tvar h;\n\tvar j;\n\tvar m;\n\tvar n;\n\tvar r;\n\tvar t;\n\tvar u;\n\n\t// Some values we'll need later, these are Eq 9.1:\n\tbm1 = b - 1.0;\n\tt = a + ( bm1 / 2.0 );\n\tif ( y < 0.35 ) {\n\t\tlx = log1p( -y );\n\t} else {\n\t\tlx = ln( x );\n\t}\n\tu = -t * lx;\n\n\t// And from from 9.2:\n\th = regularizedGammaPrefix( b, u );\n\tif ( h <= MIN_VALUE ) {\n\t\treturn s0;\n\t}\n\tif ( normalized ) {\n\t\tprefix = h / gammaDeltaRatio( a, b );\n\t\tprefix /= pow( t, b );\n\t} else {\n\t\tprefix = fullIGammaPrefix( b, u ) / pow( t, b );\n\t}\n\tprefix *= mult;\n\n\t// We need the quantity Pn. Unfortunately, this is computed recursively and requires a full history of all the previous values. No choice but to declare a big table and hope it's big enough...\n\tp[ 0 ] = 1;  // see 9.3.\n\n\t// Now an initial value for J, see 9.6: gammainc( u, b, regularized, upper )\n\tj = gammainc( u, b, true, true );\n\tj /= h;\n\n\t// Now we can start to pull things together and evaluate the sum in Eq 9:\n\tsum = s0 + ( prefix * j ); // Value at N = 0\n\n\t// Some variables we'll need...\n\ttnp1 = 1.0; // 2*N+1\n\tlx2 = lx / 2.0;\n\tlx2 *= lx2;\n\tlxp = 1.0;\n\tt4 = 4.0 * t * t;\n\tb2n = b;\n\tfor ( n = 1; n < p.length; ++n ) {\n\t\t// Begin by evaluating the next Pn from Eq 9.4:\n\t\ttnp1 += 2.0;\n\t\tp[ n ] = 0.0;\n\t\tmbn = b - n;\n\t\ttmp1 = 3;\n\t\tfor ( m = 1; m < n; ++m ) {\n\t\t\tmbn = ( m * b ) - n;\n\t\t\tp[ n ] += mbn * p[ n-m ] / factorial( tmp1 );\n\t\t\ttmp1 += 2;\n\t\t}\n\t\tp[ n ] /= n;\n\t\tp[ n ] += bm1 / factorial( tnp1 );\n\n\t\t// Now we want Jn from Jn-1 using Eq 9.6:\n\t\tj = ( ( b2n * ( b2n+1.0 ) * j ) + ( ( u+b2n+1.0 ) * lxp ) ) / t4;\n\t\tlxp *= lx2;\n\t\tb2n += 2.0;\n\n\t\t// Pull it together with Eq 9:\n\t\tr = prefix * p[ n ] * j;\n\t\tsum += r;\n\t\tif ( r > 1.0 ) {\n\t\t\tif ( abs( r ) < abs( EPSILON * sum ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if ( abs( r / EPSILON ) < abs( sum ) ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\n\nmodule.exports = betaSmallBLargeASeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006-7, 2013-14.\n* Copyright Paul A. Bristow 2007, 2013-14.\n* Copyright Nikhar Agrawal 2013-14.\n* Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar gamma = require( '@stdlib/math/base/special/gamma' );\nvar factorial = require( '@stdlib/math/base/special/factorial' );\nvar gammaDeltaRatioLanczos = require( './gamma_delta_ratio_lanczos.js' );\n\n\n// VARIABLES //\n\nvar MAX_FACTORIAL = 170; // TODO: consider moving to pkg\n\n\n// MAIN //\n\n/**\n* Computes the ratio of two gamma functions.\n*\n* ## Notes\n*\n* -   Specifically, the function evaluates\n*\n*     ```tex\n*     \\frac{ \\Gamma( z ) }{ \\Gamma( z + \\delta ) }\n*     ```\n*\n* @param {number} z - first gamma parameter\n* @param {number} delta - difference\n* @returns {number} gamma ratio\n*\n* @example\n* var y = gammaDeltaRatio( 2.0, 3.0 );\n* // returns ~0.042\n*\n* @example\n* var y = gammaDeltaRatio( 4.0, 0.5 );\n* // returns ~0.516\n*\n* @example\n* var y = gammaDeltaRatio( 100.0, 0.0 );\n* // returns 1.0\n*/\nfunction gammaDeltaRatio( z, delta ) {\n\tvar result;\n\tvar idelta;\n\tvar iz;\n\n\tif ( z <= 0.0 || z + delta <= 0.0 ) {\n\t\t// This isn't very sophisticated, or accurate, but it does work:\n\t\treturn gamma( z ) / gamma( z + delta );\n\t}\n\tidelta = floor( delta );\n\tif ( idelta === delta ) {\n\t\tiz = floor( z );\n\t\tif ( iz === z ) {\n\t\t\t// As both `z` and `delta` are integers, see if we can use a table lookup:\n\t\t\tif ( z <= MAX_FACTORIAL && ( z + delta <= MAX_FACTORIAL ) ) {\n\t\t\t\treturn factorial( iz - 1.0 ) / factorial( idelta + iz - 1.0 );\n\t\t\t}\n\t\t}\n\t\tif ( abs(delta) < 20.0 ) {\n\t\t\t// As `delta` is a small integer, we can use a finite product:\n\t\t\tif ( delta === 0.0 ) {\n\t\t\t\treturn 1.0;\n\t\t\t}\n\t\t\tif ( delta < 0.0 ) {\n\t\t\t\tz -= 1.0;\n\t\t\t\tresult = z;\n\t\t\t\tdelta += 1.0;\n\t\t\t\twhile ( delta !== 0.0 ) {\n\t\t\t\t\tz -= 1.0;\n\t\t\t\t\tresult *= z;\n\t\t\t\t\tdelta += 1.0;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tresult = 1.0 / z;\n\t\t\tdelta -= 1.0;\n\t\t\twhile ( delta !== 0.0 ) {\n\t\t\t\tz += 1.0;\n\t\t\t\tresult /= z;\n\t\t\t\tdelta -= 1.0;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn gammaDeltaRatioLanczos( z, delta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammaDeltaRatio;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1987, 1989, 1992, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar sin = require( '@stdlib/math/base/special/sin' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar PI = require( '@stdlib/constants/math/float64-pi' );\nvar stirlingApprox = require( './stirling_approximation.js' );\nvar smallApprox = require( './small_approximation.js' );\nvar rateval = require( './rational_pq.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the gamma function.\n*\n* ## Method\n*\n* 1.  Arguments \\\\(|x| \\leq 34\\\\) are reduced by recurrence and the function approximated by a rational function of degree \\\\(6/7\\\\) in the interval \\\\((2,3)\\\\).\n* 2.  Large negative arguments are made positive using a reflection formula.\n* 3.  Large arguments are handled by Stirling's formula.\n*\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | arithmetic | domain    | # trials | peak    | rms     |\n*     |:----------:|:---------:|:--------:|:-------:|:-------:|\n*     | DEC        | -34,34    | 10000    | 1.3e-16 | 2.5e-17 |\n*     | IEEE       | -170,-33  | 20000    | 2.3e-15 | 3.3e-16 |\n*     | IEEE       | -33, 33   | 20000    | 9.4e-16 | 2.2e-16 |\n*     | IEEE       | 33, 171.6 | 20000    | 2.3e-15 | 3.2e-16 |\n*\n* -   Error for arguments outside the test range will be larger owing to error amplification by the exponential function.\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = gamma( 4.0 );\n* // returns 6.0\n*\n* @example\n* var v = gamma( -1.5 );\n* // returns ~2.363\n*\n* @example\n* var v = gamma( -0.5 );\n* // returns ~-3.545\n*\n* @example\n* var v = gamma( 0.5 );\n* // returns ~1.772\n*\n* @example\n* var v = gamma( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = gamma( -0.0 );\n* // returns -Infinity\n*\n* @example\n* var v = gamma( NaN );\n* // returns NaN\n*/\nfunction gamma( x ) {\n\tvar sign;\n\tvar q;\n\tvar p;\n\tvar z;\n\tif (\n\t\t(isInteger( x ) && x < 0) ||\n\t\tx === NINF ||\n\t\tisnan( x )\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\tif ( isNegativeZero( x ) ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn PINF;\n\t}\n\tif ( x > 171.61447887182298 ) {\n\t\treturn PINF;\n\t}\n\tif ( x < -170.5674972726612 ) {\n\t\treturn 0.0;\n\t}\n\tq = abs( x );\n\tif ( q > 33.0 ) {\n\t\tif ( x >= 0.0 ) {\n\t\t\treturn stirlingApprox( x );\n\t\t}\n\t\tp = floor( q );\n\n\t\t// Check whether `x` is even...\n\t\tif ( (p&1) === 0 ) {\n\t\t\tsign = -1.0;\n\t\t} else {\n\t\t\tsign = 1.0;\n\t\t}\n\t\tz = q - p;\n\t\tif ( z > 0.5 ) {\n\t\t\tp += 1.0;\n\t\t\tz = q - p;\n\t\t}\n\t\tz = q * sin( PI * z );\n\t\treturn sign * PI / ( abs(z)*stirlingApprox(q) );\n\t}\n\t// Reduce `x`...\n\tz = 1.0;\n\twhile ( x >= 3.0 ) {\n\t\tx -= 1.0;\n\t\tz *= x;\n\t}\n\twhile ( x < 0.0 ) {\n\t\tif ( x > -1.0e-9 ) {\n\t\t\treturn smallApprox( x, z );\n\t\t}\n\t\tz /= x;\n\t\tx += 1.0;\n\t}\n\twhile ( x < 2.0 ) {\n\t\tif ( x < 1.0e-9 ) {\n\t\t\treturn smallApprox( x, z );\n\t\t}\n\t\tz /= x;\n\t\tx += 1.0;\n\t}\n\tif ( x === 2.0 ) {\n\t\treturn z;\n\t}\n\tx -= 2.0;\n\treturn z * rateval( x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gamma;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1987, 1989, 1992, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar SQRT_TWO_PI = require( '@stdlib/constants/math/float64-sqrt-two-pi' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar polyval = require( './polyval_s.js' );\n\n\n// VARIABLES //\n\nvar MAX_STIRLING = 143.01608;\n\n\n// MAIN //\n\n/**\n* Evaluates the gamma function using Stirling's formula. The polynomial is valid for \\\\(33 \\leq x \\leq 172\\\\).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} function value\n*/\nfunction gamma( x ) {\n\tvar w;\n\tvar y;\n\tvar v;\n\n\tw = 1.0 / x;\n\tw = 1.0 + ( w * polyval( w ) );\n\ty = exp( x );\n\n\t// Check `x` to avoid `pow()` overflow...\n\tif ( x > MAX_STIRLING ) {\n\t\tv = pow( x, ( 0.5*x ) - 0.25 );\n\t\ty = v * (v/y);\n\t} else {\n\t\ty = pow( x, x-0.5 ) / y;\n\t}\n\treturn SQRT_TWO_PI * y * w;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gamma;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.08333333333334822;\n\t}\n\treturn 0.08333333333334822 + (x * (0.0034722222160545866 + (x * (-0.0026813261780578124 + (x * (-0.00022954996161337813 + (x * 0.0007873113957930937))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1987, 1989, 1992, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar EULER = require( '@stdlib/constants/math/float64-eulergamma' );\n\n\n// MAIN //\n\n/**\n* Evaluates the gamma function using a small-value approximation.\n*\n* @private\n* @param {number} x - input value\n* @param {number} z - scale factor\n* @returns {number} function value\n*/\nfunction gamma( x, z ) {\n\treturn z / ( (1.0+( EULER*x )) * x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gamma;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The Euler-Mascheroni constant.\n*\n* @module @stdlib/constants/math/float64-eulergamma\n* @type {number}\n*\n* @example\n* var GAMMA = require( '@stdlib/constants/math/float64-eulergamma' );\n* // returns 0.5772156649015329\n*/\n\n\n// MAIN //\n\n/**\n* The Euler-Mascheroni constant.\n*\n* @constant\n* @type {number}\n* @default 0.5772156649015329\n* @see [OEIS]{@link http://oeis.org/A001620}\n* @see [Mathworld]{@link http://mathworld.wolfram.com/Euler-MascheroniConstant.html}\n*/\nvar GAMMA = 0.577215664901532860606512090082402431042;\n\n\n// EXPORTS //\n\nmodule.exports = GAMMA;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 1.0 + (x * (0.4942148268014971 + (x * (0.20744822764843598 + (x * (0.04763678004571372 + (x * (0.010421379756176158 + (x * (0.0011913514700658638 + (x * (0.00016011952247675185 + (x * 0.0))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.0714304917030273 + (x * (-0.23459179571824335 + (x * (0.035823639860549865 + (x * (0.011813978522206043 + (x * (-0.004456419138517973 + (x * (0.0005396055804933034 + (x * -0.000023158187332412014))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (0.00016011952247675185 + (x * (0.0011913514700658638 + (x * (0.010421379756176158 + (x * (0.04763678004571372 + (x * (0.20744822764843598 + (x * (0.4942148268014971 + (x * 1.0))))))))))))); // eslint-disable-line max-len\n\t\ts2 = -0.000023158187332412014 + (x * (0.0005396055804933034 + (x * (-0.004456419138517973 + (x * (0.011813978522206043 + (x * (0.035823639860549865 + (x * (-0.23459179571824335 + (x * (0.0714304917030273 + (x * 1.0))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar gamma = require( '@stdlib/math/base/special/gamma' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar FACTORIALS = require( './factorials.json' );\n\n\n// VARIABLES //\n\nvar MAX_FACTORIAL = 170; // TODO: consider extracting as a constant\n\n\n// MAIN //\n\n/**\n* Evaluates the factorial of `x`.\n*\n* @param {number} x - input value\n* @returns {number} factorial\n*\n* @example\n* var v = factorial( 3.0 );\n* // returns 6.0\n*\n* @example\n* var v = factorial( -1.5 );\n* // returns ~-3.545\n*\n* @example\n* var v = factorial( -0.5 );\n* // returns ~1.772\n*\n* @example\n* var v = factorial( 0.5 );\n* // returns ~0.886\n*\n* @example\n* var v = factorial( -10.0 );\n* // returns NaN\n*\n* @example\n* var v = factorial( 171.0 );\n* // returns Infinity\n*\n* @example\n* var v = factorial( NaN );\n* // returns NaN\n*/\nfunction factorial( x ) {\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isInteger( x ) ) {\n\t\tif ( x < 0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= MAX_FACTORIAL ) {\n\t\t\treturn FACTORIALS[ x ];\n\t\t}\n\t\treturn PINF;\n\t}\n\treturn gamma( x + 1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = factorial;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006-7, 2013-14.\n* Copyright Paul A. Bristow 2007, 2013-14.\n* Copyright Nikhar Agrawal 2013-14.\n* Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSum = require( '@stdlib/math/base/special/gamma-lanczos-sum' );\nvar gamma = require( '@stdlib/math/base/special/gamma' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar EPSILON = require( '@stdlib/constants/math/float64-eps' );\nvar E = require( '@stdlib/constants/math/float64-e' );\nvar G = require( '@stdlib/constants/math/float64-gamma-lanczos-g' );\n\n\n// VARIABLES //\n\nvar MAX_FACTORIAL = 170; // TODO: consider moving to pkg\nvar FACTORIAL_169 = 4.269068009004705e+304;\n\n\n// MAIN //\n\n/**\n* Calculates the ratio of two gamma functions via Lanczos approximation.\n*\n* ## Notes\n*\n* -   When \\\\( z < \\epsilon \\\\), we get spurious numeric overflow unless we're very careful. This can occur either inside `lanczosSum(z)` or in the final combination of terms. To avoid this, split the product up into 2 (or 3) parts:\n*\n*     ```tex\n*     \\begin{align*}\n*     G(z) / G(L) &= 1 / (z \\cdot G(L)) ; z < \\eps, L = z + \\delta = \\delta \\\\\n*     z * G(L) &= z * G(lim) \\cdot (G(L)/G(lim)) ; lim = \\text{largest factorial}\n*     \\end{align*}\n*     ```\n*\n* @private\n* @param {number} z - first gamma parameter\n* @param {number} delta - difference\n* @returns {number} gamma ratio\n*/\nfunction gammaDeltaRatioLanczos( z, delta ) {\n\tvar result;\n\tvar ratio;\n\tvar zgh;\n\n\tif ( z < EPSILON ) {\n\t\tif ( delta > MAX_FACTORIAL ) {\n\t\t\tratio = gammaDeltaRatioLanczos( delta, MAX_FACTORIAL-delta );\n\t\t\tratio *= z;\n\t\t\tratio *= FACTORIAL_169;\n\t\t\treturn 1.0 / ratio;\n\t\t}\n\t\treturn 1.0 / ( z * gamma( z+delta ) );\n\t}\n\tzgh = z + G - 0.5;\n\tif ( z + delta === z ) {\n\t\tif ( abs(delta) < 10.0 ) {\n\t\t\tresult = exp( ( 0.5-z ) * log1p( delta/zgh ) );\n\t\t} else {\n\t\t\tresult = 1.0;\n\t\t}\n\t} else {\n\t\tif ( abs(delta) < 10.0 ) {\n\t\t\tresult = exp( ( 0.5-z ) * log1p( delta/zgh ));\n\t\t} else {\n\t\t\tresult = pow( zgh / (zgh+delta), z-0.5 );\n\t\t}\n\t\t// Split up the calculation to avoid spurious overflow:\n\t\tresult *= lanczosSum( z ) / lanczosSum( z + delta );\n\t}\n\tresult *= pow( E / ( zgh+delta ), delta );\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammaDeltaRatioLanczos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate the Lanczos sum for the approximation of the gamma function.\n*\n* @module @stdlib/math/base/special/gamma-lanczos-sum\n*\n* @example\n* var gammaLanczosSum = require( '@stdlib/math/base/special/gamma-lanczos-sum' );\n*\n* var v = gammaLanczosSum( 4.0 );\n* // returns ~950.366\n*\n* v = gammaLanczosSum( -1.5 );\n* // returns ~1373366.245\n*\n* v = gammaLanczosSum( -0.5 );\n* // returns ~-699841.735\n*\n* v = gammaLanczosSum( 0.5 );\n* // returns ~96074.186\n*\n* v = gammaLanczosSum( 0.0 );\n* // returns Infinity\n*\n* v = gammaLanczosSum( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gammaLanczosSum = require( './gamma_lanczos_sum.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaLanczosSum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/lanczos.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Calculates the Lanczos sum approximation.\n*\n* @name gammaLanczosSum\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} Lanczos sum approximation\n*\n* @example\n* var v = gammaLanczosSum( 4.0 );\n* // returns ~950.366\n*\n* @example\n* var v = gammaLanczosSum( -1.5 );\n* // returns ~1373366.245\n*\n* @example\n* var v = gammaLanczosSum( -0.5 );\n* // returns ~-699841.735\n*\n* @example\n* var v = gammaLanczosSum( 0.5 );\n* // returns ~96074.186\n*\n* @example\n* var v = gammaLanczosSum( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = gammaLanczosSum( NaN );\n* // returns NaN\n*/\nvar gammaLanczosSum = require( './rational_pq.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaLanczosSum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn Infinity;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 38474670393.31777 + (x * (36857665043.51951 + (x * (15889202453.72942 + (x * (4059208354.298835 + (x * (680547661.1834733 + (x * (78239755.00312005 + (x * (6246580.776401795 + (x * (341986.3488721347 + (x * (12287.194511824551 + (x * (261.61404416416684 + (x * 2.5066282746310007))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (362880.0 + (x * (1026576.0 + (x * (1172700.0 + (x * (723680.0 + (x * (269325.0 + (x * (63273.0 + (x * (9450.0 + (x * (870.0 + (x * (45.0 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 2.5066282746310007 + (x * (261.61404416416684 + (x * (12287.194511824551 + (x * (341986.3488721347 + (x * (6246580.776401795 + (x * (78239755.00312005 + (x * (680547661.1834733 + (x * (4059208354.298835 + (x * (15889202453.72942 + (x * (36857665043.51951 + (x * 38474670393.31777))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (45.0 + (x * (870.0 + (x * (9450.0 + (x * (63273.0 + (x * (269325.0 + (x * (723680.0 + (x * (1172700.0 + (x * (1026576.0 + (x * (362880.0 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006-7, 2013-14.\n* (C) Copyright Paul A. Bristow 2007, 2013-14.\n* (C) Copyright Nikhar Agrawal 2013-14.\n* (C) Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaln = require( '@stdlib/math/base/special/gammaln' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar gamma = require( '@stdlib/math/base/special/gamma' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar SQRT_EPSILON = require( '@stdlib/constants/math/float64-sqrt-eps' );\nvar FLOAT64_MAX = require( '@stdlib/constants/math/float64-max' );\nvar SQRT_TWO_PI = require( '@stdlib/constants/math/float64-sqrt-two-pi' );\nvar MAX_LN = require( '@stdlib/constants/math/float64-max-ln' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar finiteGammaQ = require( './finite_gamma_q.js' );\nvar finiteHalfGammaQ = require( './finite_half_gamma_q.js' );\nvar fullIGammaPrefix = require( './full_igamma_prefix.js' );\nvar igammaTemmeLarge = require( './igamma_temme_large.js' );\nvar lowerGammaSeries = require( './lower_gamma_series.js' );\nvar regularisedGammaPrefix = require( './regularised_gamma_prefix.js' );\nvar tgammaSmallUpperPart = require( './tgamma_small_upper_part.js' );\nvar upperGammaFraction = require( './upper_gamma_fraction.js' );\n\n\n// VARIABLES //\n\nvar MAX_FACTORIAL = 170; // TODO: consider extracting as a constant\n\n\n// MAIN //\n\n/**\n* Computes the regularized incomplete gamma function. The upper tail is calculated via the modified Lentz's method for computing continued fractions, the lower tail using a power expansion.\n*\n*\n* ## Notes\n*\n* -   When `a >= MAX_FACTORIAL` and computing the non-normalized incomplete gamma, result is rather hard to compute unless we use logs. There are really two options a) if `x` is a long way from `a` in value then we can reliably use methods 2 and 4 below in logarithmic form and go straight to the result. Otherwise we let the regularized gamma take the strain (the result is unlikely to underflow in the central region anyway) and combine with `lgamma` in the hopes that we get a finite result.\n*\n* @param {NonNegativeNumber} x - function parameter\n* @param {PositiveNumber} a - function parameter\n* @param {boolean} [regularized=true] - boolean indicating if the function should evaluate the regularized or non-regularized incomplete gamma functions\n* @param {boolean} [upper=false] - boolean indicating if the function should return the upper tail of the incomplete gamma function\n* @returns {number} function value\n*/\nfunction gammainc( x, a, regularized, upper ) {\n\tvar optimisedInvert;\n\tvar normalized;\n\tvar evalMethod;\n\tvar initValue;\n\tvar isHalfInt;\n\tvar useTemme;\n\tvar isSmallA;\n\tvar invert;\n\tvar result;\n\tvar isInt;\n\tvar sigma;\n\tvar gam;\n\tvar res;\n\tvar fa;\n\tvar g;\n\n\tif ( x < 0.0 || a <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tnormalized = ( regularized === void 0 ) ? true : regularized;\n\tinvert = upper;\n\tresult = 0.0;\n\tif ( a >= MAX_FACTORIAL && !normalized ) {\n\t\tif ( invert && ( a * 4.0 < x ) ) {\n\t\t\t// This is method 4 below, done in logs:\n\t\t\tresult = ( a * ln(x) ) - x;\n\t\t\tresult += ln( upperGammaFraction( a, x ) );\n\t\t}\n\t\telse if ( !invert && ( a > 4.0 * x ) ) {\n\t\t\t// This is method 2 below, done in logs:\n\t\t\tresult = ( a * ln(x) ) - x;\n\t\t\tinitValue = 0;\n\t\t\tresult += ln( lowerGammaSeries( a, x, initValue ) / a );\n\t\t}\n\t\telse {\n\t\t\tresult = gammainc( a, x, true, invert );\n\t\t\tif ( result === 0.0 ) {\n\t\t\t\tif ( invert ) {\n\t\t\t\t\t// Try http://functions.wolfram.com/06.06.06.0039.01\n\t\t\t\t\tresult = 1.0 + ( 1.0 / (12.0*a) ) + ( 1.0 / (288.0*a*a) );\n\t\t\t\t\tresult = ln( result ) - a + ( ( a-0.5 ) * ln(a) );\n\t\t\t\t\tresult += ln( SQRT_TWO_PI );\n\t\t\t\t} else {\n\t\t\t\t\t// This is method 2 below, done in logs, we're really outside the range of this method, but since the result is almost certainly infinite, we should probably be OK:\n\t\t\t\t\tresult = ( a * ln( x ) ) - x;\n\t\t\t\t\tinitValue = 0.0;\n\t\t\t\t\tresult += ln( lowerGammaSeries( a, x, initValue ) / a);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = ln( result ) + gammaln( a );\n\t\t\t}\n\t\t}\n\t\tif ( result > MAX_LN ) {\n\t\t\treturn PINF;\n\t\t}\n\t\treturn exp( result );\n\t}\n\tisSmallA = ( a < 30 ) && ( a <= x + 1.0 ) && ( x < MAX_LN );\n\tif ( isSmallA ) {\n\t\tfa = floor( a );\n\t\tisInt = ( fa === a );\n\t\tisHalfInt = ( isInt ) ? false : ( abs( fa - a ) === 0.5 );\n\t} else {\n\t\tisInt = isHalfInt = false;\n\t}\n\tif ( isInt && x > 0.6 ) {\n\t\t// Calculate Q via finite sum:\n\t\tinvert = !invert;\n\t\tevalMethod = 0;\n\t}\n\telse if ( isHalfInt && x > 0.2 ) {\n\t\t// Calculate Q via finite sum for half integer a:\n\t\tinvert = !invert;\n\t\tevalMethod = 1;\n\t}\n\telse if ( x < SQRT_EPSILON && a > 1.0 ) {\n\t\tevalMethod = 6;\n\t}\n\telse if ( x < 0.5 ) {\n\t\t// Changeover criterion chosen to give a changeover at Q ~ 0.33:\n\t\tif ( -0.4 / ln( x ) < a ) {\n\t\t\tevalMethod = 2;\n\t\t} else {\n\t\t\tevalMethod = 3;\n\t\t}\n\t}\n\telse if ( x < 1.1 ) {\n\t\t// Changeover here occurs when P ~ 0.75 or Q ~ 0.25:\n\t\tif ( x * 0.75 < a ) {\n\t\t\tevalMethod = 2;\n\t\t} else {\n\t\t\tevalMethod = 3;\n\t\t}\n\t}\n\telse {\n\t\t// Begin by testing whether we're in the \"bad\" zone where the result will be near 0.5 and the usual series and continued fractions are slow to converge:\n\t\tuseTemme = false;\n\t\tif ( normalized && a > 20 ) {\n\t\t\tsigma = abs( (x-a)/a );\n\t\t\tif ( a > 200 ) {\n\t\t\t\t// Limit chosen so that we use Temme's expansion only if the result would be larger than about 10^-6. Below that the regular series and continued fractions converge OK, and if we use Temme's method we get increasing errors from the dominant erfc term as it's (inexact) argument increases in magnitude.\n\t\t\t\tif ( 20 / a > sigma * sigma ) {\n\t\t\t\t\tuseTemme = true;\n\t\t\t\t}\n\t\t\t} else if ( sigma < 0.4 ) {\n\t\t\t\tuseTemme = true;\n\t\t\t}\n\t\t}\n\t\tif ( useTemme ) {\n\t\t\tevalMethod = 5;\n\t\t}\n\t\t// Regular case where the result will not be too close to 0.5: Changeover occurs at P ~ Q ~ 0.5. Note that series computation of P is about x2 faster than continued fraction calculation of Q, so try and use the CF only when really necessary, especially for small x.\n\t\telse if ( x - ( 1.0 / (3.0 * x) ) < a ) {\n\t\t\tevalMethod = 2;\n\t\t} else {\n\t\t\tevalMethod = 4;\n\t\t\tinvert = !invert;\n\t\t}\n\t}\n\n\t/* eslint-disable default-case */\n\tswitch ( evalMethod ) {\n\tcase 0:\n\t\tresult = finiteGammaQ( a, x );\n\t\tif (normalized === false ) {\n\t\t\tresult *= gamma( a );\n\t\t}\n\t\tbreak;\n\tcase 1:\n\t\tresult = finiteHalfGammaQ( a, x );\n\t\tif ( normalized === false ) {\n\t\t\tresult *= gamma( a );\n\t\t}\n\t\tbreak;\n\tcase 2:\n\t\t// Compute P:\n\t\tresult = ( normalized ) ?\n\t\t\tregularisedGammaPrefix( a, x ) :\n\t\t\tfullIGammaPrefix( a, x );\n\t\tif ( result !== 0.0 ) {\n\t\t\tinitValue = 0.0;\n\t\t\toptimisedInvert = false;\n\t\t\tif ( invert ) {\n\t\t\t\tinitValue = ( normalized ) ? 1.0 : gamma(a);\n\t\t\t\tif (\n\t\t\t\t\tnormalized ||\n\t\t\t\t\tresult >= 1.0 ||\n\t\t\t\t\tFLOAT64_MAX * result > initValue\n\t\t\t\t) {\n\t\t\t\t\tinitValue /= result;\n\t\t\t\t\tif (\n\t\t\t\t\t\tnormalized ||\n\t\t\t\t\t\ta < 1.0 ||\n\t\t\t\t\t\t( FLOAT64_MAX / a > initValue )\n\t\t\t\t\t) {\n\t\t\t\t\t\tinitValue *= -a;\n\t\t\t\t\t\toptimisedInvert = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitValue = 0.0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tinitValue = 0.0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult *= lowerGammaSeries( a, x, initValue ) / a;\n\t\tif ( optimisedInvert ) {\n\t\t\tinvert = false;\n\t\t\tresult = -result;\n\t\t}\n\t\tbreak;\n\tcase 3:\n\t\t// Compute Q:\n\t\tinvert = !invert;\n\t\tres = tgammaSmallUpperPart( a, x, invert );\n\t\tresult = res[ 0 ];\n\t\tg = res[ 1 ];\n\t\tinvert = false;\n\t\tif ( normalized ) {\n\t\t\tresult /= g;\n\t\t}\n\t\tbreak;\n\tcase 4:\n\t\t// Compute Q:\n\t\tresult = ( normalized ) ?\n\t\t\tregularisedGammaPrefix( a, x ) :\n\t\t\tfullIGammaPrefix( a, x );\n\t\tif ( result !== 0 ) {\n\t\t\tresult *= upperGammaFraction( a, x );\n\t\t}\n\t\tbreak;\n\tcase 5:\n\t\tresult = igammaTemmeLarge( a, x );\n\t\tif ( x >= a ) {\n\t\t\tinvert = !invert;\n\t\t}\n\t\tbreak;\n\tcase 6:\n\t\t// Since x is so small that P is necessarily very small too, use http://functions.wolfram.com/GammaBetaErf/GammaRegularized/06/01/05/01/01/\n\t\tresult = ( normalized ) ?\n\t\t\tpow(x, a) / gamma( a + 1.0 ) :\n\t\t\tpow( x, a ) / a;\n\t\tresult *= 1.0 - ( a * x / ( a + 1.0 ) );\n\t\tbreak;\n\t}\n\tif ( normalized && result > 1.0 ) {\n\t\tresult = 1.0;\n\t}\n\tif ( invert ) {\n\t\tgam = ( normalized ) ? 1.0 : gamma( a );\n\t\tresult = gam - result;\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammainc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Square root of double-precision floating-point epsilon.\n*\n* @module @stdlib/constants/math/float64-sqrt-eps\n* @type {number}\n*\n* @example\n* var FLOAT64_SQRT_EPSILON = require( '@stdlib/constants/math/float64-sqrt-eps' );\n* // returns 0.14901161193847656e-7\n*/\n\n\n// MAIN //\n\n/**\n* Square root of double-precision floating-point epsilon.\n*\n* ```tex\n* \\sqrt{\\frac{1}{2^{52}}}\n* ```\n*\n* @constant\n* @type {number}\n* @default 0.14901161193847656e-7\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n* @see [Machine Epsilon]{@link https://en.wikipedia.org/wiki/Machine_epsilon}\n*/\nvar FLOAT64_SQRT_EPSILON = 0.1490116119384765625e-7;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_SQRT_EPSILON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exp = require( '@stdlib/math/base/special/exp' );\n\n\n// MAIN //\n\n/**\n* Calculates normalized Q when a is an integer.\n*\n* @private\n* @param {integer} a - function parameter\n* @param {number} x - function parameter\n* @returns {number} upper gamma fraction\n*/\nfunction finiteGammaQ( a, x ) {\n\tvar term;\n\tvar sum;\n\tvar e;\n\tvar n;\n\n\te = exp( -x );\n\tsum = e;\n\tif ( sum !== 0.0 ) {\n\t\tterm = sum;\n\t\tfor ( n = 1; n < a; ++n ) {\n\t\t\tterm /= n;\n\t\t\tterm *= x;\n\t\t\tsum += term;\n\t\t}\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\n\nmodule.exports = finiteGammaQ;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar erfc = require( '@stdlib/math/base/special/erfc' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar PI = require( '@stdlib/constants/math/float64-pi' );\n\n\n// MAIN //\n\n/**\n* Calculates normalized Q when a is a half-integer.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} x - function parameter\n* @returns {number} upper gamma fraction\n*/\nfunction finiteHalfGammaQ( a, x ) {\n\tvar half;\n\tvar term;\n\tvar sum;\n\tvar e;\n\tvar n;\n\n\te = erfc( sqrt(x) );\n\tif ( e !== 0 && a > 1.0 ) {\n\t\tterm = exp( -x ) / sqrt( PI * x );\n\t\tterm *= x;\n\t\thalf = 0.5;\n\t\tterm /= half;\n\t\tsum = term;\n\t\tfor ( n = 2; n < a; ++n ) {\n\t\t\tterm /= n - half;\n\t\t\tterm *= x;\n\t\t\tsum += term;\n\t\t}\n\t\te += sum;\n\t}\n\treturn e;\n}\n\n\n// EXPORTS //\n\nmodule.exports = finiteHalfGammaQ;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_erf.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar setLowWord = require( '@stdlib/number/float64/base/set-low-word' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar polyvalPP = require( './polyval_pp.js' );\nvar polyvalQQ = require( './polyval_qq.js' );\nvar polyvalPA = require( './polyval_pa.js' );\nvar polyvalQA = require( './polyval_qa.js' );\nvar polyvalRA = require( './polyval_ra.js' );\nvar polyvalSA = require( './polyval_sa.js' );\nvar polyvalRB = require( './polyval_rb.js' );\nvar polyvalSB = require( './polyval_sb.js' );\n\n\n// VARIABLES //\n\nvar TINY = 1.0e-300;\n\n// 2**-56 = 1/(2**56) = 1/72057594037927940\nvar SMALL = 1.3877787807814457e-17;\n\nvar ERX = 8.45062911510467529297e-1;  // 0x3FEB0AC1, 0x60000000\n\nvar PPC = 1.28379167095512558561e-1;  // 0x3FC06EBA, 0x8214DB68\nvar QQC = 1.0;\n\nvar PAC = -2.36211856075265944077e-3; // 0xBF6359B8, 0xBEF77538\nvar QAC = 1.0;\n\nvar RAC = -9.86494403484714822705e-3; // 0xBF843412, 0x600D6435\nvar SAC = 1.0;\n\nvar RBC = -9.86494292470009928597e-3; // 0xBF843412, 0x39E86F4A\nvar SBC = 1.0;\n\n\n// MAIN //\n\n/**\n* Evaluates the complementary error function.\n*\n* ```tex\n* \\operatorname{erf}(x) = \\frac{2}{\\sqrt{\\pi}} \\int^{x}_{0} e^{-t^2}\\ \\mathrm{dt}\n* ```\n*\n* Note that\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{erfc}(x) &= 1 - \\operatorname{erf}(x) \\\\\n* \\operatorname{erf}(-x) &= -\\operatorname{erf}(x) \\\\\n* \\operatorname{erfc}(-x) &= 2 - \\operatorname{erfc}(x)\n* \\end{align*}\n* ```\n*\n* ## Method\n*\n* 1.  For \\\\(|x| \\in [0, 0.84375)\\\\),\n*\n*     ```tex\n*     \\operatorname{erf}(x) = x + x \\cdot \\operatorname{R}(x^2)\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\operatorname{erfc}(x) = \\begin{cases}\n*     1 - \\operatorname{erf}(x) & \\textrm{if}\\ x \\in (-.84375,0.25) \\\\\n*     0.5 + ((0.5-x)-x \\mathrm{R}) & \\textrm{if}\\ x \\in [0.25,0.84375)\n*     \\end{cases}\n*     ```\n*\n*     where \\\\(R = P/Q\\\\) and where \\\\(P\\\\) is an odd polynomial of degree \\\\(8\\\\) and \\\\(Q\\\\) is an odd polynomial of degree \\\\(10\\\\).\n*\n*     ```tex\n*     \\biggl| \\mathrm{R} - \\frac{\\operatorname{erf}(x)-x}{x} \\biggr| \\leq 2^{-57.90}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     The formula is derived by noting\n*\n*     ```tex\n*     \\operatorname{erf}(x) = \\frac{2}{\\sqrt{\\pi}}\\biggl(x - \\frac{x^3}{3} + \\frac{x^5}{10} - \\frac{x^7}{42} + \\ldots \\biggr)\n*     ```\n*\n*     and that\n*\n*     ```tex\n*     \\frac{2}{\\sqrt{\\pi}} = 1.128379167095512573896158903121545171688\n*     ```\n*\n*     is close to unity. The interval is chosen because the fix point of \\\\(\\operatorname{erf}(x)\\\\) is near \\\\(0.6174\\\\) (i.e., \\\\(\\operatorname{erf(x)} = x\\\\) when \\\\(x\\\\) is near \\\\(0.6174\\\\)), and, by some experiment, \\\\(0.84375\\\\) is chosen to guarantee the error is less than one ulp for \\\\(\\operatorname{erf}(x)\\\\).\n*\n*     <!-- </note> -->\n*\n* 2.  For \\\\(|x| \\in [0.84375,1.25)\\\\), let \\\\(s = |x|-1\\\\), and \\\\(c = 0.84506291151\\\\) rounded to single (\\\\(24\\\\) bits)\n*\n*     ```tex\n*     \\operatorname{erf}(x) = \\operatorname{sign}(x) \\cdot \\biggl(c + \\frac{\\operatorname{P1}(s)}{\\operatorname{Q1}(s)}\\biggr)\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\operatorname{erfc}(x) = \\begin{cases}\n*     (1-c) - \\frac{\\operatorname{P1}(s)}{\\operatorname{Q1}(s)} & \\textrm{if}\\ x > 0 \\\\\n*     1 + \\biggl(c + \\frac{\\operatorname{P1}(s)}{\\operatorname{Q1}(s)}\\biggr) & \\textrm{if}\\ x < 0\n*     \\end{cases}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\biggl|\\frac{\\mathrm{P1}}{\\mathrm{Q1}} - (\\operatorname{erf}(|x|)-c)\\biggr| \\leq 2^{-59.06}\n*     ```\n*\n*     <!-- <note> -->\n*\n*     Here, we use the Taylor series expansion at \\\\(x = 1\\\\)\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{erf}(1+s) &= \\operatorname{erf}(1) + s\\cdot \\operatorname{poly}(s) \\\\\n*     &= 0.845.. + \\frac{\\operatorname{P1}(s)}{\\operatorname{Q1}(s)}\n*     \\end{align*}\n*     ```\n*\n*     using a rational approximation to approximate\n*\n*     ```tex\n*     \\operatorname{erf}(1+s) - (c = (\\mathrm{single})0.84506291151)\n*     ```\n*\n*     <!-- </note> -->\n*\n*     Note that, for \\\\(x \\in [0.84375,1.25)\\\\), \\\\(|\\mathrm{P1}/\\mathrm{Q1}| < 0.078\\\\), where\n*\n*     -   \\\\(\\operatorname{P1}(s)\\\\) is a degree \\\\(6\\\\) polynomial in \\\\(s\\\\)\n*     -   \\\\(\\operatorname{Q1}(s)\\\\) is a degree \\\\(6\\\\) polynomial in \\\\(s\\\\)\n*\n* 3.  For \\\\(x \\in [1.25,1/0.35)\\\\),\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{erfc}(x) &= \\frac{1}{x}e^{-x^2-0.5625+(\\mathrm{R1}/\\mathrm{S1})} \\\\\n*     \\operatorname{erf}(x) &= 1 - \\operatorname{erfc}(x)\n*     \\end{align*}\n*     ```\n*\n*     where\n*\n*     -   \\\\(\\operatorname{R1}(z)\\\\) is a degree \\\\(7\\\\) polynomial in \\\\(z\\\\), where \\\\(z = 1/x^2\\\\)\n*     -   \\\\(\\operatorname{S1}(z)\\\\) is a degree \\\\(8\\\\) polynomial in \\\\(z\\\\)\n*\n* 4.  For \\\\(x \\in [1/0.35,28)\\\\),\n*\n*     ```tex\n*     \\operatorname{erfc}(x) = \\begin{cases}\n*     \\frac{1}{x} e^{-x^2-0.5625+(\\mathrm{R2}/\\mathrm{S2})} & \\textrm{if}\\ x > 0 \\\\\n*     2.0 - \\frac{1}{x} e^{-x^2-0.5625+(\\mathrm{R2}/\\mathrm{S2})} & \\textrm{if}\\ -6 < x < 0 \\\\\n*     2.0 - \\mathrm{tiny} & \\textrm{if}\\ x \\leq -6\n*     \\end{cases}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\operatorname{erf}(x) = \\begin{cases}\n*     \\operatorname{sign}(x) \\cdot (1.0 - \\operatorname{erfc}(x)) & \\textrm{if}\\ x < 6 \\\\\n*     \\operatorname{sign}(x) \\cdot (1.0 - \\mathrm{tiny}) & \\textrm{otherwise}\n*     \\end{cases}\n*     ```\n*\n*     where\n*\n*     -   \\\\(\\operatorname{R2}(z)\\\\) is a degree \\\\(6\\\\) polynomial in \\\\(z\\\\), where \\\\(z = 1/x^2\\\\)\n*     -   \\\\(\\operatorname{S2}(z)\\\\) is a degree \\\\(7\\\\) polynomial in \\\\(z\\\\)\n*\n* 5.  For \\\\(x \\in [28, \\infty)\\\\),\n*\n*     ```tex\n*     \\begin{align*}\n*     \\operatorname{erf}(x) &= \\operatorname{sign}(x) \\cdot (1 - \\mathrm{tiny}) & \\textrm{(raise inexact)}\n*     \\end{align*}\n*     ```\n*\n*     and\n*\n*     ```tex\n*     \\operatorname{erfc}(x) = \\begin{cases}\n*     \\mathrm{tiny} \\cdot \\mathrm{tiny} & \\textrm{if}\\ x > 0\\ \\textrm{(raise underflow)} \\\\\n*     2 - \\mathrm{tiny} & \\textrm{if}\\ x < 0\n*     \\end{cases}\n*     ```\n*\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{erf}(0) &= 0 \\\\\n* \\operatorname{erf}(-0) &= -0 \\\\\n* \\operatorname{erf}(\\infty) &= 1 \\\\\n* \\operatorname{erf}(-\\infty) &= -1 \\\\\n* \\operatorname{erfc}(0) &= 1 \\\\\n* \\operatorname{erfc}(\\infty) &= 0 \\\\\n* \\operatorname{erfc}(-\\infty) &= 2 \\\\\n* \\operatorname{erf}(\\mathrm{NaN}) &= \\mathrm{NaN} \\\\\n* \\operatorname{erfc}(\\mathrm{NaN}) &= \\mathrm{NaN}\n* \\end{align*}\n* ```\n*\n*\n* ## Notes\n*\n* -   To compute \\\\(\\exp(-x^2-0.5625+(\\mathrm{R}/\\mathrm{S}))\\\\), let \\\\(s\\\\) be a single precision number and \\\\(s := x\\\\); then\n*\n*     ```tex\n*     -x^2 = -s^2 + (s-x)(s+x)\n*     ```\n*\n*     and\n*\n*     ```tex\n*     e^{-x^2-0.5626+(\\mathrm{R}/\\mathrm{S})} = e^{-s^2-0.5625} e^{(s-x)(s+x)+(\\mathrm{R}/\\mathrm{S})}\n*     ```\n*\n* -   `#4` and `#5` make use of the asymptotic series\n*\n*     ```tex\n*     \\operatorname{erfc}(x) \\approx \\frac{e^{-x^2}}{x\\sqrt{\\pi}} (1 + \\operatorname{poly}(1/x^2))\n*     ```\n*\n*     We use a rational approximation to approximate\n*\n*     ```tex\n*     g(s) = f(1/x^2) = \\ln(\\operatorname{erfc}(x) \\cdot x) - x^2 + 0.5625\n*     ```\n*\n* -   The error bound for \\\\(\\mathrm{R1}/\\mathrm{S1}\\\\) is\n*\n*     ```tex\n*     |\\mathrm{R1}/\\mathrm{S1} - f(x)| < 2^{-62.57}\n*     ```\n*\n*     and for \\\\(\\mathrm{R2}/\\mathrm{S2}\\\\) is\n*\n*     ```tex\n*     |\\mathrm{R2}/\\mathrm{S2} - f(x)| < 2^{-61.52}\n*     ```\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var y = erfc( 2.0 );\n* // returns ~0.0047\n*\n* @example\n* var y = erfc( -1.0 );\n* // returns ~1.8427\n*\n* @example\n* var y = erfc( 0.0 );\n* // returns 1.0\n*\n* @example\n* var y = erfc( Infinity );\n* // returns 0.0\n*\n* @example\n* var y = erfc( -Infinity );\n* // returns 2.0\n*\n* @example\n* var y = erfc( NaN );\n* // returns NaN\n*/\nfunction erfc( x ) {\n\tvar sign;\n\tvar ax;\n\tvar z;\n\tvar r;\n\tvar s;\n\tvar y;\n\tvar p;\n\tvar q;\n\n\t// Special case: NaN\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\t// Special case: +infinity\n\tif ( x === PINF ) {\n\t\treturn 0.0;\n\t}\n\t// Special case: -infinity\n\tif ( x === NINF ) {\n\t\treturn 2.0;\n\t}\n\t// Special case: +-0\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\tif ( x < 0.0 ) {\n\t\tsign = true;\n\t\tax = -x;\n\t} else {\n\t\tsign = false;\n\t\tax = x;\n\t}\n\t// |x| < 0.84375\n\tif ( ax < 0.84375 ) {\n\t\tif ( ax < SMALL ) {\n\t\t\treturn 1.0 - x; // raise inexact\n\t\t}\n\t\tz = x * x;\n\t\tr = PPC + ( z*polyvalPP( z ) );\n\t\ts = QQC + ( z*polyvalQQ( z ) );\n\t\ty = r / s;\n\n\t\t// x < 1/4\n\t\tif ( x < 0.25 ) {\n\t\t\treturn 1.0 - ( x + (x*y) );\n\t\t}\n\t\tr = x * y;\n\t\tr += x - 0.5;\n\t\treturn 0.5 - r;\n\t}\n\t// 0.84375 <= |x| < 1.25\n\tif ( ax < 1.25 ) {\n\t\ts = ax - 1.0;\n\t\tp = PAC + ( s*polyvalPA( s ) );\n\t\tq = QAC + ( s*polyvalQA( s ) );\n\t\tif ( sign ) {\n\t\t\treturn 1.0 + ERX + (p/q);\n\t\t}\n\t\treturn 1.0 - ERX - (p/q);\n\t}\n\t// |x| < 28\n\tif ( ax < 28.0 ) {\n\t\ts = 1.0 / (ax*ax);\n\n\t\t// |x| < 1/0.35 ~ 2.857143\n\t\tif ( ax < 2.857142857142857 ) {\n\t\t\tr = RAC + ( s*polyvalRA( s ) );\n\t\t\ts = SAC + ( s*polyvalSA( s ) );\n\t\t}\n\t\t// |x| >= 1/0.35 ~ 2.857143\n\t\telse {\n\t\t\t// x < -6\n\t\t\tif ( x < -6.0 ) {\n\t\t\t\treturn 2.0 - TINY; // raise inexact\n\t\t\t}\n\t\t\tr = RBC + ( s*polyvalRB( s ) );\n\t\t\ts = SBC + ( s*polyvalSB( s ) );\n\t\t}\n\t\tz = setLowWord( ax, 0 ); // pseudo-single (20-bit) precision x\n\t\tr = exp( -(z*z) - 0.5625 ) * exp( ((z-ax)*(z+ax)) + (r/s) );\n\t\tif ( sign ) {\n\t\t\treturn 2.0 - (r/ax);\n\t\t}\n\t\treturn r/ax;\n\t}\n\tif ( sign ) {\n\t\treturn 2.0 - TINY; // raise inexact; ~2\n\t}\n\treturn TINY * TINY; // raise inexact; ~0\n}\n\n\n// EXPORTS //\n\nmodule.exports = erfc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.3250421072470015;\n\t}\n\treturn -0.3250421072470015 + (x * (-0.02848174957559851 + (x * (-0.005770270296489442 + (x * -0.000023763016656650163))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.39791722395915535;\n\t}\n\treturn 0.39791722395915535 + (x * (0.0650222499887673 + (x * (0.005081306281875766 + (x * (0.00013249473800432164 + (x * -0.000003960228278775368))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.41485611868374833;\n\t}\n\treturn 0.41485611868374833 + (x * (-0.3722078760357013 + (x * (0.31834661990116175 + (x * (-0.11089469428239668 + (x * (0.035478304325618236 + (x * -0.002166375594868791))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.10642088040084423;\n\t}\n\treturn 0.10642088040084423 + (x * (0.540397917702171 + (x * (0.07182865441419627 + (x * (0.12617121980876164 + (x * (0.01363708391202905 + (x * 0.011984499846799107))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.6938585727071818;\n\t}\n\treturn -0.6938585727071818 + (x * (-10.558626225323291 + (x * (-62.375332450326006 + (x * (-162.39666946257347 + (x * (-184.60509290671104 + (x * (-81.2874355063066 + (x * -9.814329344169145))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 19.651271667439257;\n\t}\n\treturn 19.651271667439257 + (x * (137.65775414351904 + (x * (434.56587747522923 + (x * (645.3872717332679 + (x * (429.00814002756783 + (x * (108.63500554177944 + (x * (6.570249770319282 + (x * -0.0604244152148581))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.799283237680523;\n\t}\n\treturn -0.799283237680523 + (x * (-17.757954917754752 + (x * (-160.63638485582192 + (x * (-637.5664433683896 + (x * (-1025.0951316110772 + (x * -483.5191916086514))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 30.33806074348246;\n\t}\n\treturn 30.33806074348246 + (x * (325.7925129965739 + (x * (1536.729586084437 + (x * (3199.8582195085955 + (x * (2553.0504064331644 + (x * (474.52854120695537 + (x * -22.44095244658582))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/math/float64-max-ln' );\nvar MIN_LN = require( '@stdlib/constants/math/float64-min-ln' );\n\n\n// MAIN //\n\n/**\n* Calculates the power term prefix `(z^a)(e^-z)` used in the non-normalized incomplete gammas.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} z - function parameter\n* @returns {number} power term prefix\n*/\nfunction fullIGammaPrefix( a, z ) {\n\tvar prefix;\n\tvar alz;\n\n\talz = a * ln( z );\n\tif ( z >= 1.0 ) {\n\t\tif ( ( alz < MAX_LN ) && ( -z > MIN_LN ) ) {\n\t\t\tprefix = pow( z, a ) * exp( -z );\n\t\t}\n\t\telse if ( a >= 1.0 ) {\n\t\t\tprefix = pow( z / exp(z/a), a );\n\t\t}\n\t\telse {\n\t\t\tprefix = exp( alz - z );\n\t\t}\n\t}\n\telse {\n\t\t/* eslint-disable no-lonely-if */\n\t\tif ( alz > MIN_LN ) {\n\t\t\tprefix = pow( z, a ) * exp( -z );\n\t\t}\n\t\telse if ( z/a < MAX_LN ) {\n\t\t\tprefix = pow( z / exp(z/a), a );\n\t\t} else {\n\t\t\tprefix = exp( alz - z );\n\t\t}\n\t}\n\treturn prefix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fullIGammaPrefix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\nvar erfc = require( '@stdlib/math/base/special/erfc' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar TWO_PI = require( '@stdlib/constants/math/float64-two-pi' );\nvar polyvalC0 = require( './polyval_c0.js' );\nvar polyvalC1 = require( './polyval_c1.js' );\nvar polyvalC2 = require( './polyval_c2.js' );\nvar polyvalC3 = require( './polyval_c3.js' );\nvar polyvalC4 = require( './polyval_c4.js' );\nvar polyvalC5 = require( './polyval_c5.js' );\nvar polyvalC6 = require( './polyval_c6.js' );\nvar polyvalC7 = require( './polyval_c7.js' );\nvar polyvalC8 = require( './polyval_c8.js' );\n\n\n// VARIABLES //\n\n// Pre-allocate workspace array:\nvar workspace = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Asymptotic expansions of the incomplete gamma functions when `a` is large and `x ~ a` (IEEE double precision or 10^-17).\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} x - function parameter\n* @returns {number} value of asymptotic expansion\n*/\nfunction igammaTemmeLarge( a, x ) {\n\tvar result;\n\tvar sigma;\n\tvar phi;\n\tvar y;\n\tvar z;\n\n\tsigma = ( x-a ) / a;\n\tphi = -ln( 1.0 + sigma ) + sigma;\n\ty = a * phi;\n\tz = sqrt( 2.0 * phi );\n\tif ( x < a ) {\n\t\tz = -z;\n\t}\n\tworkspace[ 0 ] = polyvalC0( z );\n\tworkspace[ 1 ] = polyvalC1( z );\n\tworkspace[ 2 ] = polyvalC2( z );\n\tworkspace[ 3 ] = polyvalC3( z );\n\tworkspace[ 4 ] = polyvalC4( z );\n\tworkspace[ 5 ] = polyvalC5( z );\n\tworkspace[ 6 ] = polyvalC6( z );\n\tworkspace[ 7 ] = polyvalC7( z );\n\tworkspace[ 8 ] = polyvalC8( z );\n\tworkspace[ 9 ] = -0.00059676129019274625;\n\tresult = evalpoly( workspace, 1.0/a );\n\tresult *= exp( -y ) / sqrt( TWO_PI * a );\n\tif ( x < a ) {\n\t\tresult = -result;\n\t}\n\tresult += erfc( sqrt(y) ) / 2.0;\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = igammaTemmeLarge;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( './evalpoly.js' );\n\n\n// MAIN //\n\n/**\n* Generates a function for evaluating a polynomial.\n*\n* ## Notes\n*\n* -   The compiled function uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: http://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @param {NumericArray} c - polynomial coefficients sorted in ascending degree\n* @returns {Function} function for evaluating a polynomial\n*\n* @example\n* var polyval = factory( [3.0,2.0,1.0] );\n*\n* var v = polyval( 10.0 ); // => 3*10^0 + 2*10^1 + 1*10^2\n* // returns 123.0\n*\n* v = polyval( 5.0 ); // => 3*5^0 + 2*5^1 + 1*5^2\n* // returns 38.0\n*/\nfunction factory( c ) {\n\tvar f;\n\tvar n;\n\tvar m;\n\tvar i;\n\n\t// Avoid exceeding the maximum stack size on V8 :(. Note that the choice of `500` was empirically determined...\n\tif ( c.length > 500 ) {\n\t\treturn polyval;\n\t}\n\t// Code generation. Start with the function definition...\n\tf = 'return function evalpoly(x){';\n\n\t// Create the function body...\n\tn = c.length;\n\n\t// If no coefficients, the function always returns 0...\n\tif ( n === 0 ) {\n\t\tf += 'return 0.0;';\n\t}\n\t// If only one coefficient, the function always returns that coefficient...\n\telse if ( n === 1 ) {\n\t\tf += 'return ' + c[ 0 ] + ';';\n\t}\n\t// If more than one coefficient, apply Horner's method...\n\telse {\n\t\t// If `x == 0`, return the first coefficient...\n\t\tf += 'if(x===0.0){return ' + c[ 0 ] + ';}';\n\n\t\t// Otherwise, evaluate the polynomial...\n\t\tf += 'return ' + c[ 0 ];\n\t\tm = n - 1;\n\t\tfor ( i = 1; i < n; i++ ) {\n\t\t\tf += '+x*';\n\t\t\tif ( i < m ) {\n\t\t\t\tf += '(';\n\t\t\t}\n\t\t\tf += c[ i ];\n\t\t}\n\t\t// Close all the parentheses...\n\t\tfor ( i = 0; i < m-1; i++ ) {\n\t\t\tf += ')';\n\t\t}\n\t\tf += ';';\n\t}\n\t// Close the function:\n\tf += '}';\n\n\t// Add a source directive for debugging:\n\tf += '//# sourceURL=evalpoly.factory.js';\n\n\t// Create the function in the global scope:\n\treturn ( new Function( f ) )(); // eslint-disable-line no-new-func\n\n\t/*\n\t*    function evalpoly( x ) {\n\t*        if ( x === 0.0 ) {\n\t*            return c[ 0 ];\n\t*        }\n\t*        return c[0]+x*(c[1]+x*(c[2]+x*(c[3]+...+x*(c[n-2]+x*c[n-1]))));\n\t*    }\n\t*/\n\n\t/**\n\t* Evaluates a polynomial.\n\t*\n\t* @private\n\t* @param {number} x - value at which to evaluate a polynomial\n\t* @returns {number} evaluated polynomial\n\t*/\n\tfunction polyval( x ) {\n\t\treturn evalpoly( c, x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.3333333333333333;\n\t}\n\treturn -0.3333333333333333 + (x * (0.08333333333333333 + (x * (-0.014814814814814815 + (x * (0.0011574074074074073 + (x * (0.0003527336860670194 + (x * (-0.0001787551440329218 + (x * (0.00003919263178522438 + (x * (-0.0000021854485106799924 + (x * (-0.00000185406221071516 + (x * (8.296711340953087e-7 + (x * (-1.7665952736826078e-7 + (x * (6.707853543401498e-9 + (x * (1.0261809784240309e-8 + (x * (-4.382036018453353e-9 + (x * 9.14769958223679e-10))))))))))))))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.001851851851851852;\n\t}\n\treturn -0.001851851851851852 + (x * (-0.003472222222222222 + (x * (0.0026455026455026454 + (x * (-0.0009902263374485596 + (x * (0.00020576131687242798 + (x * (-4.018775720164609e-7 + (x * (-0.000018098550334489977 + (x * (0.00000764916091608111 + (x * (-0.0000016120900894563446 + (x * (4.647127802807434e-9 + (x * (1.378633446915721e-7 + (x * (-5.752545603517705e-8 + (x * 1.1951628599778148e-8))))))))))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.004133597883597883;\n\t}\n\treturn 0.004133597883597883 + (x * (-0.0026813271604938273 + (x * (0.0007716049382716049 + (x * (0.0000020093878600823047 + (x * (-0.00010736653226365161 + (x * (0.000052923448829120125 + (x * (-0.000012760635188618728 + (x * (3.423578734096138e-8 + (x * (0.0000013721957309062932 + (x * (-6.298992138380055e-7 + (x * 1.4280614206064242e-7))))))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0006494341563786008;\n\t}\n\treturn 0.0006494341563786008 + (x * (0.00022947209362139917 + (x * (-0.0004691894943952557 + (x * (0.00026772063206283885 + (x * (-0.00007561801671883977 + (x * (-2.396505113867297e-7 + (x * (0.000011082654115347302 + (x * (-0.0000056749528269915965 + (x * 0.0000014230900732435883))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.0008618882909167117;\n\t}\n\treturn -0.0008618882909167117 + (x * (0.0007840392217200666 + (x * (-0.0002990724803031902 + (x * (-0.0000014638452578843418 + (x * (0.00006641498215465122 + (x * (-0.00003968365047179435 + (x * 0.000011375726970678419))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.00033679855336635813;\n\t}\n\treturn -0.00033679855336635813 + (x * (-0.00006972813758365858 + (x * (0.0002772753244959392 + (x * (-0.00019932570516188847 + (x * (0.00006797780477937208 + (x * (1.419062920643967e-7 + (x * (-0.000013594048189768693 + (x * (0.000008018470256334202 + (x * -0.000002291481176508095))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0005313079364639922;\n\t}\n\treturn 0.0005313079364639922 + (x * (-0.0005921664373536939 + (x * (0.0002708782096718045 + (x * (7.902353232660328e-7 + (x * (-0.00008153969367561969 + (x * (0.0000561168275310625 + (x * -0.000018329116582843375))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.00034436760689237765;\n\t}\n\treturn 0.00034436760689237765 + (x * (0.00005171790908260592 + (x * (-0.00033493161081142234 + (x * (0.0002812695154763237 + (x * -0.00010976582244684731))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -0.0006526239185953094;\n\t}\n\treturn -0.0006526239185953094 + (x * (0.0008394987206720873 + (x * -0.000438297098541721))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sumSeries = require( '@stdlib/math/base/tools/sum-series' );\nvar lowerIncompleteGammaSeries = require( './lower_incomplete_gamma_series' );\n\n\n// MAIN //\n\n/**\n* Sums elements of the series expansion of the lower incomplete gamma function.\n*\n* ## Method\n*\n* -   Multiply result by `((z^a) * (e^-z) / a)` to get the full lower incomplete integral.\n* -   Divide by `tgamma(a)` to get the normalized value.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} z - function parameter\n* @param {number} initialValue - initial value of the resulting sum\n* @returns {number} sum of terms of lower gamma series\n*/\nfunction lowerGammaSeries( a, z, initialValue ) {\n\tvar result;\n\tvar s;\n\n\tinitialValue = initialValue || 0.0;\n\ts = lowerIncompleteGammaSeries( a, z );\n\tresult = sumSeries( s, {\n\t\t'initialValue': initialValue\n\t});\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = lowerGammaSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evil = require( '@stdlib/utils/eval' );\n\n\n// MAIN //\n\n/**\n* Tests for native `function*()` support.\n*\n* @returns {boolean} boolean indicating if an environment has native `function*()` support\n*\n* @example\n* var bool = hasGeneratorSupport();\n* // returns <boolean>\n*/\nfunction hasGeneratorSupport() {\n\tvar bool;\n\ttry {\n\t\tevil( '\"use strict\"; (function* () {})' );\n\t\tbool = true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasGeneratorSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Alias for `eval` global.\n*\n* @module @stdlib/utils/eval\n*\n* @example\n* var evil = require( '@stdlib/utils/eval' );\n*\n* var v = evil( '5*4*3*2*1' );\n* // returns 120\n*/\n\n// MODULES //\n\nvar evil = eval; // eslint-disable-line no-eval\n\n\n// EXPORTS //\n\nmodule.exports = evil;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar EPS = require( '@stdlib/constants/math/float64-eps' );\n\n\n// VARIABLES //\n\nvar MAX_TERMS = 1000000;\n\n\n// MAIN //\n\n/**\n* Sum the elements of the series given by the supplied function.\n*\n* @param {Function} generator - series function\n* @param {Object} [options] - function options\n* @param {PositiveInteger} [options.maxTerms=1000000] - maximum number of terms to be added\n* @param {PositiveNumber} [options.tolerance=2.22e-16] - further terms are only added as long as the next term is greater than current term times the tolerance\n* @param {number} [options.initialValue=0] - initial value of the resulting sum\n* @returns {number} sum of all series terms\n*\n* @example\n* var gen = geometricSeriesGenerator( 0.9 );\n* var out = sumSeries( gen );\n* // returns 10.0\n*\n* function* geometricSeriesGenerator( x ) {\n*     var exponent = 0;\n*     while ( true ) {\n*         yield Math.pow( x, exponent );\n*         exponent += 1;\n*     }\n* }\n*/\nfunction sumSeries( generator, options ) {\n\tvar isgenerator;\n\tvar tolerance;\n\tvar nextTerm;\n\tvar counter;\n\tvar result;\n\tvar opts;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t}\n\ttolerance = opts.tolerance || EPS;\n\tcounter = opts.maxTerms || MAX_TERMS;\n\tresult = opts.initialValue || 0;\n\n\tisgenerator = typeof generator.next === 'function';\n\tif ( isgenerator === true ) {\n\t\t// Case A: Iterate over generator object created by a generator function...\n\t\tfor ( nextTerm of generator ) {\n\t\t\tresult += nextTerm;\n\t\t\tif (\n\t\t\t\tabs(tolerance * result) >= abs(nextTerm) ||\n\t\t\t\t--counter === 0 // eslint-disable-line no-plusplus\n\t\t\t) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Case B: Repeatedly call function...\n\t\tdo {\n\t\t\tnextTerm = generator();\n\t\t\tresult += nextTerm;\n\t\t}\n\t\twhile ( ( abs(tolerance * result) < abs(nextTerm) ) && --counter ); // eslint-disable-line no-plusplus\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sumSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar EPS = require( '@stdlib/constants/math/float64-eps' );\n\n\n// VARIABLES //\n\nvar MAX_TERMS = 1000000;\n\n\n// MAIN //\n\n/**\n* Sum the elements of the series given by the supplied function.\n*\n* @param {Function} generator - series function\n* @param {Object} [options] - function options\n* @param {PositiveInteger} [options.maxTerms=1000000] - maximum number of terms to be added\n* @param {PositiveNumber} [options.tolerance=2.22e-16] - further terms are only added as long as the next term is greater than current term times the tolerance\n* @param {number} [options.initialValue=0] - initial value of the resulting sum\n* @returns {number} sum of all series terms\n*\n* @example\n* var gen = geometricSeriesClosure( 0.9 )\n* var out = sumSeries( gen );\n* // returns 10.0\n*\n* function geometricSeriesClosure( x ) {\n*     var exponent = -1;\n*     return function() {\n*         exponent += 1;\n*         return Math.pow( x, exponent );\n*     };\n* }\n*/\nfunction sumSeries( generator, options ) {\n\tvar tolerance;\n\tvar nextTerm;\n\tvar counter;\n\tvar result;\n\tvar opts;\n\n\topts = {};\n\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t}\n\ttolerance = opts.tolerance || EPS;\n\tcounter = opts.maxTerms || MAX_TERMS;\n\tresult = opts.initialValue || 0;\n\n\t// Repeatedly call function...\n\tdo {\n\t\tnextTerm = generator();\n\t\tresult += nextTerm;\n\t}\n\twhile ( ( abs(tolerance * result) < abs(nextTerm) ) && --counter ); // eslint-disable-line no-plusplus\n\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sumSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Creates a function to evaluate a series expansion of the incomplete gamma function.\n*\n* @private\n* @param {number} a1 - function parameter\n* @param {number} z1 - function parameter\n* @returns {Function} series function\n*/\nfunction lowerIncompleteGammaSeries( a1, z1 ) {\n\tvar result = 1.0;\n\tvar a = a1;\n\tvar z = z1;\n\treturn next;\n\n\t/**\n\t* Calculate the next term of the series.\n\t*\n\t* @private\n\t* @returns {number} series expansion term\n\t*/\n\tfunction next() {\n\t\tvar r = result;\n\t\ta += 1.0;\n\t\tresult *= z/a;\n\t\treturn r;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = lowerIncompleteGammaSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006-7, 2013-14.\n* Copyright Paul A. Bristow 2007, 2013-14.\n* Copyright Nikhar Agrawal 2013-14.\n* Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSumExpGScaled = require( '@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled' );\nvar gammaln = require( '@stdlib/math/base/special/gammaln' );\nvar gamma = require( '@stdlib/math/base/special/gamma' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/math/float64-max-ln' );\nvar MIN_LN = require( '@stdlib/constants/math/float64-min-ln' );\nvar G = require( '@stdlib/constants/math/float64-gamma-lanczos-g' );\nvar E = require( '@stdlib/constants/math/float64-e' );\n\n\n// MAIN //\n\n/**\n* Computes `(z^a)*(e^-z) / gamma(a)`.\n*\n* @private\n* @param {number} a - input value\n* @param {number} z - input value\n* @returns {number} function value\n*/\nfunction regularisedGammaPrefix( a, z ) {\n\tvar prefix;\n\tvar amza;\n\tvar agh;\n\tvar alz;\n\tvar amz;\n\tvar sq;\n\tvar d;\n\n\tagh = a + G - 0.5;\n\td = ( (z - a) - G + 0.5 ) / agh;\n\tif ( a < 1.0 ) {\n\t\t// Treat a < 1 as a special case because our Lanczos approximations are optimized against the factorials with a > 1, and for high precision types very small values of `a` can give rather erroneous results for gamma:\n\t\tif ( z <= MIN_LN ) {\n\t\t\t// Use logs, so should be free of cancellation errors:\n\t\t\treturn exp( ( a * ln(z) ) - z - gammaln( a ) );\n\t\t}\n\t\t// No danger of overflow as gamma(a) < 1/a for small a, so direct calculation:\n\t\treturn pow( z, a ) * exp( -z ) / gamma( a );\n\t}\n\tif ( abs(d*d*a) <= 100.0 && a > 150.0 ) {\n\t\t// Special case for large a and a ~ z:\n\t\tprefix = ( a * ( log1p( d ) - d ) ) + ( z * ( 0.5-G ) / agh );\n\t\tprefix = exp( prefix );\n\t}\n\telse {\n\t\t// General case. Direct computation is most accurate, but use various fallbacks for different parts of the problem domain:\n\t\talz = a * ln(z / agh);\n\t\tamz = a - z;\n\t\tif (\n\t\t\tmin(alz, amz) <= MIN_LN ||\n\t\t\tmax(alz, amz) >= MAX_LN\n\t\t) {\n\t\t\tamza = amz / a;\n\t\t\tif (\n\t\t\t\tmin(alz, amz)/2.0 > MIN_LN &&\n\t\t\t\tmax(alz, amz)/2.0 < MAX_LN\n\t\t\t) {\n\t\t\t\t// Compute square root of the result and then square it:\n\t\t\t\tsq = pow( z / agh, a / 2.0 ) * exp( amz / 2.0 );\n\t\t\t\tprefix = sq * sq;\n\t\t\t}\n\t\t\telse if (\n\t\t\t\tmin(alz, amz)/4.0 > MIN_LN &&\n\t\t\t\tmax(alz, amz)/4.0 < MAX_LN &&\n\t\t\t\tz > a\n\t\t\t) {\n\t\t\t\t// Compute the 4th root of the result then square it twice:\n\t\t\t\tsq = pow( z / agh, a / 4.0 ) * exp( amz / 4.0 );\n\t\t\t\tprefix = sq * sq;\n\t\t\t\tprefix *= prefix;\n\t\t\t}\n\t\t\telse if (\n\t\t\t\tamza > MIN_LN &&\n\t\t\t\tamza < MAX_LN\n\t\t\t) {\n\t\t\t\tprefix = pow( (z * exp(amza)) / agh, a );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprefix = exp( alz + amz );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprefix = pow( z / agh, a ) * exp( amz );\n\t\t}\n\t}\n\tprefix *= sqrt( agh / E ) / lanczosSumExpGScaled( a );\n\treturn prefix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = regularisedGammaPrefix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/lanczos.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Calculates the Lanczos sum for the approximation of the gamma function (scaled by `exp(-g)`, where `g = 10.900511`.\n*\n* @name gammaLanczosSumExpGScaled\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} Lanczos sum approximation\n*\n* @example\n* var v = gammaLanczosSumExpGScaled( 4.0 );\n* // returns ~0.018\n*\n* @example\n* var v = gammaLanczosSumExpGScaled( -1.5 );\n* // returns ~25.337\n*\n* @example\n* var v = gammaLanczosSumExpGScaled( -0.5 );\n* // returns ~-12.911\n*\n* @example\n* var v = gammaLanczosSumExpGScaled( 0.5 );\n* // returns ~1.772\n*\n* @example\n* var v = gammaLanczosSumExpGScaled( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = gammaLanczosSumExpGScaled( NaN );\n* // returns NaN\n*/\nvar gammaLanczosSumExpGScaled = require( './rational_pq.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaLanczosSumExpGScaled;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn Infinity;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 709811.662581658 + (x * (679979.8474157227 + (x * (293136.7857211597 + (x * (74887.54032914672 + (x * (12555.290582413863 + (x * (1443.4299244417066 + (x * (115.24194596137347 + (x * (6.309239205732627 + (x * (0.22668404630224365 + (x * (0.004826466289237662 + (x * 0.00004624429436045379))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (362880.0 + (x * (1026576.0 + (x * (1172700.0 + (x * (723680.0 + (x * (269325.0 + (x * (63273.0 + (x * (9450.0 + (x * (870.0 + (x * (45.0 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.00004624429436045379 + (x * (0.004826466289237662 + (x * (0.22668404630224365 + (x * (6.309239205732627 + (x * (115.24194596137347 + (x * (1443.4299244417066 + (x * (12555.290582413863 + (x * (74887.54032914672 + (x * (293136.7857211597 + (x * (679979.8474157227 + (x * 709811.662581658))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (45.0 + (x * (870.0 + (x * (9450.0 + (x * (63273.0 + (x * (269325.0 + (x * (723680.0 + (x * (1172700.0 + (x * (1026576.0 + (x * (362880.0 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar powm1 = require( '@stdlib/math/base/special/powm1' );\nvar sumSeries = require( '@stdlib/math/base/tools/sum-series' );\nvar gamma1pm1 = require( '@stdlib/math/base/special/gamma1pm1' );\nvar smallGamma2Series = require( './small_gamma2_series.js' );\n\n\n// MAIN //\n\n/**\n* Compute the full upper fraction (Q) when `a` is very small.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} x - function parameter\n* @param {boolean} invert - boolean indicating if the upper tail of the incomplete gamma function should be evaluated\n* @returns {Array} full upper fraction (Q) and pgam\n*/\nfunction tgammaSmallUpperPart( a, x, invert ) {\n\tvar initialValue;\n\tvar result;\n\tvar pgam;\n\tvar p;\n\tvar s;\n\n\tresult = gamma1pm1( a );\n\tpgam = ( result + 1.0 ) / a;\n\tp = powm1( x, a );\n\tresult -= p;\n\tresult /= a;\n\ts = smallGamma2Series( a, x );\n\tp += 1.0;\n\tinitialValue = ( invert ) ? pgam : 0.0;\n\tresult = -p * sumSeries( s, {\n\t\t'initialValue': (initialValue - result) / p\n\t});\n\tif ( invert ) {\n\t\tresult = -result;\n\t}\n\treturn [ result, pgam ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = tgammaSmallUpperPart;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate `bˣ - 1`.\n*\n* @module @stdlib/math/base/special/powm1\n*\n* @example\n* var powm1 = require( '@stdlib/math/base/special/powm1' );\n*\n* var y = powm1( 2.0, 3.0 );\n* // returns 7.0\n*\n* y = powm1( 4.0, 0.5 );\n* // returns 1.0\n*\n* y = powm1( 0.0, 100.0 );\n* // returns -1.0\n*\n* y = powm1( 100.0, 0.0 );\n* // returns 0.0\n*\n* y = powm1( 0.0, 0.0 );\n* // returns 0.0\n*\n* y = powm1( 3.141592653589793, 5.0 );\n* // returns ~305.0197\n*\n* y = powm1( NaN, 3.0 );\n* // returns NaN\n*\n* y = powm1( 5.0, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar powm1 = require( './powm1.js' );\n\n\n// EXPORTS //\n\nmodule.exports = powm1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_60_0/boost/math/special_functions/powm1.hpp}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar expm1 = require( '@stdlib/math/base/special/expm1' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar trunc = require( '@stdlib/math/base/special/trunc' );\n\n\n// MAIN //\n\n/**\n* Evaluates `bˣ - 1`.\n*\n* @param {number} b - base\n* @param {number} x - exponent\n* @returns {number} function value\n*\n* @example\n* var y = powm1( 2.0, 3.0 );\n* // returns 7.0\n*\n* @example\n* var y = powm1( 4.0, 0.5 );\n* // returns 1.0\n*\n* @example\n* var y = powm1( 0.0, 100.0 );\n* // returns -1.0\n*\n* @example\n* var y = powm1( 100.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = powm1( 0.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = powm1( 3.141592653589793, 5.0 );\n* // returns ~305.0197\n*\n* @example\n* var y = powm1( NaN, 3.0 );\n* // returns NaN\n*\n* @example\n* var y = powm1( 5.0, NaN );\n* // returns NaN\n*/\nfunction powm1( b, x ) {\n\tvar y;\n\tif (\n\t\tisnan( b ) ||\n\t\tisnan( x )\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\t// Any number raised to zero (including 0) is always 1 => b^0 - 1 = 0\n\t\treturn 0.0;\n\t}\n\tif ( b === 0.0 ) {\n\t\t// Zero raised to any number (except 0) is always zero => 0^x - 1 = -1\n\t\treturn -1.0;\n\t}\n\tif ( b < 0.0 && x%2.0 === 0 ) {\n\t\t// If `x` is even, recognize that `(-b)**x == (b)**x`...\n\t\tb = -b;\n\t}\n\tif ( b > 0.0 ) {\n\t\tif (\n\t\t\tabs( x*(b-1.0) ) < 0.5 ||\n\t\t\tabs( x ) < 0.2\n\t\t) {\n\t\t\t// No good/quick approximation for ln(b)*x, so we have to evaluate...\n\t\t\ty = ln( b ) * x;\n\t\t\tif ( y < 0.5 ) {\n\t\t\t\treturn expm1( y );\n\t\t\t}\n\t\t}\n\t} else if ( trunc( x ) !== x ) {\n\t\t// Exponentiation would yield a complex result...\n\t\treturn NaN;\n\t}\n\treturn pow( b, x ) - 1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = powm1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute `gamma(x+1) - 1` without cancellation errors.\n*\n* @module @stdlib/math/base/special/gamma1pm1\n*\n* @example\n* var gamma1pm1 = require( '@stdlib/math/base/special/gamma1pm1' );\n*\n* var v = gamma1pm1( 0.2 );\n* // returns ~-0.082\n*\n* v = gamma1pm1( -5.3 );\n* // returns ~-1.102\n*\n* v = gamma1pm1( 0.0 );\n* // returns 0.0\n*\n* v = gamma1pm1( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gamma1pm1 = require( './gamma1pm1.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gamma1pm1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006-7, 2013-14.\n* (C) Copyright Paul A. Bristow 2007, 2013-14.\n* (C) Copyright Nikhar Agrawal 2013-14.\n* (C) Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gamma = require( '@stdlib/math/base/special/gamma' );\nvar expm1 = require( '@stdlib/math/base/special/expm1' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar lgammaSmallImp = require( './lgamma_small_imp.js' );\n\n\n// MAIN //\n\n/**\n* Computes `gamma(x+1) - 1`.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = gammap1m1( 0.2 );\n* // returns ~-0.082\n*\n* @example\n* var v = gammap1m1( -9.2 );\n* // returns ~-1.0\n*\n* @example\n* var v = gammap1m1( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = gammap1m1( -3.0 );\n* // returns NaN\n*\n* @example\n* var v = gammap1m1( NaN );\n* // returns NaN\n*/\nfunction gammap1m1( x ) {\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x < 0.0 ) {\n\t\tif ( x < -0.5 ) {\n\t\t\t// Best method is simply to subtract 1 from gamma:\n\t\t\treturn gamma( 1.0+x ) - 1.0;\n\t\t}\n\t\t// Use expm1 on the logarithm of gamma:\n\t\treturn expm1( -log1p( x ) + lgammaSmallImp( x+2.0, x+1.0, x ) );\n\t}\n\tif ( x < 2.0 ) {\n\t\t// Use expm1 on the logarithm of gamma:\n\t\treturn expm1( lgammaSmallImp( x+1.0, x, x-1.0 ) );\n\t}\n\t// Best method is simply to subtract 1 from gamma:\n\treturn gamma( 1.0+x ) - 1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammap1m1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/detail/lgamma_small.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006-7, 2013-14.\n* (C) Copyright Paul A. Bristow 2007, 2013-14.\n* (C) Copyright Nikhar Agrawal 2013-14.\n* (C) Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar EPS = require( '@stdlib/constants/math/float64-eps' );\nvar rateval1 = require( './rational_p1q1.js' );\nvar rateval2 = require( './rational_p2q2.js' );\nvar rateval3 = require( './rational_p3q3.js' );\n\n\n// VARIABLES //\n\nvar Y1 = 0.158963680267333984375;\nvar Y2 = 0.52815341949462890625;\nvar Y3 = 0.452017307281494140625;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the gamma function for small arguments.\n*\n* ## Method\n*\n* 1.  For \\\\( z > 2 \\\\), begin by performing argument reduction until \\\\( z \\\\) is in \\\\(\\[2,3)\\\\). Use the following form:\n*\n*     ```tex\n*     \\operatorname{gammaln}(z) = (z-2)(z+1)(Y + R(z-2))\n*     ```\n*\n*     where \\\\( R(z-2) \\\\) is a rational approximation optimized for low absolute error. As long as the absolute error is small compared to the constant \\\\( Y \\\\), then any rounding error in the computation will get wiped out.\n*\n* 2.  If \\\\( z < 1 \\\\), use recurrence to shift to \\\\( z \\\\) in the interval \\\\(\\[1,2\\]\\\\). Then, use one of two approximations: one for \\\\( z \\\\) in \\\\(\\[1,1.5\\]\\\\) and one for \\\\( z \\\\) in \\\\(\\[1.5,2\\]\\\\):\n*\n*     -   For \\(( z \\\\) in \\\\(\\[1,1.5\\]\\\\), use\n*\n*         ```tex\n*         \\operatorname{gammaln}(z) = (z-1)(z-2)(Y + R(z-1))\n*         ```\n*\n*         where \\\\( R(z-1) \\\\) is a rational approximation optimized for low absolute error. As long as the absolute error is small compared to the constant \\\\( Y \\\\), then any rounding error in the computation will get wiped out.\n*\n*     -   For \\\\( z \\\\) in \\\\(\\[1.5,2\\]\\\\), use\n*\n*         ```tex\n*         \\operatorname{gammaln}(z) = (2-z)(1-z)(Y + R(2-z))\n*         ```\n*\n*         where \\\\( R(2-z) \\\\) is a rational approximation optimized for low absolute error. As long as the absolute error is small compared to the constant \\\\( Y \\\\), then any rounding error in the computation will get wiped out.\n*\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | function | peak         | maximum deviation |\n*     |:--------:|:------------:|:-----------------:|\n*     | R(Z-2)   | 4.231e-18    | 5.900e-24         |\n*     | R(Z-1)   | 1.230011e-17 | 3.139e-021        |\n*     | R(2-Z)   | 1.797565e-17 | 2.151e-021        |\n*\n*\n* @private\n* @param {number} z - input value\n* @param {number} zm1 - `z` minus one\n* @param {number} zm2 - `z` minus two\n* @returns {number} function value\n*/\nfunction lgammaSmallImp( z, zm1, zm2 ) {\n\tvar prefix;\n\tvar result;\n\tvar r;\n\tvar R;\n\n\tif ( z < EPS ) {\n\t\treturn -ln( z );\n\t}\n\tif ( zm1 === 0.0 || zm2 === 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tresult = 0.0;\n\tif ( z > 2.0 ) {\n\t\tif ( z >= 3.0 ) {\n\t\t\tdo {\n\t\t\t\tz -= 1.0;\n\t\t\t\tzm2 -= 1.0;\n\t\t\t\tresult += ln(z);\n\t\t\t} while ( z >= 3.0 );\n\t\t\tzm2 = z - 2.0;\n\t\t}\n\t\tr = zm2 * ( z+1.0 );\n\t\tR = rateval1( zm2 );\n\t\tresult += ( r*Y1 ) + ( r*R );\n\t\treturn result;\n\t}\n\tif ( z < 1.0 ) {\n\t\tresult += -ln(z);\n\t\tzm2 = zm1;\n\t\tzm1 = z;\n\t\tz += 1.0;\n\t}\n\tif ( z <= 1.5 ) {\n\t\tr = rateval2( zm1 );\n\t\tprefix = zm1 * zm2;\n\t\tresult += ( prefix*Y2 ) + ( prefix*r );\n\t\treturn result;\n\t}\n\t// Case: 1.5 < z <= 2\n\tr = zm2 * zm1;\n\tR = rateval3( -zm2 );\n\tresult += ( r*Y3 ) + ( r*R );\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = lgammaSmallImp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.01803556856784494;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.01803556856784494 + (x * (0.02512664961998968 + (x * (0.049410315156753225 + (x * (0.0172491608709614 + (x * (-0.0002594535632054381 + (x * (-0.0005410098692152044 + (x * (-0.00003245886498259485 + (x * 0.0))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (1.962029871977952 + (x * (1.4801966942423133 + (x * (0.5413914320717209 + (x * (0.09885042511280101 + (x * (0.008213096746488934 + (x * (0.00022493629192211576 + (x * -2.2335276320861708e-7))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (-0.00003245886498259485 + (x * (-0.0005410098692152044 + (x * (-0.0002594535632054381 + (x * (0.0172491608709614 + (x * (0.049410315156753225 + (x * (0.02512664961998968 + (x * -0.01803556856784494))))))))))))); // eslint-disable-line max-len\n\t\ts2 = -2.2335276320861708e-7 + (x * (0.00022493629192211576 + (x * (0.008213096746488934 + (x * (0.09885042511280101 + (x * (0.5413914320717209 + (x * (1.4801966942423133 + (x * (1.962029871977952 + (x * 1.0))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.04906224540690395;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.04906224540690395 + (x * (-0.09691175301595212 + (x * (-0.4149833583594954 + (x * (-0.4065671242119384 + (x * (-0.1584135863906922 + (x * (-0.024014982064857155 + (x * -0.0010034668769627955))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (3.0234982984646304 + (x * (3.4873958536072385 + (x * (1.9141558827442668 + (x * (0.5071377386143635 + (x * (0.05770397226904519 + (x * 0.001957681026011072))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -0.0010034668769627955 + (x * (-0.024014982064857155 + (x * (-0.1584135863906922 + (x * (-0.4065671242119384 + (x * (-0.4149833583594954 + (x * (-0.09691175301595212 + (x * 0.04906224540690395))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.001957681026011072 + (x * (0.05770397226904519 + (x * (0.5071377386143635 + (x * (1.9141558827442668 + (x * (3.4873958536072385 + (x * (3.0234982984646304 + (x * 1.0))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.029232972183027003;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.029232972183027003 + (x * (0.14421626775719232 + (x * (-0.14244039073863127 + (x * (0.05428096940550536 + (x * (-0.008505359768683364 + (x * (0.0004311713426792973 + (x * 0.0))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (-1.5016935605448505 + (x * (0.846973248876495 + (x * (-0.22009515181499575 + (x * (0.02558279715597587 + (x * (-0.0010066679553914337 + (x * -8.271935218912905e-7))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (0.0004311713426792973 + (x * (-0.008505359768683364 + (x * (0.05428096940550536 + (x * (-0.14244039073863127 + (x * (0.14421626775719232 + (x * -0.029232972183027003))))))))))); // eslint-disable-line max-len\n\t\ts2 = -8.271935218912905e-7 + (x * (-0.0010066679553914337 + (x * (0.02558279715597587 + (x * (-0.22009515181499575 + (x * (0.846973248876495 + (x * (-1.5016935605448505 + (x * 1.0))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n/**\n* Series representation for upper fraction when `z` is small.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} x - function parameter\n* @returns {Function} series function\n*/\nfunction smallGamma2Series( a, x ) {\n\tvar result;\n\tvar apn;\n\tvar n;\n\tvar r;\n\n\tresult = -x;\n\tx = -x;\n\tapn = a + 1.0;\n\tn = 1;\n\treturn next;\n\n\t/**\n\t* Calculate the next term of the series.\n\t*\n\t* @private\n\t* @returns {number} series expansion term\n\t*/\n\tfunction next() {\n\t\tr = result / apn;\n\t\tresult *= x;\n\t\tn += 1;\n\t\tresult /= n;\n\t\tapn += 1.0;\n\t\treturn r;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = smallGamma2Series;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar continuedFraction = require( '@stdlib/math/base/tools/continued-fraction' );\nvar upperIncompleteGammaFract = require( './upper_incomplete_gamma_fract' );\n\n\n// MAIN //\n\n/**\n* Evaluate the lower incomplete gamma integral via a series expansion and divide by `gamma(z)` to normalize.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} z - function parameter\n* @returns {number} function value\n*/\nfunction upperGammaFraction( a, z ) {\n\tvar f = upperIncompleteGammaFract( a, z );\n\treturn 1.0 / ( z - a + 1.0 + continuedFraction( f ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = upperGammaFraction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar FLOAT32_SMALLEST_NORMAL = require( '@stdlib/constants/math/float32-smallest-normal' );\nvar EPS = require( '@stdlib/constants/math/float64-eps' );\n\n\n// VARIABLES //\n\nvar MAX_ITER = 1000000;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates a continued fraction expansion.\n*\n* ```text\n*           a1\n*      ---------------\n*      b1 +     a2\n*           ----------\n*            b2 +   a3\n*                -----\n*                b3 + ...\n* ```\n*\n* @private\n* @param {Function} gen - function giving terms of continued fraction expansion\n* @param {PositiveNumber} factor - further terms are only added as long as factor*result is smaller than the next term\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} evaluated expansion\n*/\nfunction continuedFractionA( gen, factor, maxIter ) {\n\tvar isgenerator;\n\tvar delta;\n\tvar a0;\n\tvar f;\n\tvar C;\n\tvar D;\n\tvar v;\n\n\tisgenerator = typeof gen.next === 'function';\n\tv = ( isgenerator ) ? gen.next().value : gen();\n\tf = v[ 1 ];\n\ta0 = v[ 0 ];\n\tif ( f === 0.0 ) {\n\t\tf = FLOAT32_SMALLEST_NORMAL;\n\t}\n\tC = f;\n\tD = 0;\n\tif ( isgenerator === true ) {\n\t\tdo {\n\t\t\tv = gen.next().value;\n\t\t\tif ( v ) {\n\t\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\t\tif ( D === 0.0 ) {\n\t\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\t\tif ( C === 0.0 ) {\n\t\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tD = 1.0 / D;\n\t\t\t\tdelta = C * D;\n\t\t\t\tf *= delta;\n\t\t\t}\n\t\t} while ( ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\t} else {\n\t\tdo {\n\t\t\tv = gen();\n\t\t\tif ( v ) {\n\t\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\t\tif ( D === 0.0 ) {\n\t\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\t\tif ( C === 0.0 ) {\n\t\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tD = 1.0 / D;\n\t\t\t\tdelta = C * D;\n\t\t\t\tf *= delta;\n\t\t\t}\n\t\t} while ( v && ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\t}\n\treturn a0 / f;\n}\n\n/**\n* Evaluates a continued fraction expansion.\n*\n* ```text\n*      b0 +    a1\n*      ---------------\n*      b1 +     a2\n*           ----------\n*           b2 +   a3\n*                -----\n*                b3 + ...\n* ```\n*\n* @private\n* @param {Function} gen - function giving terms of continued fraction expansion\n* @param {PositiveNumber} factor - further terms are only added as long as factor*result is smaller than the next term\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} evaluated expansion\n*/\nfunction continuedFractionB( gen, factor, maxIter ) {\n\tvar isgenerator;\n\tvar delta;\n\tvar f;\n\tvar C;\n\tvar D;\n\tvar v;\n\n\tisgenerator = typeof gen.next === 'function';\n\tv = ( isgenerator ) ? gen.next().value : gen();\n\tf = v[ 1 ];\n\tif ( f === 0.0 ) {\n\t\tf = FLOAT32_SMALLEST_NORMAL;\n\t}\n\tC = f;\n\tD = 0.0;\n\tif ( isgenerator === true ) {\n\t\tdo {\n\t\t\tv = gen.next().value;\n\t\t\tif ( v ) {\n\t\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\t\tif ( D === 0.0 ) {\n\t\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\t\tif ( C === 0.0 ) {\n\t\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tD = 1.0 / D;\n\t\t\t\tdelta = C * D;\n\t\t\t\tf *= delta;\n\t\t\t}\n\t\t} while ( v && ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\t} else {\n\t\tdo {\n\t\t\tv = gen();\n\t\t\tif ( v ) {\n\t\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\t\tif ( D === 0.0 ) {\n\t\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\t\tif ( C === 0.0 ) {\n\t\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t\t}\n\t\t\t\tD = 1.0 / D;\n\t\t\t\tdelta = C * D;\n\t\t\t\tf *= delta;\n\t\t\t}\n\t\t} while ( v && ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\t}\n\treturn f;\n}\n\n\n// MAIN //\n\n/**\n* Evaluates the continued fraction approximation for the supplied series generator using the modified Lentz algorithm.\n*\n* ## References\n*\n* -   Lentz, William J. 1976. \"Generating bessel functions in Mie scattering calculations using continued fractions.\" _Applied Optics_ 15 (3): 668–71. doi:[10.1364/AO.15.000668](https://doi.org/10.1364/AO.15.000668).\n*\n* @param {Function} generator - function returning terms of continued fraction expansion\n* @param {Object} [options] - function options\n* @param {PositiveInteger} [options.maxIter=1000] - maximum number of iterations\n* @param {PositiveNumber} [options.tolerance=2.22e-16] - further terms are only added as long as the next term is greater than current term times the tolerance\n* @param {boolean} [options.keep=false] - whether to keep the leading b term\n* @returns {number} value of continued fraction\n*\n* @example\n* // Continued fraction for (e-1)^(-1):\n* var gen = generator();\n* var out = continuedFraction( gen );\n* // returns ~0.582\n*\n* function* generator() {\n*    var i = 0;\n*    while ( true ) {\n*        i++;\n*        yield [ i, i ];\n*    }\n* }\n*/\nfunction continuedFraction( generator, options ) {\n\tvar maxIter;\n\tvar opts;\n\tvar eps;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t}\n\tmaxIter = opts.maxIter || MAX_ITER;\n\teps = opts.tolerance || EPS;\n\n\tif ( opts.keep ) {\n\t\treturn continuedFractionB( generator, eps, maxIter );\n\t}\n\treturn continuedFractionA( generator, eps, maxIter );\n}\n\n\n// EXPORTS //\n\nmodule.exports = continuedFraction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar EPS = require( '@stdlib/constants/math/float64-eps' );\nvar FLOAT32_SMALLEST_NORMAL = require( '@stdlib/constants/math/float32-smallest-normal' );\n\n\n// VARIABLES //\n\nvar MAX_ITER = 1000000;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates a continued fraction expansion.\n*\n* ```text\n*           a1\n*      ---------------\n*      b1 +     a2\n*           ----------\n*            b2 +   a3\n*                -----\n*                b3 + ...\n* ```\n*\n* @private\n* @param {Function} gen - function giving terms of continued fraction expansion\n* @param {PositiveNumber} factor - further terms are only added as long as factor*result is smaller than the next term\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} evaluated expansion\n*/\nfunction continuedFractionA( gen, factor, maxIter ) {\n\tvar delta;\n\tvar a0;\n\tvar C;\n\tvar D;\n\tvar f;\n\tvar v;\n\n\tv = gen();\n\tf = v[ 1 ];\n\ta0 = v[ 0 ];\n\tif ( f === 0 ) {\n\t\tf = FLOAT32_SMALLEST_NORMAL;\n\t}\n\tC = f;\n\tD = 0.0;\n\n\tdo {\n\t\tv = gen();\n\t\tif ( v ) {\n\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\tif ( D === 0.0 ) {\n\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t}\n\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\tif ( C === 0.0 ) {\n\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t}\n\t\t\tD = 1.0 / D;\n\t\t\tdelta = C * D;\n\t\t\tf *= delta;\n\t\t}\n\t} while ( v && ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\n\treturn a0 / f;\n}\n\n/**\n* Evaluates a continued fraction expansion.\n*\n* ```text\n*      b0 +   a1\n*      ---------------\n*      b1 +   a2\n*           ----------\n*           b2 +   a3\n*                -----\n*                b3 + ...\n* ```\n*\n* @private\n* @param {Function} gen - function giving terms of continued fraction expansion\n* @param {PositiveNumber} factor - further terms are only added as long as factor*result is smaller than the next term\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} evaluated expansion\n*/\nfunction continuedFractionB( gen, factor, maxIter ) {\n\tvar delta;\n\tvar C;\n\tvar D;\n\tvar f;\n\tvar v;\n\n\tv = gen();\n\tf = v[ 1 ];\n\tif ( f === 0.0 ) {\n\t\tf = FLOAT32_SMALLEST_NORMAL;\n\t}\n\tC = f;\n\tD = 0.0;\n\tdo {\n\t\tv = gen();\n\t\tif ( v ) {\n\t\t\tD = v[ 1 ] + ( v[ 0 ] * D );\n\t\t\tif ( D === 0.0 ) {\n\t\t\t\tD = FLOAT32_SMALLEST_NORMAL;\n\t\t\t}\n\t\t\tC = v[ 1 ] + ( v[ 0 ] / C );\n\t\t\tif ( C === 0.0 ) {\n\t\t\t\tC = FLOAT32_SMALLEST_NORMAL;\n\t\t\t}\n\t\t\tD = 1.0 / D;\n\t\t\tdelta = C * D;\n\t\t\tf *= delta;\n\t\t}\n\t} while ( v && ( abs( delta - 1.0 ) > factor ) && --maxIter ); // eslint-disable-line no-plusplus\n\treturn f;\n}\n\n\n// MAIN //\n\n/**\n* Evaluates the continued fraction approximation for the supplied series generator using the modified Lentz algorithm.\n*\n* ## References\n*\n* -   Lentz, William J. 1976. \"Generating bessel functions in Mie scattering calculations using continued fractions.\" _Applied Optics_ 15 (3): 668–71. doi:[10.1364/AO.15.000668](https://doi.org/10.1364/AO.15.000668).\n*\n* @param {Function} generator - function returning terms of continued fraction expansion\n* @param {Object} [options] - function options\n* @param {PositiveInteger} [options.maxIter=1000000] - maximum number of iterations\n* @param {PositiveNumber} [options.tolerance=2.22e-16] - further terms are only added as long as the next term is greater than current term times the tolerance\n* @param {boolean} [options.keep=false] - whether to keep the leading b term\n* @returns {number} value of continued fraction\n*\n* @example\n* // Continued fraction for (e-1)^(-1):\n* var gen = generator()\n* var out = continuedFraction( gen );\n* // returns ~0.582\n*\n* function generator() {\n*    var i = 0;\n*    return function() {\n*        i++;\n*        return [ i, i ];\n*    };\n* }\n*/\nfunction continuedFraction( generator, options ) {\n\tvar maxIter;\n\tvar opts;\n\tvar eps;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t}\n\teps = opts.tolerance || EPS;\n\tmaxIter = opts.maxIter || MAX_ITER;\n\n\tif ( opts.keep ) {\n\t\treturn continuedFractionB( generator, eps, maxIter );\n\t}\n\treturn continuedFractionA( generator, eps, maxIter );\n}\n\n\n// EXPORTS //\n\nmodule.exports = continuedFraction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Creates a function to evaluate a series expansion of the upper incomplete gamma fraction.\n*\n* @private\n* @param {number} a1 - function parameter\n* @param {number} z1 - function parameter\n* @returns {Function} series function\n*/\nfunction upperIncompleteGammaFract( a1, z1 ) {\n\tvar z = z1 - a1 + 1.0;\n\tvar a = a1;\n\tvar k = 0;\n\treturn next;\n\n\t/**\n\t* Calculate the next term of the series.\n\t*\n\t* @private\n\t* @returns {Array} series expansion terms\n\t*/\n\tfunction next() {\n\t\tk += 1;\n\t\tz += 2.0;\n\t\treturn [\n\t\t\tk * (a - k),\n\t\t\tz\n\t\t];\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = upperIncompleteGammaFract;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n* (C) Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/math/float64-max-ln' );\nvar MIN_LN = require( '@stdlib/constants/math/float64-min-ln' );\n\n\n// MAIN //\n\n/**\n* Calculates the power term prefix `(z^a)(e^-z)` used in the non-normalized incomplete gammas.\n*\n* @private\n* @param {number} a - function parameter\n* @param {number} z - function parameter\n* @returns {number} power term prefix\n*/\nfunction fullIGammaPrefix( a, z ) {\n\tvar prefix;\n\tvar alz;\n\n\talz = a * ln( z );\n\tif ( z >= 1.0 ) {\n\t\tif ( ( alz < MAX_LN ) && ( -z > MIN_LN ) ) {\n\t\t\tprefix = pow( z, a ) * exp( -z );\n\t\t}\n\t\telse if ( a >= 1.0 ) {\n\t\t\tprefix = pow( z / exp(z/a), a );\n\t\t}\n\t\telse {\n\t\t\tprefix = exp( alz - z );\n\t\t}\n\t}\n\telse if ( alz > MIN_LN ) {\n\t\tprefix = pow( z, a ) * exp( -z );\n\t}\n\telse if ( z/a < MAX_LN ) {\n\t\tprefix = pow( z / exp(z/a), a );\n\t}\n\telse {\n\t\tprefix = exp( alz - z );\n\t}\n\treturn prefix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fullIGammaPrefix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/gamma.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006-7, 2013-14.\n* Copyright Paul A. Bristow 2007, 2013-14.\n* Copyright Nikhar Agrawal 2013-14.\n* Copyright Christopher Kormanyos 2013-14.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSumExpGScaled = require( '@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled' );\nvar gammaln = require( '@stdlib/math/base/special/gammaln' );\nvar gamma = require( '@stdlib/math/base/special/gamma' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar MAX_LN = require( '@stdlib/constants/math/float64-max-ln' );\nvar MIN_LN = require( '@stdlib/constants/math/float64-min-ln' );\nvar G = require( '@stdlib/constants/math/float64-gamma-lanczos-g' );\nvar E = require( '@stdlib/constants/math/float64-e' );\n\n\n// MAIN //\n\n/**\n* Computes `(z^a)*(e^-z) / gamma(a)`.\n*\n* @private\n* @param {number} a - input value\n* @param {number} z - input value\n* @returns {number} function value\n*/\nfunction regularizedGammaPrefix( a, z ) {\n\tvar prefix;\n\tvar amza;\n\tvar agh;\n\tvar alz;\n\tvar amz;\n\tvar sq;\n\tvar d;\n\n\tagh = a + G - 0.5;\n\td = ( (z - a) - G + 0.5 ) / agh;\n\tif ( a < 1.0 ) {\n\t\t// Treat a < 1 as a special case because our Lanczos approximations are optimized against the factorials with a > 1, and for high precision types very small values of `a` can give rather erroneous results for gamma:\n\t\tif ( z <= MIN_LN ) {\n\t\t\t// Use logs, so should be free of cancellation errors:\n\t\t\treturn exp( ( a * ln(z) ) - z - gammaln( a ) );\n\t\t}\n\t\t// No danger of overflow as gamma(a) < 1/a for small a, so direct calculation:\n\t\treturn pow( z, a ) * exp( -z ) / gamma( a );\n\t}\n\tif ( abs(d*d*a) <= 100.0 && a > 150.0 ) {\n\t\t// Special case for large a and a ~ z:\n\t\tprefix = ( a * ( log1p( d ) - d ) ) + ( z * ( 0.5-G ) / agh );\n\t\tprefix = exp( prefix );\n\t}\n\telse {\n\t\t// General case. Direct computation is most accurate, but use various fallbacks for different parts of the problem domain:\n\t\talz = a * ln(z / agh);\n\t\tamz = a - z;\n\t\tif (\n\t\t\tmin(alz, amz) <= MIN_LN ||\n\t\t\tmax(alz, amz) >= MAX_LN\n\t\t) {\n\t\t\tamza = amz / a;\n\t\t\tif (\n\t\t\t\tmin(alz, amz)/2.0 > MIN_LN &&\n\t\t\t\tmax(alz, amz)/2.0 < MAX_LN\n\t\t\t) {\n\t\t\t\t// Compute square root of the result and then square it:\n\t\t\t\tsq = pow( z/agh, a/2.0 ) * exp( amz/2.0 );\n\t\t\t\tprefix = sq * sq;\n\t\t\t}\n\t\t\telse if (\n\t\t\t\tmin(alz, amz)/4.0 > MIN_LN &&\n\t\t\t\tmax(alz, amz)/4.0 < MAX_LN &&\n\t\t\t\tz > a\n\t\t\t) {\n\t\t\t\t// Compute the 4th root of the result then square it twice:\n\t\t\t\tsq = pow( z/agh, a/4.0 ) * exp( amz/4.0 );\n\t\t\t\tprefix = sq * sq;\n\t\t\t\tprefix *= prefix;\n\t\t\t}\n\t\t\telse if (\n\t\t\t\tamza > MIN_LN &&\n\t\t\t\tamza < MAX_LN\n\t\t\t) {\n\t\t\t\tprefix = pow( (z * exp(amza)) / agh, a );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprefix = exp( alz + amz );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprefix = pow( z/agh, a ) * exp( amz );\n\t\t}\n\t}\n\tprefix *= sqrt( agh/E ) / lanczosSumExpGScaled( a );\n\treturn prefix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = regularizedGammaPrefix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_37_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the delta in `beta(a,b,x) = prefix + delta * beta(a+k,b,x)`.\n*\n* ## Notes\n*\n* Specifically, the function calculates\n*\n* ```tex\n* \\frac{ (a)(a+1)(a+2)...(a+k-1) }{ (b)(b+1)(b+2)...(b+k-1) }\n* ```\n*\n* The function should only called with small `k`; for large `k`, it is grossly inefficient.\n*\n* @private\n* @param {number} a - input value\n* @param {number} b - input value\n* @param {NonNegativeInteger} k - input value\n* @returns {number} ratio value\n*/\nfunction risingFactorialRatio( a, b, k ) {\n\tvar result;\n\tvar i;\n\tif ( k === 0 ) {\n\t\treturn 1.0;\n\t}\n\tresult = 1.0;\n\tfor ( i = 0; i < k; i++ ) {\n\t\tresult *= ( a + i ) / ( b + i );\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = risingFactorialRatio;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the maximum absolute value.\n*\n* @module @stdlib/math/base/special/maxabs\n*\n* @example\n* var maxabs = require( '@stdlib/math/base/special/maxabs' );\n*\n* var v = maxabs( 3.14, -4.2 );\n* // returns 4.2\n*\n* v = maxabs( 5.9, 3.14, 4.2 );\n* // returns 5.9\n*\n* v = maxabs( 3.14, NaN );\n* // returns NaN\n*\n* v = maxabs( +0.0, -0.0 );\n* // returns +0.0\n*/\n\n// MODULES //\n\nvar maxabs = require( './maxabs.js' );\n\n\n// EXPORTS //\n\nmodule.exports = maxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the maximum absolute value.\n*\n* @param {number} [x] - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {number} maximum absolute value\n*\n* @example\n* var v = maxabs( 3.14, -4.2 );\n* // returns 4.2\n*\n* @example\n* var v = maxabs( 5.9, 3.14, 4.2 );\n* // returns 5.9\n*\n* @example\n* var v = maxabs( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = maxabs( +0.0, -0.0 );\n* // returns +0.0\n*/\nfunction maxabs( x, y ) {\n\tvar nargs;\n\tvar args;\n\tvar i;\n\n\tnargs = arguments.length;\n\tif ( nargs === 0 ) {\n\t\treturn PINF;\n\t}\n\tif ( nargs === 2 ) {\n\t\treturn max( abs( x ), abs( y ) );\n\t}\n\targs = new Array( nargs );\n\tfor ( i = 0; i < nargs; i++ ) {\n\t\targs[ i ] = abs( arguments[ i ] );\n\t}\n\treturn max.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = maxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the minimum absolute value.\n*\n* @module @stdlib/math/base/special/minabs\n*\n* @example\n* var minabs = require( '@stdlib/math/base/special/minabs' );\n*\n* var v = minabs( -3.14, 4.2 );\n* // returns 3.14\n*\n* v = min( 5.9, 3.14, 4.2 );\n* // returns 3.14\n*\n* v = min( 3.14, NaN );\n* // returns NaN\n*\n* v = min( +0.0, -0.0 );\n* // returns +0.0\n*/\n\n// MODULES //\n\nvar minabs = require( './minabs.js' );\n\n\n// EXPORTS //\n\nmodule.exports = minabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum absolute value.\n*\n* @param {number} [x] - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {number} minimum absolute value\n*\n* @example\n* var v = minabs( -3.14, 4.2 );\n* // returns 3.14\n*\n* @example\n* var v = minabs( 5.9, 3.14, 4.2 );\n* // returns 3.14\n*\n* @example\n* var v = minabs( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = minabs( +0.0, -0.0 );\n* // returns +0.0\n*/\nfunction minabs( x, y ) {\n\tvar nargs;\n\tvar args;\n\tvar i;\n\n\tnargs = arguments.length;\n\tif ( nargs === 0 ) {\n\t\treturn PINF;\n\t}\n\tif ( nargs === 2 ) {\n\t\treturn min( abs( x ), abs( y ) );\n\t}\n\targs = new Array( nargs );\n\tfor ( i = 0; i < nargs; i++ ) {\n\t\targs[ i ] = abs( arguments[ i ] );\n\t}\n\treturn min.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = minabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar continuedFraction = require( '@stdlib/math/base/tools/continued-fraction' );\nvar ibetaPowerTerms = require( './ibeta_power_terms.js' );\n\n\n// VARIABLES //\n\nvar OPTS = {\n\t'keep': true,\n\t'maxIter': 1000\n};\n\n\n// FUNCTIONS //\n\n/**\n* Continued fraction for the incomplete beta.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @returns {Function} series function\n*/\nfunction ibetaFraction2t( a, b, x, y ) {\n\tvar m = 0;\n\treturn next;\n\n\t/**\n\t* Calculate the numerator and denominator of the next term of the series.\n\t*\n\t* @private\n\t* @returns {Array} series expansion terms\n\t*/\n\tfunction next() {\n\t\tvar denom;\n\t\tvar aN;\n\t\tvar bN;\n\n\t\taN = (a + m - 1) * (a + b + m - 1) * m * (b - m) * x * x;\n\t\tdenom = a + ( 2.0*m ) - 1.0;\n\t\taN /= denom * denom;\n\t\tbN = m;\n\t\tbN += (m * (b - m) * x) / ( a + ( 2.0*m ) - 1.0 );\n\t\tbN += ( (a+m) * ( (a*y) - (b*x) + 1.0 + ( m*(2.0-x) ) ) ) / ( a + (2.0*m) + 1.0 ); // eslint-disable-line max-len\n\t\tm += 1;\n\t\treturn [ aN, bN ];\n\t}\n}\n\n\n// MAIN //\n\n/**\n* Evaluates the incomplete beta via the continued fraction representation.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @param {boolean} normalized - boolean indicating whether to evaluate the power terms of the regularized or non-regularized incomplete beta function\n* @param {(Array|TypedArray|Object)} out - output array holding the derivative as the second element\n* @returns {number} incomplete beta value\n*/\nfunction ibetaFraction2( a, b, x, y, normalized, out ) {\n\tvar result;\n\tvar fract;\n\tvar f;\n\n\tresult = ibetaPowerTerms( a, b, x, y, normalized );\n\tif ( out ) {\n\t\tout[ 1 ] = result;\n\t}\n\tif ( result === 0.0 ) {\n\t\treturn result;\n\t}\n\tf = ibetaFraction2t( a, b, x, y );\n\tfract = continuedFraction( f, OPTS );\n\treturn result / fract;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaFraction2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar binomcoef = require( '@stdlib/math/base/special/binomcoef' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar MIN_VALUE = require( '@stdlib/constants/math/float64-smallest-normal' );\n\n\n// MAIN //\n\n/**\n* For integer arguments we can relate the incomplete beta to the complement of the binomial distribution cdf and use this finite sum.\n*\n* @private\n* @param {NonNegativeInteger} n - number of trials\n* @param {NonNegativeInteger} k - function input\n* @param {Probability} x - function input\n* @param {Probability} y - probability equal to `1-x`\n* @returns {number} sum\n*/\nfunction binomialCCDF( n, k, x, y ) {\n\tvar startTerm;\n\tvar result;\n\tvar start;\n\tvar term;\n\tvar i;\n\n\tresult = pow( x, n );\n\tif ( result > MIN_VALUE ) {\n\t\tterm = result;\n\t\tfor ( i = floor( n - 1 ); i > k; i-- ) {\n\t\t\tterm *= ((i + 1) * y) / ((n - i) * x);\n\t\t\tresult += term;\n\t\t}\n\t} else {\n\t\t// First term underflows so we need to start at the mode of the distribution and work outwards:\n\t\tstart = floor( n * x );\n\t\tif ( start <= k + 1 ) {\n\t\t\tstart = floor( k + 2 );\n\t\t}\n\t\tresult = pow( x, start ) * pow( y, n - start );\n\t\tresult *= binomcoef( floor(n), floor(start) );\n\t\tif ( result === 0.0 ) {\n\t\t\t// OK, starting slightly above the mode didn't work, we'll have to sum the terms the old fashioned way:\n\t\t\tfor ( i = start - 1; i > k; i-- ) {\n\t\t\t\tresult += pow( x, i ) * pow( y, n - i );\n\t\t\t\tresult *= binomcoef( floor(n), floor(i) );\n\t\t\t}\n\t\t} else {\n\t\t\tterm = result;\n\t\t\tstartTerm = result;\n\t\t\tfor ( i = start - 1; i > k; i-- ) {\n\t\t\t\tterm *= ((i + 1) * y) / ((n - i) * x);\n\t\t\t\tresult += term;\n\t\t\t}\n\t\t\tterm = startTerm;\n\t\t\tfor ( i = start + 1; i <= n; i++ ) {\n\t\t\t\tterm *= (n - i + 1) * x / (i * y);\n\t\t\t\tresult += term;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = binomialCCDF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the binomial coefficient.\n*\n* @module @stdlib/math/base/special/binomcoef\n*\n* @example\n* var binomcoef = require( '@stdlib/math/base/special/binomcoef' );\n*\n* var v = binomcoef( 8, 2 );\n* // returns 28\n*\n* v = binomcoef( 0, 0 );\n* // returns 1\n*\n* v = binomcoef( -4, 2 );\n* // returns 10\n*\n* v = binomcoef( 5, 3 );\n* // returns 10\n*\n* v = binomcoef( NaN, 3 );\n* // returns NaN\n*\n* v = binomcoef( 5, NaN );\n* // returns NaN\n*\n* v = binomcoef( NaN, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar binomcoef = require( './binomcoef.js' );\n\n\n// EXPORTS //\n\nmodule.exports = binomcoef;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isOdd = require( '@stdlib/math/base/assert/is-odd' );\nvar round = require( '@stdlib/math/base/special/round' );\n\n\n// MAIN //\n\n/**\n* Computes the binomial coefficient of two integers.\n*\n* ## Method\n*\n* -   Instead of evaluating the factorial form, which is inefficient and prone to overflow for large inputs arguments, this module computes the following multiplicative representation of the binomial coefficient for integer arguments\n*\n*     ```tex\n*     \\binom nk = \\prod_{i=1}^k \\frac{n+1-i}{i}\n*     ```\n*\n* @param {integer} n - input value\n* @param {integer} k - second input value\n* @returns {integer} function value\n*\n* @example\n* var v = binomcoef( 8, 2 );\n* // returns 28\n*\n* @example\n* var v = binomcoef( 0, 0 );\n* // returns 1\n*\n* @example\n* var v = binomcoef( -4, 2 );\n* // returns 10\n*\n* @example\n* var v = binomcoef( NaN, 3 );\n* // returns NaN\n*\n* @example\n* var v = binomcoef( 5, NaN );\n* // returns NaN\n*\n* @example\n* var v = binomcoef( NaN, NaN );\n* // returns NaN\n*/\nfunction binomcoef( n, k ) {\n\tvar res;\n\tvar j;\n\tif ( isnan( n ) || isnan( k ) ) {\n\t\treturn NaN;\n\t}\n\tif ( !isInteger( n ) || !isInteger( k ) ) {\n\t\treturn NaN;\n\t}\n\tif ( k < 0 ) {\n\t\treturn 0;\n\t}\n\tif ( n < 0 ) {\n\t\tres = binomcoef( -n + k - 1, k );\n\t\tif ( isOdd( k ) ) {\n\t\t\tres = -res;\n\t\t}\n\t\treturn res;\n\t}\n\tif ( k > n ) {\n\t\treturn 0;\n\t}\n\tif ( k === 0 || k === n ) {\n\t\treturn 1;\n\t}\n\tif ( k === 1 || k === n - 1 ) {\n\t\treturn n;\n\t}\n\tif ( n - k < k ) {\n\t\tk = n - k;\n\t}\n\t// Use recursive definition...\n\tres = n;\n\tfor ( j = 2; j <= k; j++ ) {\n\t\tres *= ( n - j + 1 ) / j;\n\t}\n\t// Correct for rounding errors...\n\treturn ( isInteger( res ) ) ? res : round( res );\n}\n\n\n// EXPORTS //\n\nmodule.exports = binomcoef;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ibetaPowerTerms = require( './ibeta_power_terms.js' );\n\n\n// MAIN //\n\n/**\n* Computes the difference between `ibeta(a,b,x)` and `ibeta(a+k,b,x)`.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {Probability} y - probability equal to `1-x`\n* @param {NonNegativeInteger} k - function input\n* @param {boolean} normalized - boolean indicating whether to evaluate the power terms of the regularized or non-regularized incomplete beta function\n* @param {(Array|TypedArray|Object)} out - output array holding the derivative as the second element\n* @returns {number} difference between ibeta(a,b,x) and ibeta(a+k,b,x)\n*/\nfunction ibetaAStep( a, b, x, y, k, normalized, out ) {\n\tvar prefix;\n\tvar term;\n\tvar sum;\n\tvar i;\n\n\tprefix = ibetaPowerTerms( a, b, x, y, normalized );\n\tif ( out ) {\n\t\tout[ 1 ] = prefix;\n\t}\n\tprefix /= a;\n\tif ( prefix === 0.0 ) {\n\t\treturn prefix;\n\t}\n\tsum = 1.0;\n\tterm = 1.0;\n\n\t// Series summation from 0 to k-1:\n\tfor ( i = 0; i < k-1; ++i ) {\n\t\tterm *= (a+b+i) * x / (a+i+1.0);\n\t\tsum += term;\n\t}\n\tprefix *= sum;\n\treturn prefix;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaAStep;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/beta.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lanczosSumExpGScaled = require( '@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled' );\nvar sumSeries = require( '@stdlib/math/base/tools/sum-series' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar MIN_VALUE = require( '@stdlib/constants/math/float64-smallest-normal' );\nvar MAX_LN = require( '@stdlib/constants/math/float64-max-ln' );\nvar MIN_LN = require( '@stdlib/constants/math/float64-min-ln' );\nvar G = require( '@stdlib/constants/math/float64-gamma-lanczos-g' );\nvar E = require( '@stdlib/constants/math/float64-e' );\n\n\n// VARIABLES //\n\nvar opts = {\n\t'maxTerms': 100\n};\n\n\n// FUNCTIONS //\n\n/**\n* Series approximation to the incomplete beta.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {number} result - initial result value\n* @returns {Function} series function\n*/\nfunction ibetaSeriesT( a, b, x, result ) {\n\tvar poch = 1.0 - b;\n\tvar n = 1;\n\treturn next;\n\n\t/**\n\t* Calculate the next term of the series.\n\t*\n\t* @private\n\t* @returns {number} series expansion term\n\t*/\n\tfunction next() {\n\t\tvar r = result / a;\n\t\ta += 1.0;\n\t\tresult *= poch * x / n;\n\t\tn += 1;\n\t\tpoch += 1.0;\n\t\treturn r;\n\t}\n}\n\n\n// MAIN //\n\n/**\n* Incomplete beta series.\n*\n* @private\n* @param {NonNegativeNumber} a - function parameter\n* @param {NonNegativeNumber} b - function parameter\n* @param {Probability} x - function parameter\n* @param {NonNegativeInteger} s0 - initial value\n* @param {boolean} normalized - boolean indicating whether to evaluate the power terms of the regularized or non-regularized incomplete beta function\n* @param {(Array|TypedArray|Object)} out - output array holding the derivative as the second element\n* @param {Probability} y - probability equal to `1-x`\n* @returns {number} function value\n*/\nfunction ibetaSeries( a, b, x, s0, normalized, out, y ) {\n\tvar result;\n\tvar agh;\n\tvar bgh;\n\tvar cgh;\n\tvar l1;\n\tvar l2;\n\tvar c;\n\tvar s;\n\n\tif ( normalized ) {\n\t\tc = a + b;\n\n\t\t// Incomplete beta power term, combined with the Lanczos approximation:\n\t\tagh = a + G - 0.5;\n\t\tbgh = b + G - 0.5;\n\t\tcgh = c + G - 0.5;\n\t\tresult = lanczosSumExpGScaled( c ) / ( lanczosSumExpGScaled( a ) * lanczosSumExpGScaled( b ) ); // eslint-disable-line max-len\n\n\t\tl1 = ln( cgh / bgh ) * ( b - 0.5 );\n\t\tl2 = ln( x * cgh / agh ) * a;\n\n\t\t// Check for over/underflow in the power terms:\n\t\tif (\n\t\t\tl1 > MIN_LN &&\n\t\t\tl1 < MAX_LN &&\n\t\t\tl2 > MIN_LN &&\n\t\t\tl2 < MAX_LN\n\t\t) {\n\t\t\tif ( a * b < bgh * 10.0 ) {\n\t\t\t\tresult *= exp( ( b-0.5 ) * log1p( a / bgh ) );\n\t\t\t} else {\n\t\t\t\tresult *= pow( cgh / bgh, b - 0.5 );\n\t\t\t}\n\t\t\tresult *= pow( x * cgh / agh, a );\n\t\t\tresult *= sqrt( agh / E );\n\n\t\t\tif ( out ) {\n\t\t\t\tout[ 1 ] = result * pow( y, b );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// We need logs, and this *will* cancel:\n\t\t\tresult = ln( result ) + l1 + l2 + ( ( ln( agh ) - 1.0 ) / 2.0 );\n\t\t\tif ( out ) {\n\t\t\t\tout[ 1 ] = exp( result + ( b * ln( y ) ) );\n\t\t\t}\n\t\t\tresult = exp( result );\n\t\t}\n\t}\n\telse {\n\t\t// Non-normalized, just compute the power:\n\t\tresult = pow( x, a );\n\t}\n\tif ( result < MIN_VALUE ) {\n\t\treturn s0; // Safeguard: series can't cope with denorms.\n\t}\n\ts = ibetaSeriesT( a, b, x, result );\n\topts.initialValue = s0;\n\treturn sumSeries( s, opts );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Student's t distribution with degrees of freedom `v`.\n*\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 0.5 );\n* var y = cdf( 3.0 );\n* // returns ~0.816\n*\n* y = cdf( 1.0 );\n* // returns ~0.699\n*/\nfunction factory( v ) {\n\tif ( isnan( v ) || v <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Student's t distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar x2;\n\t\tvar p;\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === 0.0 ) {\n\t\t\treturn 0.5;\n\t\t}\n\t\tx2 = pow( x, 2.0 );\n\t\tif ( v > 2.0*x2 ) {\n\t\t\tz = x2 / ( v + x2 );\n\t\t\tp = betainc( z, 0.5, v/2.0, true, true ) / 2.0;\n\t\t} else {\n\t\t\tz = v / ( v + x2 );\n\t\t\tp = betainc( z, v/2.0, 0.5, true, false ) / 2.0;\n\t\t}\n\t\treturn ( x > 0.0 ) ? 1.0 - p : p;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the quantile function for a Student's t distribution.\n*\n* @module @stdlib/stats/base/dists/t/quantile\n*\n* @example\n* var quantile = require( '@stdlib/stats/base/dists/t/quantile' );\n*\n* var y = quantile( 0.8, 1.0 );\n* // returns ~1.376\n*\n* y = quantile( 0.1, 1.0 );\n* // returns ~-3.078\n*\n* y = quantile( 0.5, 0.1 );\n* // returns 0.0\n*\n* var myquantile = quantile.factory( 4.0 );\n*\n* y = myquantile( 0.2 );\n* // returns ~-0.941\n*\n* y = myquantile( 0.9 );\n* // returns ~1.533\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar quantile = require( './quantile.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( quantile, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar kernelBetaincinv = require( '@stdlib/math/base/special/kernel-betaincinv' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sign = require( '@stdlib/math/base/special/signum' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Evaluates the quantile function for a Student's t distribution with degrees of freedom `v` at a probability `p`.\n*\n* @param {Probability} p - input value\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {number} evaluated quantile function\n*\n* @example\n* var y = quantile( 0.8, 1.0 );\n* // returns ~1.376\n*\n* @example\n* var y = quantile( 0.1, 1.0 );\n* // returns ~-3.078\n*\n* @example\n* var y = quantile( 0.5, 0.1 );\n* // returns 0.0\n*\n* @example\n* var y = quantile( -0.2, 0.1 );\n* // returns NaN\n*\n* @example\n* var y = quantile( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.5, -1.0 );\n* // returns NaN\n*/\nfunction quantile( p, v ) {\n\tvar prob;\n\tvar xs;\n\tif (\n\t\tisnan( v ) ||\n\t\tisnan( p ) ||\n\t\tv <= 0.0 ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\tprob = ( p > 0.5 ) ? 1.0 - p : p;\n\txs = kernelBetaincinv( v / 2.0, 0.5, 2.0 * prob, 1.0 - (2.0 * prob) );\n\treturn sign( p - 0.5 ) * sqrt( v * xs[ 1 ] / xs[ 0 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = quantile;\n","/* eslint-disable max-statements, max-lines */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\nvar betainc = require( '@stdlib/math/base/special/betainc' );\nvar expm1 = require( '@stdlib/math/base/special/expm1' );\nvar log1p = require( '@stdlib/math/base/special/log1p' );\nvar asin = require( '@stdlib/math/base/special/asin' );\nvar beta = require( '@stdlib/math/base/special/beta' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar sin = require( '@stdlib/math/base/special/sin' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar FLOAT64_MIN_NORM = require( '@stdlib/constants/math/float64-smallest-normal' );\nvar HALF_PI = require( '@stdlib/constants/math/float64-half-pi' );\nvar EPSILON = require( '@stdlib/constants/math/float64-eps' );\nvar findIBetaInvFromTDist = require( './find_ibeta_inv_from_t_dist.js' );\nvar temme1 = require( './temme1.js' );\nvar temme2 = require( './temme2.js' );\nvar temme3 = require( './temme3.js' );\nvar halleyIterate = require( './halley_iterate.js' );\nvar ibetaRoots = require( './ibeta_roots.js' );\n\n\n// VARIABLES //\n\nvar DIGITS = 32;\nvar MAX_ITERATIONS = 1000;\n\n// Workspace for the polynomial coefficients:\nvar terms = [ 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Calculates the inverse of the incomplete beta function.\n*\n* @private\n* @param {PositiveNumber} a - function parameter\n* @param {PositiveNumber} b - function parameter\n* @param {Probability} p - function parameter\n* @param {Probability} q - probability equal to `1 - p`\n* @returns {Array} two-element array holding function value `y` and `1-y`\n*/\nfunction ibetaInvImp( a, b, p, q ) {\n\tvar digits;\n\tvar invert;\n\tvar lambda;\n\tvar lower;\n\tvar theta;\n\tvar upper;\n\tvar roots;\n\tvar maxv;\n\tvar minv;\n\tvar bet;\n\tvar ppa;\n\tvar tmp;\n\tvar xs2;\n\tvar ap1;\n\tvar bm1;\n\tvar fs;\n\tvar lx;\n\tvar ps;\n\tvar xg;\n\tvar xs;\n\tvar yp;\n\tvar a2;\n\tvar a3;\n\tvar b2;\n\tvar r;\n\tvar l;\n\tvar u;\n\tvar x;\n\tvar y;\n\n\t// The flag invert is set to true if we swap a for b and p for q, in which case the result has to be subtracted from 1:\n\tinvert = false;\n\n\t// Handle trivial cases first...\n\tif ( q === 0.0 ) {\n\t\treturn [ 1.0, 0.0 ];\n\t}\n\tif ( p === 0.0 ) {\n\t\treturn [ 0.0, 1.0 ];\n\t}\n\tif ( a === 1.0 ) {\n\t\tif ( b === 1.0 ) {\n\t\t\treturn [ p, 1.0-p ];\n\t\t}\n\t\t// Change things around so we can handle as b == 1 special case below:\n\t\ttmp = b;\n\t\tb = a;\n\t\ta = tmp;\n\n\t\ttmp = q;\n\t\tq = p;\n\t\tp = tmp;\n\n\t\tinvert = true;\n\t}\n\t// Depending upon which approximation method we use, we may end up calculating either x or y initially (where y = 1-x):\n\tx = 0.0; // Set to a safe zero to avoid a\n\n\t// For some of the methods we can put tighter bounds on the result than simply [0,1]:\n\tlower = 0.0;\n\tupper = 1.0;\n\n\t// Student's T with b = 0.5 gets handled as a special case, swap around if the arguments are in the \"wrong\" order:\n\tif ( a === 0.5 ) {\n\t\tif ( b === 0.5 ) {\n\t\t\tx = sin( p*HALF_PI );\n\t\t\tx *= x;\n\t\t\ty = sin( q*HALF_PI );\n\t\t\ty *= y;\n\t\t\treturn [ x, y ];\n\t\t}\n\t\tif ( b > 0.5 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = q;\n\t\t\tq = p;\n\t\t\tp = tmp;\n\n\t\t\tinvert = !invert;\n\t\t}\n\t}\n\t// Select calculation method for the initial estimate:\n\tif ( b === 0.5 && a >= 0.5 && p !== 1.0 ) {\n\t\t// We have a Student's T distribution:\n\t\typ = {};\n\t\tx = findIBetaInvFromTDist( a, p, yp );\n\t\ty = yp.value;\n\t}\n\telse if ( b === 1.0 ) {\n\t\tif ( p < q ) {\n\t\t\tif ( a > 1.0 ) {\n\t\t\t\tx = pow( p, 1.0/a );\n\t\t\t\ty = -expm1( ln(p) / a );\n\t\t\t} else {\n\t\t\t\tx = pow( p, 1.0/a );\n\t\t\t\ty = 1.0 - x;\n\t\t\t}\n\t\t} else {\n\t\t\tx = exp( log1p(-q) / a );\n\t\t\ty = -expm1( log1p(-q) / a );\n\t\t}\n\t\tif ( invert ) {\n\t\t\ttmp = y;\n\t\t\ty = x;\n\t\t\tx = tmp;\n\t\t}\n\t\treturn [ x, y ];\n\t}\n\telse if ( a+b > 5.0 ) {\n\t\t// When a+b is large then we can use one of Prof Temme's asymptotic expansions, begin by swapping things around so that p < 0.5, we do this to avoid cancellations errors when p is large.\n\t\tif ( p > 0.5 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = q;\n\t\t\tq = p;\n\t\t\tp = tmp;\n\n\t\t\tinvert = !invert;\n\t\t}\n\t\tminv = min( a, b );\n\t\tmaxv = max( a, b );\n\t\tif ( ( sqrt(minv) > (maxv-minv) ) && minv > 5.0 ) {\n\t\t\t// When a and b differ by a small amount the curve is quite symmetrical and we can use an error function to approximate the inverse. This is the cheapest of the three Temme expansions, and the calculated value for x will never be much larger than p, so we don't have to worry about cancellation as long as p is small.\n\t\t\tx = temme1( a, b, p );\n\t\t\ty = 1.0 - x;\n\t\t} else {\n\t\t\tr = a + b;\n\t\t\ttheta = asin( sqrt( a/r ) );\n\t\t\tlambda = minv / r;\n\t\t\tif (\n\t\t\t\tlambda >= 0.2 &&\n\t\t\t\tlambda <= 0.8 &&\n\t\t\t\tr >= 10\n\t\t\t) {\n\t\t\t\t// The second error function case is the next cheapest to use, it breaks down when the result is likely to be very small, if `a+b` is also small, but we can use a cheaper expansion there in any case. As before `x` won't be much larger than `p`, so as long as `p` is small we should be free of cancellation error.\n\t\t\t\tppa = pow( p, 1.0/a );\n\t\t\t\tif ( ppa < 0.0025 && ( a+b ) < 200.0 ) {\n\t\t\t\t\tx = ppa * pow( a*beta( a, b ), 1.0/a );\n\t\t\t\t} else {\n\t\t\t\t\tx = temme2( p, r, theta );\n\t\t\t\t}\n\t\t\t\ty = 1.0 - x;\n\t\t\t} else {\n\t\t\t\t// If we get here then a and b are very different in magnitude and we need to use the third of Temme's methods which involves inverting the incomplete gamma.  This is much more expensive than the other methods.  We also can only use this method when a > b, which can lead to cancellation errors if we really want y (as we will when x is close to 1), so a different expansion is used in that case.\n\t\t\t\tif ( a < b ) {\n\t\t\t\t\ttmp = b;\n\t\t\t\t\tb = a;\n\t\t\t\t\ta = tmp;\n\n\t\t\t\t\ttmp = q;\n\t\t\t\t\tq = p;\n\t\t\t\t\tp = tmp;\n\t\t\t\t\tinvert = !invert;\n\t\t\t\t}\n\t\t\t\t// Try and compute the easy way first:\n\t\t\t\tbet = 0.0;\n\t\t\t\tif ( b < 2.0 ) {\n\t\t\t\t\tbet = beta( a, b );\n\t\t\t\t}\n\t\t\t\tif ( bet === 0.0 ) {\n\t\t\t\t\ty = 1.0;\n\t\t\t\t} else {\n\t\t\t\t\ty = pow( b*q*bet, 1.0/b );\n\t\t\t\t\tx = 1.0 - y;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( y > 1.0e-5 ) {\n\t\t\t\tx = temme3( a, b, p, q );\n\t\t\t\ty = 1.0 - x;\n\t\t\t}\n\t\t}\n\t}\n\telse if ( a < 1.0 && b < 1.0 ) {\n\t\t// Both a and b less than 1, there is a point of inflection at xs:\n\t\txs = ( 1.0-a ) / ( 2.0-a-b );\n\n\t\t// Now we need to ensure that we start our iteration from the right side of the inflection point:\n\t\tfs = betainc( xs, a, b ) - p;\n\t\tif ( abs(fs)/p < EPSILON*3.0 ) {\n\t\t\t// The result is at the point of inflection, best just return it:\n\t\t\tif ( invert ) {\n\t\t\t\treturn [ 1.0-xs, xs ];\n\t\t\t}\n\t\t\treturn [ xs, 1.0-xs ];\n\t\t}\n\t\tif ( fs < 0.0 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = q;\n\t\t\tq = p;\n\t\t\tp = tmp;\n\n\t\t\tinvert = !invert;\n\t\t\txs = 1.0 - xs;\n\t\t}\n\t\txg = pow( a*p*beta( a, b ), 1.0/a );\n\t\tx = xg / ( 1.0+xg );\n\t\ty = 1.0 / ( 1.0+xg );\n\n\t\t// And finally we know that our result is below the inflection point, so set an upper limit on our search:\n\t\tif ( x > xs ) {\n\t\t\tx = xs;\n\t\t}\n\t\tupper = xs;\n\t}\n\telse if ( a > 1.0 && b > 1.0 ) {\n\t\t// Small a and b, both greater than 1, there is a point of inflection at xs, and it's complement is xs2, we must always start our iteration from the right side of the point of inflection.\n\t\txs = ( a-1.0 ) / ( a+b-2.0 );\n\t\txs2 = ( b-1.0 ) / ( a+b-2.0 );\n\t\tps = betainc( xs, a, b ) - p;\n\n\t\tif ( ps < 0.0 ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = q;\n\t\t\tq = p;\n\t\t\tp = tmp;\n\n\t\t\ttmp = xs2;\n\t\t\txs2 = xs;\n\t\t\txs = tmp;\n\n\t\t\tinvert = !invert;\n\t\t}\n\t\t// Estimate x and y, using expm1 to get a good estimate for y when it's very small:\n\t\tlx = ln( p*a*beta( a, b ) ) / a;\n\t\tx = exp( lx );\n\t\ty = ( x < 0.9 ) ? 1.0-x : -expm1(lx);\n\n\t\tif ( b < a && x < 0.2 ) {\n\t\t\t// Under a limited range of circumstances we can improve our estimate for x...\n\t\t\tap1 = a - 1.0;\n\t\t\tbm1 = b - 1.0;\n\t\t\ta2 = a * a;\n\t\t\ta3 = a * a2;\n\t\t\tb2 = b * b;\n\t\t\tterms[ 0 ] = 0.0;\n\t\t\tterms[ 1 ] = 1.0;\n\t\t\tterms[ 2 ] = bm1 / ap1;\n\t\t\tap1 *= ap1;\n\t\t\tterms[ 3 ] = bm1 * (3.0*a*b + 5.0*b + a2 - a - 4.0) / (2.0 * (a+2.0) * ap1); // eslint-disable-line max-len, no-mixed-operators\n\t\t\tap1 *= (a + 1.0);\n\t\t\tterms[ 4 ] = bm1 * (33.0*a*b2 + 31.0*b2 + 8.0*a2*b2 - 30.0*a*b - 47.0*b + 11.0*a2*b + 6.0*a3*b + 18.0 + 4.0*a - a3 + a2*a2 - 10.0*a2); // eslint-disable-line max-len, no-mixed-operators\n\t\t\tterms[ 4 ] /= (3.0 * (a+3.0) * (a+2.0) * ap1);\n\t\t\tx = evalpoly( terms, x );\n\t\t}\n\t\t// Know that result is below the inflection point, so set an upper limit on search...\n\t\tif ( x > xs ) {\n\t\t\tx = xs;\n\t\t}\n\t\tupper = xs;\n\t} else {\n\t\t// Case: ( a <= 1 ) != ( b <= 1 ). If all else fails we get here, only one of a and b is above 1, and a+b is small.  Start by swapping things around so that we have a concave curve with b > a and no points of inflection in [0,1].  As long as we expect x to be small then we can use the simple (and cheap) power term to estimate x, but when we expect x to be large then this greatly underestimates x and leaves us trying to iterate \"round the corner\" which may take almost forever. We could use Temme's inverse gamma function case in that case, this works really rather well (albeit expensively) even though strictly speaking we're outside it's defined range. However it's expensive to compute, and an alternative approach which models the curve as a distorted quarter circle is much cheaper to compute, and still keeps the number of iterations required down to a reasonable level. With thanks to Prof. Temme for this suggestion.\n\t\tif ( b < a ) {\n\t\t\ttmp = b;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\n\t\t\ttmp = q;\n\t\t\tq = p;\n\t\t\tp = tmp;\n\t\t\tinvert = !invert;\n\t\t}\n\t\tif ( pow( p, 1.0/a ) < 0.5 ) {\n\t\t\tx = pow( p*a*beta( a, b ), 1.0/a );\n\t\t\tif ( x === 0.0 ) {\n\t\t\t\tx = FLOAT64_MIN_NORM;\n\t\t\t}\n\t\t\ty = 1.0 - x;\n\t\t}\n\t\t// Case: pow(q, 1/b) < 0.1\n\t\telse {\n\t\t\t// Model a distorted quarter circle:\n\t\t\ty = pow( 1.0-pow( p, b*beta( a, b ) ), 1.0/b );\n\t\t\tif ( y === 0 ) {\n\t\t\t\ty = FLOAT64_MIN_NORM;\n\t\t\t}\n\t\t\tx = 1.0 - y;\n\t\t}\n\t}\n\t// Now we have a guess for x (and for y) we can set things up for iteration.  If x > 0.5 it pays to swap things round:\n\tif ( x > 0.5 ) {\n\t\ttmp = b;\n\t\tb = a;\n\t\ta = tmp;\n\n\t\ttmp = q;\n\t\tq = p;\n\t\tp = tmp;\n\n\t\ttmp = y;\n\t\ty = x;\n\t\tx = tmp;\n\n\t\tinvert = !invert;\n\t\tl = 1.0 - upper;\n\t\tu = 1.0 - lower;\n\t\tlower = l;\n\t\tupper = u;\n\t}\n\t// Lower bound for our search:  We're not interested in denormalized answers as these tend to take up lots of iterations, given that we can't get accurate derivatives in this area (they tend to be infinite).\n\tif ( lower === 0 ) {\n\t\tif ( invert ) {\n\t\t\t// We're not interested in answers smaller than machine epsilon:\n\t\t\tlower = EPSILON;\n\t\t\tif ( x < lower ) {\n\t\t\t\tx = lower;\n\t\t\t}\n\t\t} else {\n\t\t\tlower = FLOAT64_MIN_NORM;\n\t\t}\n\t\tif ( x < lower ) {\n\t\t\tx = lower;\n\t\t}\n\t}\n\t// Figure out how many digits to iterate towards:\n\tdigits = DIGITS;\n\tif ( x < 1.0e-50 && ( a < 1.0 || b < 1.0 ) ) {\n\t\t// If we're in a region where the first derivative is very large, then we have to take care that the root-finder doesn't terminate prematurely.  We'll bump the precision up to avoid this, but we have to take care not to set the precision too high or the last few iterations will just thrash around and convergence may be slow in this case. Try 3/4 of machine epsilon:\n\t\tdigits *= 3;\n\t\tdigits /= 2;\n\t}\n\t// Now iterate, we can use either p or q as the target here depending on which is smaller:\n\troots = ibetaRoots( a, b, ( (p < q) ? p : q ), p >= q );\n\tx = halleyIterate( roots, x, lower, upper, digits, MAX_ITERATIONS );\n\n\t// Tidy up, if we \"lower\" was too high then zero is the best answer we have:\n\tif ( x === lower ) {\n\t\tx = 0.0;\n\t}\n\tif ( invert ) {\n\t\treturn [ 1.0-x, x ];\n\t}\n\treturn [ x, 1.0-x ];\n}\n\n\n// EXPORTS //\n\nmodule.exports= ibetaInvImp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/detail/t_distribution_inv.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar inverseStudentsT = require( './inverse_students_t.js' );\n\n\n// MAIN //\n\n/**\n* Returns the inverse of the incomplete beta function via the Student t distribution.\n*\n* @private\n* @param {PositiveNumber} a - function parameter\n* @param {Probability} p - probability value\n* @param {Object} py - placeholder object holding one minus the returned value\n* @returns {number} function value\n*/\nfunction findIBetaInvFromTDist( a, p, py ) {\n\tvar df;\n\tvar u;\n\tvar v;\n\tvar t;\n\n\tu = p / 2.0;\n\tv = 1.0 - u;\n\tdf = a * 2.0;\n\tt = inverseStudentsT( df, u, v );\n\tif ( py ) {\n\t\tpy.value = t * t / ( df + ( t*t ) );\n\t}\n\treturn df / ( df + ( t*t ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = findIBetaInvFromTDist;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/detail/t_distribution_inv.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar erfcinv = require( '@stdlib/math/base/special/erfcinv' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar ldexp = require( '@stdlib/math/base/special/ldexp' );\nvar round = require( '@stdlib/math/base/special/round' );\nvar acos = require( '@stdlib/math/base/special/acos' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar cos = require( '@stdlib/math/base/special/cos' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar sin = require( '@stdlib/math/base/special/sin' );\nvar SQRT2 = require( '@stdlib/constants/math/float64-sqrt-two' );\nvar PI = require( '@stdlib/constants/math/float64-pi' );\nvar inverseStudentsTBodySeries = require( './inverse_students_t_body_series.js' );\nvar inverseStudentsTTailSeries = require( './inverse_students_t_tail_series.js' );\nvar inverseStudentsTHill = require( './inverse_students_t_hill.js' );\n\n\n// VARIABLES //\n\nvar DF_THRESHOLD = 0x10000000; // 2^28\nvar ONE_THIRD = 1.0 / 3.0;\nvar EXP = ( 2.0 * 53.0 ) / 3.0;\nvar C = 0.85498797333834849467655443627193;\n\n\n// MAIN //\n\n/**\n* Evaluates Student's t quantiles.\n*\n* @private\n* @param {PositiveNumber} df - degrees of freedom\n* @param {Probability} u - input probability\n* @param {Probability} v - probability equal to `1-u`\n* @returns {number} function value\n*/\nfunction inverseStudentsT( df, u, v ) {\n\tvar crossover;\n\tvar tolerance;\n\tvar rootAlpha;\n\tvar invert;\n\tvar result;\n\tvar alpha;\n\tvar tmp;\n\tvar p0;\n\tvar p2;\n\tvar p4;\n\tvar p5;\n\tvar p;\n\tvar r;\n\tvar x;\n\tvar a;\n\tvar b;\n\n\tresult = 0;\n\tif ( u > v ) {\n\t\t// Function is symmetric, so invert it:\n\t\ttmp = v;\n\t\tv = u;\n\t\tu = tmp;\n\t\tinvert = true;\n\t} else {\n\t\tinvert = false;\n\t}\n\tif ( floor(df) === df && df < 20 ) {\n\t\t// We have integer degrees of freedom, try for the special cases first:\n\t\ttolerance = ldexp( 1.0, EXP );\n\n\t\tswitch ( floor( df ) ) {\n\t\tcase 1:\n\t\t\t// `df = 1` is the same as the Cauchy distribution, see Shaw Eq 35:\n\t\t\tif ( u === 0.5 ) {\n\t\t\t\tresult = 0.0;\n\t\t\t} else {\n\t\t\t\tresult = -cos( PI * u ) / sin( PI * u );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t// `df = 2` has an exact result, see Shaw Eq 36:\n\t\t\tresult = ( (2.0*u) - 1.0 ) / sqrt( 2.0 * u * v );\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\t// `df = 4` has an exact result, see Shaw Eq 38 & 39:\n\t\t\talpha = 4.0 * u * v;\n\t\t\trootAlpha = sqrt( alpha );\n\t\t\tr = 4 * cos( acos( rootAlpha ) / 3.0 ) / rootAlpha;\n\t\t\tx = sqrt( r - 4.0 );\n\t\t\tresult = ( u - 0.5 < 0.0 ) ? -x : x;\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\t// We get numeric overflow in this area:\n\t\t\tif ( u < 1.0e-150 ) {\n\t\t\t\treturn ( ( invert ) ? -1 : 1 ) * inverseStudentsTHill( df, u );\n\t\t\t}\n\t\t\t// Newton-Raphson iteration of a polynomial case, choice of seed value is taken from Shaw's online supplement:\n\t\t\ta = 4.0 * ( u - (u*u) );// 1 - 4 * (u - 0.5f) * (u - 0.5f);\n\t\t\tb = pow( a, ONE_THIRD );\n\t\t\tp = 6.0 * ( 1.0 + ( C * ( (1.0/b) - 1.0 ) ) );\n\t\t\tdo {\n\t\t\t\tp2 = p * p;\n\t\t\t\tp4 = p2 * p2;\n\t\t\t\tp5 = p * p4;\n\t\t\t\tp0 = p;\n\n\t\t\t\t// Next term is given by Eq 41:\n\t\t\t\tp = 2.0 * ( (8.0*a*p5) - (270.0*p2) + 2187 ) /\n\t\t\t\t\t( 5.0 * ( (4.0*a*p4) - (216.0*p) - 243.0 ) );\n\t\t\t} while ( abs( (p - p0) / p ) > tolerance );\n\n\t\t\t// Use Eq 45 to extract the result:\n\t\t\tp = sqrt( p - df );\n\t\t\tresult = ( u - 0.5 < 0.0 ) ? -p : p;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif ( df > DF_THRESHOLD ) { // 2^28\n\t\t\t\tresult = erfcinv( 2.0 * u ) * SQRT2;\n\t\t\t} else if ( df < 3 ) {\n\t\t\t\t// Use a roughly linear scheme to choose between Shaw's tail series and body series:\n\t\t\t\tcrossover = 0.2742 - ( df * 0.0242143 );\n\t\t\t\tif ( u > crossover ) {\n\t\t\t\t\tresult = inverseStudentsTBodySeries( df, u );\n\t\t\t\t} else {\n\t\t\t\t\tresult = inverseStudentsTTailSeries( df, u );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Use Hill's method except in the extreme tails where we use Shaw's tail series. The crossover point is roughly exponential in -df:\n\t\t\t\tcrossover = ldexp( 1.0, round( df / -0.654 ) );\n\t\t\t\tif ( u > crossover ) {\n\t\t\t\t\tresult = inverseStudentsTHill( df, u );\n\t\t\t\t} else {\n\t\t\t\t\tresult = inverseStudentsTTailSeries( df, u );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if ( df > DF_THRESHOLD ) {\n\t\tresult = -erfcinv( 2.0 * u ) * SQRT2;\n\t} else if ( df < 3 ) {\n\t\t// Use a roughly linear scheme to choose between Shaw's tail series and body series:\n\t\tcrossover = 0.2742 - ( df * 0.0242143 );\n\t\tif ( u > crossover ) {\n\t\t\tresult = inverseStudentsTBodySeries( df, u );\n\t\t} else {\n\t\t\tresult = inverseStudentsTTailSeries( df, u );\n\t\t}\n\t} else {\n\t\t// Use Hill's method except in the extreme tails where we use Shaw's tail series. The crossover point is roughly exponential in -df:\n\t\tcrossover = ldexp( 1.0, round( df / -0.654 ) );\n\t\tif ( u > crossover ) {\n\t\t\tresult = inverseStudentsTHill( df, u );\n\t\t} else {\n\t\t\tresult = inverseStudentsTTailSeries( df, u );\n\t\t}\n\t}\n\treturn ( invert ) ? -result : result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = inverseStudentsT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_48_0/boost/math/special_functions/detail/erf_inv.hpp}. This implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar NINF = require( '@stdlib/constants/math/float64-ninf' );\nvar rationalFcnR1 = require( './rational_p1q1.js' );\nvar rationalFcnR2 = require( './rational_p2q2.js' );\nvar rationalFcnR3 = require( './rational_p3q3.js' );\nvar rationalFcnR4 = require( './rational_p4q4.js' );\nvar rationalFcnR5 = require( './rational_p5q5.js' );\n\n\n// VARIABLES //\n\nvar Y1 = 8.91314744949340820313e-2;\nvar Y2 = 2.249481201171875;\nvar Y3 = 8.07220458984375e-1;\nvar Y4 = 9.3995571136474609375e-1;\nvar Y5 = 9.8362827301025390625e-1;\n\n\n// MAIN //\n\n/**\n* Evaluates the inverse complementary error function.\n*\n* Note that\n*\n* ```tex\n* \\operatorname{erfc^{-1}}(1-z) = \\operatorname{erf^{-1}}(z)\n* ```\n*\n* ## Method\n*\n* 1.  For \\\\(|x| \\leq 0.5\\\\), we evaluate the inverse error function using the rational approximation\n*\n*     ```tex\n*     \\operatorname{erf^{-1}}(x) = x(x+10)(\\mathrm{Y} + \\operatorname{R}(x))\n*     ```\n*\n*     where \\\\(Y\\\\) is a constant and \\\\(\\operatorname{R}(x)\\\\) is optimized for a low absolute error compared to \\\\(|Y|\\\\).\n*\n*     <!-- <note> -->\n*\n*     Max error \\\\(2.001849\\mbox{e-}18\\\\). Maximum deviation found (error term at infinite precision) \\\\(8.030\\mbox{e-}21\\\\).\n*\n*     <!-- </note> -->\n*\n* 2.  For \\\\(0.5 > 1-|x| \\geq 0\\\\), we evaluate the inverse error function using the rational approximation\n*\n*     ```tex\n*     \\operatorname{erf^{-1}} = \\frac{\\sqrt{-2 \\cdot \\ln(1-x)}}{\\mathrm{Y} + \\operatorname{R}(1-x)}\n*     ```\n*\n*     where \\\\(Y\\\\) is a constant, and \\\\(\\operatorname{R}(q)\\\\) is optimized for a low absolute error compared to \\\\(Y\\\\).\n*\n*     <!-- <note> -->\n*\n*     Max error \\\\(7.403372\\mbox{e-}17\\\\). Maximum deviation found (error term at infinite precision) \\\\(4.811\\mbox{e-}20\\\\).\n*\n*     <!-- </note> -->\n*\n* 3.  For \\\\(1-|x| < 0.25\\\\), we have a series of rational approximations all of the general form\n*\n*     ```tex\n*     p = \\sqrt{-\\ln(1-x)}\n*     ```\n*\n*     Accordingly, the result is given by\n*\n*     ```tex\n*     \\operatorname{erf^{-1}}(x) = p(\\mathrm{Y} + \\operatorname{R}(p-B))\n*     ```\n*\n*     where \\\\(Y\\\\) is a constant, \\\\(B\\\\) is the lowest value of \\\\(p\\\\) for which the approximation is valid, and \\\\(\\operatorname{R}(x-B)\\\\) is optimized for a low absolute error compared to \\\\(Y\\\\).\n*\n*     <!-- <note> -->\n*\n*     Almost all code will only go through the first or maybe second approximation.  After that we are dealing with very small input values.\n*\n*     -   If \\\\(p < 3\\\\), max error \\\\(1.089051\\mbox{e-}20\\\\).\n*     -   If \\\\(p < 6\\\\), max error \\\\(8.389174\\mbox{e-}21\\\\).\n*     -   If \\\\(p < 18\\\\), max error \\\\(1.481312\\mbox{e-}19\\\\).\n*     -   If \\\\(p < 44\\\\), max error \\\\(5.697761\\mbox{e-}20\\\\).\n*     -   If \\\\(p \\geq 44\\\\), max error \\\\(1.279746\\mbox{e-}20\\\\).\n*\n*     <!-- </note> -->\n*\n*     <!-- <note> -->\n*\n*     The Boost library can accommodate \\\\(80\\\\) and \\\\(128\\\\) bit long doubles. JavaScript only supports a \\\\(64\\\\) bit double (IEEE 754). Accordingly, the smallest \\\\(p\\\\) (in JavaScript at the time of this writing) is \\\\(\\sqrt{-\\ln(\\sim5\\mbox{e-}324)} = 27.284429111150214\\\\).\n*\n*     <!-- </note> -->\n*\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var y = erfcinv( 0.5 );\n* // returns ~0.4769\n*\n* @example\n* var y = erfcinv( 0.8 );\n* // returns ~0.1791\n*\n* @example\n* var y = erfcinv( 0.0 );\n* // returns Infinity\n*\n* @example\n* var y = erfcinv( 2.0 );\n* // returns -Infinity\n*\n* @example\n* var y = erfcinv( NaN );\n* // returns NaN\n*/\nfunction erfcinv( x ) {\n\tvar sign;\n\tvar qs;\n\tvar q;\n\tvar g;\n\tvar r;\n\n\t// Special case: NaN\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\t// Special case: 0\n\tif ( x === 0.0 ) {\n\t\treturn PINF;\n\t}\n\t// Special case: 2\n\tif ( x === 2.0 ) {\n\t\treturn NINF;\n\t}\n\t// Special case: 1\n\tif ( x === 1.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( x > 2.0 || x < 0.0 ) {\n\t\treturn NaN;\n\t}\n\t// Argument reduction (reduce to interval [0,1]). If `x` is outside [0,1], we can take advantage of the complementary error function reflection formula: `erfc(-z) = 2 - erfc(z)`, by negating the result once finished.\n\tif ( x > 1.0 ) {\n\t\tsign = -1.0;\n\t\tq = 2.0 - x;\n\t} else {\n\t\tsign = 1.0;\n\t\tq = x;\n\t}\n\tx = 1.0 - q;\n\n\t// x = 1-q <= 0.5\n\tif ( x <= 0.5 ) {\n\t\tg = x * ( x + 10.0 );\n\t\tr = rationalFcnR1( x );\n\t\treturn sign * ( (g*Y1) + (g*r) );\n\t}\n\t// q >= 0.25\n\tif ( q >= 0.25 ) {\n\t\tg = sqrt( -2.0 * ln(q) );\n\t\tq -= 0.25;\n\t\tr = rationalFcnR2( q );\n\t\treturn sign * ( g / (Y2+r) );\n\t}\n\tq = sqrt( -ln( q ) );\n\n\t// q < 3\n\tif ( q < 3.0 ) {\n\t\tqs = q - 1.125;\n\t\tr = rationalFcnR3( qs );\n\t\treturn sign * ( (Y3*q) + (r*q) );\n\t}\n\t// q < 6\n\tif ( q < 6.0 ) {\n\t\tqs = q - 3.0;\n\t\tr = rationalFcnR4( qs );\n\t\treturn sign * ( (Y4*q) + (r*q) );\n\t}\n\t// q < 18\n\tqs = q - 6.0;\n\tr = rationalFcnR5( qs );\n\treturn sign * ( (Y5*q) + (r*q) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = erfcinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0005087819496582806;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0005087819496582806 + (x * (-0.008368748197417368 + (x * (0.03348066254097446 + (x * (-0.012692614766297404 + (x * (-0.03656379714117627 + (x * (0.02198786811111689 + (x * (0.008226878746769157 + (x * (-0.005387729650712429 + (x * (0.0 + (x * 0.0))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (-0.9700050433032906 + (x * (-1.5657455823417585 + (x * (1.5622155839842302 + (x * (0.662328840472003 + (x * (-0.7122890234154284 + (x * (-0.05273963823400997 + (x * (0.07952836873415717 + (x * (-0.0023339375937419 + (x * 0.0008862163904564247))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (0.0 + (x * (-0.005387729650712429 + (x * (0.008226878746769157 + (x * (0.02198786811111689 + (x * (-0.03656379714117627 + (x * (-0.012692614766297404 + (x * (0.03348066254097446 + (x * (-0.008368748197417368 + (x * -0.0005087819496582806))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0008862163904564247 + (x * (-0.0023339375937419 + (x * (0.07952836873415717 + (x * (-0.05273963823400997 + (x * (-0.7122890234154284 + (x * (0.662328840472003 + (x * (1.5622155839842302 + (x * (-1.5657455823417585 + (x * (-0.9700050433032906 + (x * 1.0))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.20243350835593876;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.20243350835593876 + (x * (0.10526468069939171 + (x * (8.3705032834312 + (x * (17.644729840837403 + (x * (-18.851064805871424 + (x * (-44.6382324441787 + (x * (17.445385985570866 + (x * (21.12946554483405 + (x * -3.6719225470772936))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (6.242641248542475 + (x * (3.971343795334387 + (x * (-28.66081804998 + (x * (-20.14326346804852 + (x * (48.560921310873994 + (x * (10.826866735546016 + (x * (-22.643693341313973 + (x * 1.7211476576120028))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -3.6719225470772936 + (x * (21.12946554483405 + (x * (17.445385985570866 + (x * (-44.6382324441787 + (x * (-18.851064805871424 + (x * (17.644729840837403 + (x * (8.3705032834312 + (x * (0.10526468069939171 + (x * -0.20243350835593876))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.7211476576120028 + (x * (-22.643693341313973 + (x * (10.826866735546016 + (x * (48.560921310873994 + (x * (-20.14326346804852 + (x * (-28.66081804998 + (x * (3.971343795334387 + (x * (6.242641248542475 + (x * 1.0))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.1311027816799519;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.1311027816799519 + (x * (-0.16379404719331705 + (x * (0.11703015634199525 + (x * (0.38707973897260434 + (x * (0.3377855389120359 + (x * (0.14286953440815717 + (x * (0.029015791000532906 + (x * (0.0021455899538880526 + (x * (-6.794655751811263e-7 + (x * (2.8522533178221704e-8 + (x * -6.81149956853777e-10))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (3.4662540724256723 + (x * (5.381683457070069 + (x * (4.778465929458438 + (x * (2.5930192162362027 + (x * (0.848854343457902 + (x * (0.15226433829533179 + (x * (0.011059242293464892 + (x * (0.0 + (x * (0.0 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -6.81149956853777e-10 + (x * (2.8522533178221704e-8 + (x * (-6.794655751811263e-7 + (x * (0.0021455899538880526 + (x * (0.029015791000532906 + (x * (0.14286953440815717 + (x * (0.3377855389120359 + (x * (0.38707973897260434 + (x * (0.11703015634199525 + (x * (-0.16379404719331705 + (x * -0.1311027816799519))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (0.0 + (x * (0.0 + (x * (0.011059242293464892 + (x * (0.15226433829533179 + (x * (0.848854343457902 + (x * (2.5930192162362027 + (x * (4.778465929458438 + (x * (5.381683457070069 + (x * (3.4662540724256723 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0350353787183178;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0350353787183178 + (x * (-0.0022242652921344794 + (x * (0.018557330651423107 + (x * (0.009508047013259196 + (x * (0.0018712349281955923 + (x * (0.00015754461742496055 + (x * (0.00000460469890584318 + (x * (-2.304047769118826e-10 + (x * 2.6633922742578204e-12))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (1.3653349817554064 + (x * (0.7620591645536234 + (x * (0.22009110576413124 + (x * (0.03415891436709477 + (x * (0.00263861676657016 + (x * (0.00007646752923027944 + (x * (0.0 + (x * 0.0))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 2.6633922742578204e-12 + (x * (-2.304047769118826e-10 + (x * (0.00000460469890584318 + (x * (0.00015754461742496055 + (x * (0.0018712349281955923 + (x * (0.009508047013259196 + (x * (0.018557330651423107 + (x * (-0.0022242652921344794 + (x * -0.0350353787183178))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (0.0 + (x * (0.00007646752923027944 + (x * (0.00263861676657016 + (x * (0.03415891436709477 + (x * (0.22009110576413124 + (x * (0.7620591645536234 + (x * (1.3653349817554064 + (x * 1.0))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.016743100507663373;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.016743100507663373 + (x * (-0.0011295143874558028 + (x * (0.001056288621524929 + (x * (0.00020938631748758808 + (x * (0.000014962478375834237 + (x * (4.4969678992770644e-7 + (x * (4.625961635228786e-9 + (x * (-2.811287356288318e-14 + (x * 9.905570997331033e-17))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.5914293448864175 + (x * (0.1381518657490833 + (x * (0.016074608709367652 + (x * (0.0009640118070051656 + (x * (0.000027533547476472603 + (x * (2.82243172016108e-7 + (x * (0.0 + (x * 0.0))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 9.905570997331033e-17 + (x * (-2.811287356288318e-14 + (x * (4.625961635228786e-9 + (x * (4.4969678992770644e-7 + (x * (0.000014962478375834237 + (x * (0.00020938631748758808 + (x * (0.001056288621524929 + (x * (-0.0011295143874558028 + (x * -0.016743100507663373))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.0 + (x * (0.0 + (x * (2.82243172016108e-7 + (x * (0.000027533547476472603 + (x * (0.0009640118070051656 + (x * (0.016074608709367652 + (x * (0.1381518657490833 + (x * (0.5914293448864175 + (x * 1.0))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arccosine of a number.\n*\n* @module @stdlib/math/base/special/acos\n*\n* @example\n* var acos = require( '@stdlib/math/base/special/acos' );\n*\n* var v = acos( 1.0 );\n* // returns 0.0\n*\n* v = acos( 0.707 ); // ~pi/4\n* // returns ~0.7855\n*\n* v = acos( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar acos = require( './acos.js' );\n\n\n// EXPORTS //\n\nmodule.exports = acos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1995, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar asin = require( '@stdlib/math/base/special/asin' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar PIO4 = require( '@stdlib/constants/math/float64-fourth-pi' );\n\n\n// VARIABLES //\n\nvar MOREBITS = 6.123233995736765886130e-17; // pi/2 = PIO2 + MOREBITS.\n\n\n// MAIN //\n\n/**\n* Computes the arccosine of a number.\n*\n* ## Method\n*\n* -   Analytically,\n*\n*     ```tex\n*     \\operatorname{acos}(x) = \\frac{\\pi}{2} - \\operatorname{asin}(x)\n*     ```\n*\n*     However, if \\\\(\\|x\\|\\\\) is near \\\\(1\\\\), there is cancellation error in subtracting \\\\(\\opertorname{asin}(x)\\\\) from \\\\(\\pi/2\\\\). Hence, if \\\\(x < -0.5\\\\),\n*\n*     ```tex\n*     \\operatorname{acos}(x) = \\pi - 2.0 \\cdot \\operatorname{asin}(\\sqrt{(1+x)/2})\n*     ```\n*\n*     or, if \\\\(x > +0.5\\\\),\n*\n*     ```tex\n*     \\operatorname{acos}(x) = 2.0 \\cdot \\operatorname{asin}( \\sqrt{(1-x)/2} )}\n*     ```\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | arithmetic | domain | # trials | peak    | rms     |\n*     |:-----------|:------:|:---------|:--------|:--------|\n*     | DEC        | -1, 1  | 50000    | 3.3e-17 | 8.2e-18 |\n*     | IEEE       | -1, 1  | 10^6     | 2.2e-16 | 6.5e-17 |\n*\n*\n* @param {number} x - input value\n* @returns {number} arccosine (in radians)\n*\n* @example\n* var v = acos( 1.0 );\n* // returns 0.0\n*\n* @example\n* var v = acos( 0.707 ); // ~pi/4\n* // returns ~0.7855\n*\n* @example\n* var v = acos( NaN );\n* // returns NaN\n*/\nfunction acos( x ) {\n\tvar z;\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x < -1.0 || x > 1.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( x > 0.5 ) {\n\t\treturn 2.0 * asin( sqrt( 0.5 - (0.5*x) ) );\n\t}\n\tz = PIO4 - asin( x );\n\tz += MOREBITS;\n\tz += PIO4;\n\treturn z;\n}\n\n\n// EXPORTS //\n\nmodule.exports = acos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/special_functions/detail/t_distribution_inv.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaDeltaRatio = require( '@stdlib/math/base/special/gamma-delta-ratio' );\nvar evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar PI = require( '@stdlib/constants/math/float64-pi' );\nvar polyval1 = require( './polyval_co14.js' );\nvar polyval2 = require( './polyval_co15.js' );\nvar polyval3 = require( './polyval_co16.js' );\nvar polyval4 = require( './polyval_co17.js' );\nvar polyval5 = require( './polyval_co18.js' );\nvar polyval6 = require( './polyval_co19.js' );\nvar polyval7 = require( './polyval_co20.js' );\nvar polyval8 = require( './polyval_co21.js' );\nvar polyval9 = require( './polyval_co22.js' );\n\n\n// VARIABLES //\n\nvar c0 = 0.0;\n\n// Workspace for the polynomial coefficients:\nvar c = [ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Evaluates Student's t quantiles via a body series expansion. Tail and body series are due to Shaw.\n*\n* ## References\n*\n* -   Shaw, William T. 2006. \"Sampling Student's T distribution – use of the inverse cumulative distribution function.\" _Journal of Computational Finance_ 9 (4): 37–73. [www.mth.kcl.ac.uk/~shaww/web\\_page/papers/Tdistribution06.pdf](www.mth.kcl.ac.uk/~shaww/web_page/papers/Tdistribution06.pdf).\n*\n* @private\n* @param {PositiveNumber} df - degrees of freedom\n* @param {Probability} u - input probability\n* @returns {number} function value\n*/\nfunction inverseStudentsTBodySeries( df, u ) {\n\tvar idf;\n\tvar v;\n\n\t// Body series for small N, start with Eq 56 of Shaw:\n\tv = gammaDeltaRatio( df/2, 0.5 ) * sqrt( df*PI ) * ( u-0.5 );\n\n\t// Figure out what the coefficients are. They depend only on the degrees of freedom (Eq 57 of Shaw):\n\tidf = 1.0 / df;\n\tc[ 1 ] = polyval1( idf );\n\tc[ 2 ] = polyval2( idf );\n\tc[ 3 ] = polyval3( idf );\n\tc[ 4 ] = polyval4( idf );\n\tc[ 5 ] = polyval5( idf );\n\tc[ 6 ] = polyval6( idf );\n\tc[ 7 ] = polyval7( idf );\n\tc[ 8 ] = polyval8( idf );\n\tc[ 9 ] = polyval9( idf );\n\n\t// Result is then an odd polynomial in v (see Eq 56 of Shaw)...\n\treturn c0 + ( v*evalpoly( c, v*v ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = inverseStudentsTBodySeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.16666666666666666;\n\t}\n\treturn 0.16666666666666666 + (x * 0.16666666666666666);\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.058333333333333334;\n\t}\n\treturn 0.058333333333333334 + (x * (0.06666666666666667 + (x * 0.008333333333333333))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0251984126984127;\n\t}\n\treturn 0.0251984126984127 + (x * (0.026785714285714284 + (x * (0.0017857142857142857 + (x * 0.0001984126984126984))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.012039792768959435;\n\t}\n\treturn 0.012039792768959435 + (x * (0.010559964726631394 + (x * (-0.0011078042328042327 + (x * (0.0003747795414462081 + (x * 0.0000027557319223985893))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.003837005972422639;\n\t}\n\treturn 0.003837005972422639 + (x * (0.00610392115600449 + (x * (-0.0016095979637646305 + (x * (0.0005945867404200738 + (x * (-0.00006270542728876062 + (x * 2.505210838544172e-8))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0032177478835464946;\n\t}\n\treturn 0.0032177478835464946 + (x * (0.0010898206731540065 + (x * (-0.0012579159844784845 + (x * (0.0006908420797309686 + (x * (-0.00016376804137220805 + (x * (0.0000154012654012654 + (x * 1.6059043836821613e-10))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.001743826229834001;\n\t}\n\treturn 0.001743826229834001 + (x * (0.00003353097688001788 + (x * (-0.0007624513544032393 + (x * (0.0006451304695145635 + (x * (-0.000249472580470431 + (x * (0.000049255746366361444 + (x * (-0.0000039851014346715405 + (x * 7.647163731819816e-13))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0009647274732138864;\n\t}\n\treturn 0.0009647274732138864 + (x * (-0.0003110108632631878 + (x * (-0.00036307660358786886 + (x * (0.0005140660578834113 + (x * (-0.00029133414466938067 + (x * (0.00009086710793521991 + (x * (-0.000015303004486655377 + (x * (0.0000010914179173496788 + (x * 2.8114572543455206e-15))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0005422926281312969;\n\t}\n\treturn 0.0005422926281312969 + (x * (-0.0003694266780000966 + (x * (-0.00010230378073700413 + (x * (0.00035764655430568635 + (x * (-0.00028690924218514614 + (x * (0.00012645437628698076 + (x * (-0.000033202652391372056 + (x * (0.000004890304529197534 + (x * (-3.123956959982987e-7 + (x * 8.22063524662433e-18))))))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/detail/t_distribution_inv.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaDeltaRatio = require( '@stdlib/math/base/special/gamma-delta-ratio' );\nvar evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar PI = require( '@stdlib/constants/math/float64-pi' );\n\n\n// VARIABLES //\n\n// Array for the coefficients d(k), these depend only on the number of degrees of freedom df, so at least in theory we could tabulate these for fixed df, see p15 of Shaw:\nvar d = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Evaluates Student's t quantiles via a tail series expansion. Tail and body series are due to Shaw.\n*\n* ## References\n*\n* -   Shaw, William T. 2006. \"Sampling Student's T distribution – use of the inverse cumulative distribution function.\" _Journal of Computational Finance_ 9 (4): 37–73. [www.mth.kcl.ac.uk/~shaww/web\\_page/papers/Tdistribution06.pdf](www.mth.kcl.ac.uk/~shaww/web_page/papers/Tdistribution06.pdf).\n*\n* @private\n* @param {number} df - degrees of freedom\n* @param {number} v - function value\n* @returns {number} tail value\n*/\nfunction inverseStudentsTTailSeries( df, v ) { // eslint-disable-line id-length\n\tvar result;\n\tvar power;\n\tvar div;\n\tvar np2;\n\tvar np4;\n\tvar np6;\n\tvar rn;\n\tvar w;\n\n\t// Tail series expansion, see section 6 of Shaw's paper. `w` is calculated using Eq 60:\n\tw = gammaDeltaRatio( df/2.0, 0.5 ) * sqrt( df*PI ) * v;\n\n\t// Define some variables:\n\tnp2 = df + 2.0;\n\tnp4 = df + 4.0;\n\tnp6 = df + 6.0;\n\n\td[ 0 ] = 1.0;\n\td[ 1 ] = -(df+1.0) / (2.0*np2);\n\tnp2 *= (df + 2.0);\n\td[ 2 ] = -df * (df+1.0) * (df+3.0) / (8.0*np2*np4);\n\tnp2 *= df + 2.0;\n\td[ 3 ] = -df * (df+1.0) * (df+5.0) * (((3.0*df) + 7.0) * df - 2.0) / (48.0*np2*np4*np6); // eslint-disable-line max-len, no-mixed-operators\n\tnp2 *= (df + 2.0);\n\tnp4 *= (df + 4.0);\n\td[ 4 ] = -df * (df+1.0) * (df+7.0) * ( (((((15.0*df) + 154.0) * df + 465.0) * df + 286.0) * df - 336.0) * df + 64.0) / (384.0*np2*np4*np6*(df+8.0)); // eslint-disable-line max-len, no-mixed-operators\n\tnp2 *= (df + 2.0);\n\td[ 5 ] = -df * (df+1.0) * (df+3.0) * (df+9.0) * (((((((35.0 * df + 452.0) * df+1573.0) * df + 600.0) * df - 2020.0) * df) + 928.0) * df - 128.0) / (1280.0*np2*np4*np6*(df+8.0) * (df+10.0)); // eslint-disable-line max-len, no-mixed-operators\n\tnp2 *= (df + 2.0);\n\tnp4 *= (df + 4.0);\n\tnp6 *= (df + 6.0);\n\td[ 6 ] = -df * (df+1.0) * (df+11.0) * ((((((((((((945.0*df) + 31506.0) * df + 425858.0) * df + 2980236.0) * df + 11266745.0) * df + 20675018.0) * df + 7747124.0) * df - 22574632.0) * df - 8565600.0) * df + 18108416.0) * df - 7099392.0) * df + 884736.0) / (46080.0*np2*np4*np6*(df+8.0) * (df+10.0) * (df+12.0)); // eslint-disable-line max-len, no-mixed-operators\n\n\t// Now bring everything together to provide the result this is Eq 62 of Shaw:\n\trn = sqrt( df );\n\tdiv = pow( rn*w, 1.0/df );\n\tpower = div * div;\n\tresult = evalpoly( d, power );\n\tresult *= rn;\n\tresult /= div;\n\treturn -result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = inverseStudentsTTailSeries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_61_0/boost/math/special_functions/detail/t_distribution_inv.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n/* eslint-disable no-mixed-operators */\n\n'use strict';\n\n// MODULES //\n\nvar erfcinv = require( '@stdlib/math/base/special/erfcinv' );\nvar expm1 = require( '@stdlib/math/base/special/expm1' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar HALF_PI = require( '@stdlib/constants/math/float64-half-pi' );\nvar SQRT2 = require( '@stdlib/constants/math/float64-sqrt-two' );\n\n\n// MAIN //\n\n/**\n* Evaluates Student's t quantiles via a method due to Hill.\n*\n* ## References\n*\n* -   Hill, G. W. 1970. \"Algorithm 396: Student's T-Quantiles.\" _Communications of the ACM_ 13 (10). New York, NY, USA: ACM: 619–20. doi:[10.1145/355598.355600](https://doi.org/10.1145/355598.355600).\n*\n* @private\n* @param {PositiveNumber} ndf - degrees of freedom\n* @param {Probability} u - input probability\n* @returns {number} function value\n*/\nfunction inverseStudentsTHill( ndf, u ) {\n\tvar a;\n\tvar b;\n\tvar c;\n\tvar d;\n\tvar q;\n\tvar x;\n\tvar y;\n\n\tif ( ndf > 1e20 ) {\n\t\treturn -erfcinv( 2 * u ) * SQRT2;\n\t}\n\ta = 1.0 / ( ndf - 0.5 );\n\tb = 48.0 / (a * a);\n\tc = ( ( ( ( (20700.0*a/b) - 98.0 ) * a ) - 16.0 ) * a ) + 96.36;\n\td = ( ( ( (94.5/(b+c)) - 3.0 ) / b ) + 1.0 ) * sqrt( a * HALF_PI ) * ndf;\n\ty = pow( d * 2.0 * u, 2.0 / ndf );\n\n\tif ( y > ( 0.05 + a ) ) {\n\t\t// Asymptotic inverse expansion about normal:\n\t\tx = -erfcinv( 2.0 * u ) * SQRT2;\n\t\ty = x * x;\n\n\t\tif ( ndf < 5.0 ) {\n\t\t\tc += 0.3 * ( ndf-4.5 ) * ( x + 0.6 );\n\t\t}\n\t\tc += ( ( ( ( ( ( (0.05*d*x)-5.0 ) * x ) - 7.0 ) * x )- 2.0 ) * x ) + b;\n\t\ty = ((((((0.4*y+6.3)*y)+36.0) * y + 94.5) / c - y - 3.0) / b + 1.0) * x;\n\t\ty = expm1( a * y * y );\n\t} else {\n\t\ty = ((1.0 / ( ( (ndf+6.0) / (ndf*y) - 0.089 * d - 0.822 ) *\n\t\t(ndf+2.0) * 3.0 ) + 0.5 / (ndf+4.0)) * y - 1.0) *\n\t\t(ndf+1.0) / (ndf+2.0) + 1.0 / y;\n\t}\n\tq = sqrt( ndf * y );\n\treturn -q;\n}\n\n\n// EXPORTS //\n\nmodule.exports = inverseStudentsTHill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\nvar erfcinv = require( '@stdlib/math/base/special/erfcinv' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar SQRT2 = require( '@stdlib/constants/math/float64-sqrt-two' );\n\n\n// VARIABLES //\n\n// Workspaces for the polynomial coefficients:\nvar workspace = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ];\nvar terms = [ 0.0, 0.0, 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Carries out the first method by Temme (described in section 2).\n*\n* ## References\n*\n* -   Temme, N. M. 1992. \"Incomplete Laplace Integrals: Uniform Asymptotic Expansion with Application to the Incomplete Beta Function.\" _Journal of Computational and Applied Mathematics_ 41 (1–2): 1638–63. doi:[10.1016/0377-0427(92)90244-R](https://doi.org/10.1016/0377-0427(92)90244-R).\n*\n* @private\n* @param {PositiveNumber} a - function parameter\n* @param {PositiveNumber} b - function parameter\n* @param {Probability} z - function parameter\n* @returns {number} function value\n*/\nfunction temme1( a, b, z ) {\n\tvar eta0;\n\tvar eta2;\n\tvar eta;\n\tvar B2;\n\tvar B3;\n\tvar B;\n\tvar c;\n\n\t// Get the first approximation for eta from the inverse error function (Eq: 2.9 and 2.10):\n\teta0 = erfcinv( 2.0 * z );\n\teta0 /= -sqrt( a / 2.0 );\n\n\tterms[ 0 ] = eta0;\n\n\t// Calculate powers:\n\tB = b - a;\n\tB2 = B * B;\n\tB3 = B2 * B;\n\n\t// Calculate correction terms:\n\n\t// See eq following 2.15:\n\tworkspace[ 0 ] = -B * SQRT2 / 2;\n\tworkspace[ 1 ] = ( 1 - (2.0*B) ) / 8.0;\n\tworkspace[ 2 ] = -(B * SQRT2 / 48.0);\n\tworkspace[ 3 ] = -1.0 / 192.0;\n\tworkspace[ 4 ] = -B * SQRT2 / 3840.0;\n\tworkspace[ 5 ] = 0.0;\n\tworkspace[ 6 ] = 0.0;\n\tterms[ 1 ] = evalpoly( workspace, eta0 );\n\n\t// Eq Following 2.17:\n\tworkspace[ 0 ] = B * SQRT2 * ( (3.0*B) - 2.0) / 12.0;\n\tworkspace[ 1 ] = ( (20.0*B2) - (12.0*B) + 1.0 ) / 128.0;\n\tworkspace[ 2 ] = B * SQRT2 * ( (20.0*B) - 1.0) / 960.0;\n\tworkspace[ 3 ] = ( (16.0*B2) + (30.0*B) - 15.0) / 4608.0;\n\tworkspace[ 4 ] = B * SQRT2 * ( (21.0*B) + 32) / 53760.0;\n\tworkspace[ 5 ] = (-(32.0*B2) + 63.0) / 368640.0;\n\tworkspace[ 6 ] = -B * SQRT2 * ( (120.0*B) + 17.0) / 25804480.0;\n\tterms[ 2 ] = evalpoly( workspace, eta0 );\n\n\t// Eq Following 2.17:\n\tworkspace[ 0 ] = B * SQRT2 * ( (-75*B2) + (80.0*B) - 16.0) / 480.0;\n\tworkspace[ 1 ] = ( (-1080.0*B3) + (868.0*B2) - (90.0*B) - 45.0) / 9216.0;\n\tworkspace[ 2 ] = B * SQRT2 * ( (-1190.0*B2) + (84.0*B) + 373.0) / 53760.0;\n\tworkspace[ 3 ] = ( (-2240.0*B3)-(2508.0*B2)+(2100.0*B)-165.0 ) / 368640.0;\n\tworkspace[ 4 ] = 0.0;\n\tworkspace[ 5 ] = 0.0;\n\tworkspace[ 6 ] = 0.0;\n\tterms[ 3 ] = evalpoly( workspace, eta0 );\n\n\t// Bring them together to get a final estimate for eta:\n\teta = evalpoly( terms, 1.0/a );\n\n\t// Now we need to convert eta to the return value `x`, by solving the appropriate quadratic equation:\n\teta2 = eta * eta;\n\tc = -exp( -eta2 / 2.0 );\n\tif ( eta2 === 0.0 ) {\n\t\treturn 0.5;\n\t}\n\treturn ( 1.0 + ( eta * sqrt( ( 1.0+c ) / eta2 ) ) ) / 2.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = temme1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\nvar erfcinv = require( '@stdlib/math/base/special/erfcinv' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar sin = require( '@stdlib/math/base/special/sin' );\nvar cos = require( '@stdlib/math/base/special/cos' );\nvar temmeRootFinder = require( './root_finder.js');\nvar newtonRaphsonIterate = require( './newton_raphson.js' );\nvar polyval1 = require( './polyval_co1.js' );\nvar polyval2 = require( './polyval_co2.js' );\nvar polyval3 = require( './polyval_co3.js' );\nvar polyval4 = require( './polyval_co4.js' );\nvar polyval5 = require( './polyval_co5.js' );\nvar polyval6 = require( './polyval_co6.js' );\nvar polyval7 = require( './polyval_co7.js' );\nvar polyval8 = require( './polyval_co8.js' );\nvar polyval9 = require( './polyval_co9.js' );\nvar polyval10 = require( './polyval_co10.js' );\nvar polyval11 = require( './polyval_co11.js' );\nvar polyval12 = require( './polyval_co12.js' );\nvar polyval13 = require( './polyval_co13.js' );\n\n\n// VARIABLES //\n\n// Workspaces for polynomial coefficients:\nvar workspace = [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ];\nvar terms = [ 0.0, 0.0, 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Carries out the second method by Temme (described in section 3).\n*\n* ## References\n*\n* -   Temme, N. M. 1992. \"Incomplete Laplace Integrals: Uniform Asymptotic Expansion with Application to the Incomplete Beta Function.\" _Journal of Computational and Applied Mathematics_ 41 (1–2): 1638–63. doi:[10.1016/0377-0427(92)90244-R](https://doi.org/10.1016/0377-0427(92)90244-R).\n*\n* @private\n* @param {number} z - function parameter\n* @param {number} r - function parameter\n* @param {number} theta - function parameter\n* @returns {number} function value\n*/\nfunction temme2( z, r, theta ) {\n\tvar upper;\n\tvar lower;\n\tvar alpha;\n\tvar roots;\n\tvar eta0;\n\tvar eta;\n\tvar sc7;\n\tvar sc6;\n\tvar sc5;\n\tvar sc4;\n\tvar sc3;\n\tvar sc2;\n\tvar sc;\n\tvar lu;\n\tvar s2;\n\tvar c2;\n\tvar c;\n\tvar s;\n\tvar u;\n\tvar x;\n\n\t// Get first estimate for eta, see Eq 3.9 and 3.10, but note there is a typo in Eq 3.10:\n\teta0 = erfcinv( 2.0*z ) / (-sqrt( r/2.0 ));\n\n\ts = sin( theta );\n\tc = cos( theta );\n\n\t// Now we need to perturb eta0 to get eta, which we do by evaluating the polynomial in 1/r at the bottom of page 151, to do this we first need the error terms e1, e2 e3 which we'll fill into the array \"terms\".  Since these terms are themselves polynomials, we'll need another array \"workspace\" to calculate those...\n\tterms[ 0 ] = eta0;\n\n\t// Some powers of sin(theta) cos(theta) that we'll need later:\n\ts2 = s * s;\n\tc2 = c * c;\n\tsc = s * c;\n\tsc2 = sc * sc;\n\tsc3 = sc2 * sc;\n\tsc4 = sc2 * sc2;\n\tsc5 = sc2 * sc3;\n\tsc6 = sc3 * sc3;\n\tsc7 = sc4 * sc3;\n\n\t// Calculate e1 and put it in terms[1], see the middle of page 151:\n\tworkspace[ 0 ] = ((2.0*s2) - 1.0) / ( 3.0*sc );\n\tworkspace[ 1 ] = -polyval1( s2 ) / (36.0*sc2);\n\tworkspace[ 2 ] = polyval2( s2 ) / (1620.0*sc3);\n\tworkspace[ 3 ] = polyval3( s2 ) / (6480.0*sc4);\n\tworkspace[ 4 ] = polyval4( s2 ) / (90720.0*sc5);\n\tworkspace[ 5 ] = 0.0;\n\tterms[ 1 ] = evalpoly( workspace, eta0 );\n\n\t// Now evaluate e2 and put it in terms[2]:\n\tworkspace[ 0 ] = -polyval5( s2 ) / (405.0*sc3);\n\tworkspace[ 1 ] = polyval6( s2 ) / (2592.0*sc4);\n\tworkspace[ 2 ] = -polyval7( s2 ) / (204120.0*sc5);\n\tworkspace[ 3 ] = -polyval8( s2 ) / (2099520.0*sc6);\n\tworkspace[ 4 ] = 0.0;\n\tworkspace[ 5 ] = 0.0;\n\tterms[ 2 ] = evalpoly( workspace, eta0 );\n\n\t// And e3, and put it in terms[3]:\n\tworkspace[ 0 ] = polyval9( s2 ) / (102060.0*sc5);\n\tworkspace[ 1 ] = -polyval10( s2 ) / (20995200.0*sc6);\n\tworkspace[ 2 ] = polyval11( s2 ) / (36741600.0*sc7);\n\tworkspace[ 3 ] = 0.0;\n\tworkspace[ 4 ] = 0.0;\n\tworkspace[ 5 ] = 0.0;\n\tterms[ 3 ] = evalpoly( workspace, eta0 );\n\n\t// Bring the correction terms together to evaluate eta; this is the last equation on page 151:\n\teta = evalpoly( terms, 1.0/r );\n\n\t// Now that we have eta we need to back solve for x, we seek the value of x that gives eta in Eq 3.2. The two methods used are described in section 5. Begin by defining a few variables we'll need later:\n\talpha = c / s;\n\talpha *= alpha;\n\tlu = ( -( eta*eta )/( 2.0*s2 ) ) + ln(s2) + ( c2*ln(c2)/s2 );\n\n\t// Temme doesn't specify what value to switch on here, but this seems to work pretty well:\n\tif ( abs(eta) < 0.7 ) {\n\t\t// Small eta use the expansion Temme gives in the second equation of section 5, it's a polynomial in eta:\n\t\tworkspace[ 0 ] = s2;\n\t\tworkspace[ 1 ] = sc;\n\t\tworkspace[ 2 ] = (1.0-(2.0*s2)) / 3.0;\n\t\tworkspace[ 3 ] = polyval12( s2 ) / ( 36.0*sc );\n\t\tworkspace[ 4 ] = polyval13( s2 ) / ( 270.0*sc2 );\n\t\tworkspace[ 5 ] = 0.0;\n\t\tx = evalpoly( workspace, eta );\n\t} else {\n\t\t// If eta is large we need to solve Eq 3.2 more directly, begin by getting an initial approximation for x from the last equation on page 155, this is a polynomial in u:\n\t\tu = exp( lu );\n\t\tworkspace[ 0 ] = u;\n\t\tworkspace[ 1 ] = alpha;\n\t\tworkspace[ 2 ] = 0.0;\n\t\tworkspace[ 3 ] = 3.0 * alpha * ((3.0*alpha)+1.0) / 6.0;\n\t\tworkspace[ 4 ] = 4.0 * alpha * ((4.0*alpha)+1.0) * ((4.0*alpha)+2.0) / 24.0; // eslint-disable-line max-len\n\t\tworkspace[ 5 ] = 5.0 * alpha * ((5.0*alpha)+1.0) * ((5.0*alpha)+2.0) * ((5.0*alpha)+3.0) / 120.0; // eslint-disable-line max-len\n\t\tx = evalpoly( workspace, u );\n\n\t\t// At this point we may or may not have the right answer, Eq-3.2 has two solutions for x for any given eta, however the mapping in 3.2 is 1:1 with the sign of eta and x-sin^2(theta) being the same. So we can check if we have the right root of 3.2, and if not switch x for 1-x.  This transformation is motivated by the fact that the distribution is *almost* symmetric so 1-x will be in the right ball park for the solution:\n\t\tif ( (x-s2)*eta < 0.0 ) {\n\t\t\tx = 1.0 - x;\n\t\t}\n\t}\n\t// The final step is a few Newton-Raphson iterations to clean up our approximation for x, this is pretty cheap in general, and very cheap compared to an incomplete beta evaluation. The limits set on x come from the observation that the sign of eta and x-sin^2(theta) are the same.\n\tif ( eta < 0.0 ) {\n\t\tlower = 0.0;\n\t\tupper = s2;\n\t} else {\n\t\tlower = s2;\n\t\tupper = 1.0;\n\t}\n\t// If our initial approximation is out of bounds then bisect:\n\tif ( x < lower || x > upper ) {\n\t\tx = (lower+upper) / 2.0;\n\t}\n\troots = temmeRootFinder( -lu, alpha );\n\n\t// And iterate:\n\tx = newtonRaphsonIterate( roots, x, lower, upper, 32, 100 );\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = temme2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the signum function.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var sign = signum( -5.0 );\n* // returns -1.0\n*\n* @example\n* var sign = signum( 5.0 );\n* // returns 1.0\n*\n* @example\n* var sign = signum( -0.0 );\n* // returns -0.0\n*\n* @example\n* var sign = signum( 0.0 );\n* // returns 0.0\n*\n* @example\n* var sign = signum( NaN );\n* // returns NaN\n*/\nfunction signum( x ) {\n\tif ( x === 0.0 || isnan( x ) ) {\n\t\treturn x; // addresses both +-0\n\t}\n\treturn ( x < 0.0 ) ? -1.0 : 1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = signum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -1.0;\n\t}\n\treturn -1.0 + (x * (-5.0 + (x * 5.0)));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn 1.0 + (x * (21.0 + (x * (-69.0 + (x * 46.0)))));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 7.0;\n\t}\n\treturn 7.0 + (x * (-2.0 + (x * (33.0 + (x * (-62.0 + (x * 31.0)))))));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 25.0;\n\t}\n\treturn 25.0 + (x * (-52.0 + (x * (-17.0 + (x * (88.0 + (x * (-115.0 + (x * 46.0))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 7.0;\n\t}\n\treturn 7.0 + (x * (12.0 + (x * (-78.0 + (x * 52.0)))));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -7.0;\n\t}\n\treturn -7.0 + (x * (2.0 + (x * (183.0 + (x * (-370.0 + (x * 185.0)))))));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -533.0;\n\t}\n\treturn -533.0 + (x * (776.0 + (x * (-1835.0 + (x * (10240.0 + (x * (-13525.0 + (x * 5410.0))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -1579.0;\n\t}\n\treturn -1579.0 + (x * (3747.0 + (x * (-3372.0 + (x * (-15821.0 + (x * (45588.0 + (x * (-45213.0 + (x * 15071.0))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 449.0;\n\t}\n\treturn 449.0 + (x * (-1259.0 + (x * (-769.0 + (x * (6686.0 + (x * (-9260.0 + (x * 3704.0))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 63149.0;\n\t}\n\treturn 63149.0 + (x * (-151557.0 + (x * (140052.0 + (x * (-727469.0 + (x * (2239932.0 + (x * (-2251437.0 + (x * 750479.0))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 29233.0;\n\t}\n\treturn 29233.0 + (x * (-78755.0 + (x * (105222.0 + (x * (146879.0 + (x * (-1602610.0 + (x * (3195183.0 + (x * (-2554139.0 + (x * 729754.0))))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn 1.0 + (x * (-13.0 + (x * 13.0)));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn 1.0 + (x * (21.0 + (x * (-69.0 + (x * 46.0)))));\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n/* eslint-disable no-mixed-operators, max-len */\n\n'use strict';\n\n// MODULES //\n\nvar gammaincinv = require( '@stdlib/math/base/special/gammaincinv' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar SMALLEST_SUBNORMAL = require( '@stdlib/constants/math/float64-smallest-subnormal' );\nvar temmeRootFinder = require( './root_finder.js' );\nvar newtonRaphsonIterate = require( './newton_raphson.js' );\n\n\n// MAIN //\n\n/**\n* Carries out the third method by Temme (described in section 4).\n*\n* ## References\n*\n* -   Temme, N. M. 1992. \"Incomplete Laplace Integrals: Uniform Asymptotic Expansion with Application to the Incomplete Beta Function.\" _Journal of Computational and Applied Mathematics_ 41 (1–2): 1638–63. doi:[10.1016/0377-0427(92)90244-R](https://doi.org/10.1016/0377-0427(92)90244-R).\n*\n* @private\n* @param {PositiveNumber} a - function parameter\n* @param {PositiveNumber} b - function parameter\n* @param {Probability} p - function parameter\n* @param {Probability} q - probability equal to `1-p`\n* @returns {number} function value\n*/\nfunction temme3( a, b, p, q ) {\n\tvar cross;\n\tvar roots;\n\tvar lower;\n\tvar upper;\n\tvar eta0;\n\tvar eta;\n\tvar w10;\n\tvar w12;\n\tvar w13;\n\tvar w14;\n\tvar e1;\n\tvar e2;\n\tvar e3;\n\tvar mu;\n\tvar d2;\n\tvar d3;\n\tvar d4;\n\tvar w2;\n\tvar w3;\n\tvar w4;\n\tvar w5;\n\tvar w6;\n\tvar w7;\n\tvar w8;\n\tvar w9;\n\tvar w1;\n\tvar d;\n\tvar w;\n\tvar u;\n\tvar x;\n\n\t// Begin by getting an initial approximation for the quantity eta from the dominant part of the incomplete beta:\n\tif ( p < q ) {\n\t\teta0 = gammaincinv( p, b, true );\n\t} else {\n\t\teta0 = gammaincinv( q, b, false );\n\t}\n\teta0 /= a;\n\n\t// Define the variables and powers we'll need later on:\n\tmu = b / a;\n\tw = sqrt( 1.0+mu );\n\tw2 = w * w;\n\tw3 = w2 * w;\n\tw4 = w2 * w2;\n\tw5 = w3 * w2;\n\tw6 = w3 * w3;\n\tw7 = w4 * w3;\n\tw8 = w4 * w4;\n\tw9 = w5 * w4;\n\tw10 = w5 * w5;\n\td = eta0 - mu;\n\td2 = d * d;\n\td3 = d2 * d;\n\td4 = d2 * d2;\n\tw1 = w + 1.0;\n\tw12 = w1 * w1;\n\tw13 = w1 * w12;\n\tw14 = w12 * w12;\n\n\t// Now we need to compute the perturbation error terms that convert eta0 to eta, these are all polynomials of polynomials. Probably these should be re-written to use tabulated data (see examples above), but it's less of a win in this case as we need to calculate the individual powers for the denominator terms anyway, so we might as well use them for the numerator-polynomials as well. Refer to p154-p155 for the details of these expansions:\n\te1 = (w+2.0) * (w-1.0) / (3.0*w);\n\te1 += (w3 + 9.0*w2 + 21.0*w + 5.0) * d / (36.0*w2*w1);\n\te1 -= (w4 - 13.0*w3 + 69.0*w2 + 167.0*w + 46.0) * d2 / (1620.0*w12*w3);\n\te1 -= (7.0*w5 + 21.0*w4 + 70.0*w3 + 26.0*w2 - 93.0*w - 31.0) * d3 / (6480.0*w13*w4);\n\te1 -= (75.0*w6 + 202.0*w5 + 188.0*w4 - 888.0*w3 - 1345.0*w2 + 118.0*w + 138.0) * d4 / (272160.0*w14*w5);\n\n\te2 = (28.0*w4 + 131.0*w3 + 402.0*w2 + 581.0*w + 208.0) * (w-1.0) / (1620.0*w1*w3);\n\te2 -= (35.0*w6 - 154.0*w5 - 623.0*w4 - 1636.0*w3 - 3983.0*w2 - 3514.0*w - 925.0) * d / (12960.0*w12*w4);\n\te2 -= (2132.0*w7 + 7915.0*w6 + 16821.0*w5 + 35066.0*w4 + 87490.0*w3 + 141183.0*w2 + 95993.0*w + 21640.0) * d2 / (816480.0*w5*w13);\n\te2 -= (11053.0*w8 + 53308.0*w7 + 117010.0*w6 + 163924.0*w5 + 116188.0*w4 - 258428.0*w3 - 677042.0*w2 - 481940.0*w - 105497.0) * d3 / (14696640.0*w14*w6);\n\n\te3 = -((3592.0*w7 + 8375.0*w6 - 1323.0*w5 - 29198.0*w4 - 89578.0*w3 - 154413.0*w2 - 116063.0*w - 29632.0) * (w-1.0)) / (816480.0*w5*w12);\n\te3 -= (442043.0*w9 + 2054169.0*w8 + 3803094.0*w7 + 3470754.0*w6 + 2141568.0*w5 - 2393568.0*w4 - 19904934.0*w3 - 34714674.0*w2 - 23128299.0*w - 5253353.0) * d / (146966400.0*w6*w13);\n\te3 -= (116932.0*w10 + 819281.0*w9 + 2378172.0*w8 + 4341330.0*w7 + 6806004.0*w6 + 10622748.0*w5 + 18739500.0*w4 + 30651894.0*w3 + 30869976.0*w2 + 15431867.0*w + 2919016.0) * d2 / (146966400.0*w14*w7);\n\n\t// Combine eta0 and the error terms to compute eta (Second equation p155):\n\teta = eta0 + (e1/a) + (e2/(a*a)) + (e3/(a*a*a));\n\n\t/*\n\t\tNow we need to solve Eq 4.2 to obtain x.  For any given value of\n\t\teta there are two solutions to this equation, and since the distribution\n\t\tmay be very skewed, these are not related by x ~ 1-x we used when\n\t\timplementing section 3 above.  However we know that:\n\n\t\t\tcross < x <= 1       ; iff eta < mu\n\t\t\t\tx == cross   ; iff eta == mu\n\t\t\t\t0 <= x < cross    ; iff eta > mu\n\n\t\tWhere cross == 1 / (1 + mu)\n\t\tMany thanks to Prof Temme for clarifying this point. Therefore we'll just jump straight into Newton iterations to solve Eq 4.2 using these bounds, and simple bisection as the first guess, in practice this converges pretty quickly and we only need a few digits correct anyway:\n\t*/\n\tif ( eta <= 0 ) {\n\t\teta = SMALLEST_SUBNORMAL;\n\t}\n\tu = eta - ( mu*ln(eta) ) + ( ( 1.0+mu ) * ln( 1.0+mu ) ) - mu;\n\tcross = 1.0 / ( 1.0+mu );\n\tlower = (eta < mu) ? cross : 0.0;\n\tupper = (eta < mu) ? 1.0 : cross;\n\tx = (lower+upper) / 2.0;\n\troots = temmeRootFinder( u, mu );\n\treturn newtonRaphsonIterate( roots, x, lower, upper, 32, 100 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = temme3;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the inverse of the lower incomplete gamma function.\n*\n* @module @stdlib/math/base/special/gammaincinv\n*\n* @example\n* var gammaincinv = require( '@stdlib/math/base/special/gammaincinv' );\n*\n* var val = gammaincinv( 0.5, 2.0 );\n* // returns ~1.678\n*\n* val = gammaincinv( 0.1, 10.0 );\n* // returns ~6.221\n*\n* val = gammaincinv( 0.75, 3.0 );\n* // returns ~3.92\n*\n* val = gammaincinv( 0.75, 3.0, true );\n* // returns ~1.727\n*\n* val = gammaincinv( 0.75, NaN );\n* // returns NaN\n*\n* val = gammaincinv( NaN, 3.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar gammaincinv = require( './gammaincinv.js' );\n\n\n// EXPORTS //\n\nmodule.exports = gammaincinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* Translated from the Fortran module by\n* ----------------------------------------------------------------------\n* Authors:\n*  Amparo Gil    (U. Cantabria, Santander, Spain)\n*                 e-mail: amparo.gil@unican.es\n*  Javier Segura (U. Cantabria, Santander, Spain)\n*                 e-mail: javier.segura@unican.es\n*  Nico M. Temme (CWI, Amsterdam, The Netherlands)\n*                 e-mail: nico.temme@cwi.nl\n* ---------------------------------------------------------------------\n*/\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar FLOAT32_SMALLEST = require( '@stdlib/constants/math/float32-smallest-normal' );\nvar PINF = require( '@stdlib/constants/math/float64-pinf' );\nvar compute = require( './compute.js' );\n\n\n// MAIN //\n\n/**\n* Inverts the lower gamma function; i.e., computes `xr` such that `P(a,xr) = p`.\n*\n* ## Method\n*\n* The present code uses different methods of computation depending on the values of the input values: Taylor, asymptotic expansions and high-order Newton methods.\n*\n* ## Notes\n*\n* -   The claimed accuracy obtained using this inversion routine is near `1e-12`.\n*\n* ## References\n*\n* -   A. Gil, J. Segura and N.M. Temme, GammaCHI: a package for the inversion and computation of the gamma and chi-square distribution functions (central and noncentral). Computer Physics Commun\n* -   A. Gil, J. Segura and N.M. Temme. Efficient and accurate algorithms for the computation and inversion of the incomplete gamma function ratios. SIAM J Sci Comput. (2012) 34(6), A2965-A2981\n*\n*\n* @param {Probability} p - probability value\n* @param {number} a - scale parameter\n* @param {boolean} [upper=false] - boolean indicating if the function should invert the upper tail of the incomplete gamma function instead; i.e., compute `xr` such that `Q(a,xr) = p`.\n* @returns {number} function value of the inverse\n*/\nfunction gammaincinv( p, a, upper ) {\n\tif ( isnan( p ) || isnan( a ) ) {\n\t\treturn NaN;\n\t}\n\tif ( a < FLOAT32_SMALLEST ) {\n\t\treturn NaN;\n\t}\n\tif ( p > 1.0 || p < 0.0 ) {\n\t\treturn NaN;\n\t}\n\t// Case: invert upper gamma function\n\tif ( upper === true ) {\n\t\tif ( p === 0.0 ) {\n\t\t\treturn PINF;\n\t\t}\n\t\tif ( p === 1.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn compute( a, 1.0-p, p );\n\t}\n\t// Default: invert lower gamma function\n\tif ( p === 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( p === 1.0 ) {\n\t\treturn PINF;\n\t}\n\treturn compute( a, p, 1.0-p );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gammaincinv;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-statements */\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar evalpoly = require( '@stdlib/math/base/tools/evalpoly' );\nvar gammaln = require( '@stdlib/math/base/special/gammaln' );\nvar erfcinv = require( '@stdlib/math/base/special/erfcinv' );\nvar gamma = require( '@stdlib/math/base/special/gamma' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar SQRT_TWO_PI = require( '@stdlib/constants/math/float64-sqrt-two-pi' );\nvar MAX_FLOAT32 = require( '@stdlib/constants/math/float32-max' );\nvar TWO_PI = require( '@stdlib/constants/math/float64-two-pi' );\nvar higherNewton = require( './higher_newton.js' );\nvar lambdaeta = require( './lambdaeta.js' );\nvar gamstar = require( './gamstar.js' );\nvar eps1 = require( './eps1.js' );\nvar eps2 = require( './eps2.js' );\nvar eps3 = require( './eps3.js' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'gammaincinv:compute' );\nvar HALF = 0.5;\nvar ONEO3 = 0.333333333333333333333333333333;\nvar ONEO4 = 0.25;\nvar ONEO5 = 0.2;\nvar ONEO6 = 0.166666666666666666666666666667;\nvar ONEO12 = 0.0833333333333333333333333333333;\nvar ONEO24 = 0.0416666666666666666666666666667;\n\n// Coefficient workspace:\nvar CK = [ 0.0, 0.0, 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Computes `x` in the equations `P(a,xr) = p` and `Q(a,xr) = q`, where `a` is a positive parameter and `p` and `q` satisfy `p+q = 1`.\n*\n* ## Notes\n*\n* -   The equation is inverted with `min(p,q)`.\n*\n* @private\n* @param {number} a - scale value of incomplete gamma function\n* @param {Probability} p - probability value\n* @param {Probability} q - probability value\n* @returns {number} solution of the equations `P(a,xr) = p` and `Q(a,xr) = q` where `a` is a positive parameter\n*/\nfunction compute( a, p, q ) {\n\tvar ap1inv;\n\tvar invfp;\n\tvar lgama;\n\tvar pcase;\n\tvar porq;\n\tvar ainv;\n\tvar logr;\n\tvar ap22;\n\tvar ap14;\n\tvar ap13;\n\tvar ap12;\n\tvar vgam;\n\tvar vmin;\n\tvar xini;\n\tvar ap1;\n\tvar ap2;\n\tvar ap3;\n\tvar eta;\n\tvar p6;\n\tvar p5;\n\tvar x0;\n\tvar a2;\n\tvar L2;\n\tvar L3;\n\tvar L4;\n\tvar b2;\n\tvar b3;\n\tvar p3;\n\tvar a4;\n\tvar fp;\n\tvar p4;\n\tvar p2;\n\tvar a3;\n\tvar xr;\n\tvar ck;\n\tvar b;\n\tvar L;\n\tvar i;\n\tvar k;\n\tvar m;\n\tvar r;\n\tvar s;\n\tvar t;\n\tvar y;\n\n\tif ( p < HALF ) {\n\t\tpcase = true;\n\t\tporq = p;\n\t\ts = -1.0;\n\t} else {\n\t\tpcase = false;\n\t\tporq = q;\n\t\ts = 1.0;\n\t}\n\tk = 0;\n\tif ( abs( a-1.0 ) < 1.0e-4 ) {\n\t\tm = 0;\n\t\tif ( pcase ) {\n\t\t\tif ( p < 1.0e-3 ) {\n\t\t\t\tp2 = p * p;\n\t\t\t\tp3 = p2 * p;\n\t\t\t\tp4 = p3 * p;\n\t\t\t\tp5 = p4 * p;\n\t\t\t\tp6 = p5 * p;\n\t\t\t\tx0 = p + ( p2*HALF ) + ( p3*(ONEO3) ) + ( p4*ONEO4 ) + ( p5*ONEO5 ) + ( p6*(ONEO6) ); // eslint-disable-line max-len\n\t\t\t} else {\n\t\t\t\tx0 = -ln( 1.0-p );\n\t\t\t}\n\t\t} else {\n\t\t\tx0 = -ln( q );\n\t\t}\n\t\tif ( a === 1.0 ) {\n\t\t\tk = 2;\n\t\t\txr = x0;\n\t\t} else {\n\t\t\tlgama = gammaln( a );\n\t\t\tk = 1;\n\t\t}\n\t}\n\tif ( q < 1.0e-30 && a < HALF ) {\n\t\tm = 0;\n\t\tx0 = -ln( q*gamma(a) ) + ( ( a-1.0 ) * ln( -ln( q*gamma(a) ) ));\n\t\tk = 1;\n\t\tlgama = gammaln( a );\n\t}\n\tif ( a > 1.0 && a < 500.0 && p < 1.0e-80 ) {\n\t\tm = 0;\n\t\tainv = 1.0 / a;\n\t\tap1inv = 1.0 / ( a+1.0 );\n\t\tx0 = ( gammaln( a+1.0 ) + ln( p ) ) * ainv;\n\t\tx0 = exp( x0 );\n\t\txini = x0;\n\t\tfor ( i = 0; i < 10; i++ ) {\n\t\t\tx0 = xini * exp( x0*ainv ) * pow( 1.0-( x0*ap1inv ), ainv );\n\t\t}\n\t\tk = 1;\n\t\tlgama = gammaln( a );\n\t}\n\n\tlogr = (1.0/a) * ( ln(p) + gammaln( a+1.0 ) );\n\tif ( ( logr < ln( ONEO5 * ( 1.0+a ) ) ) && ( k === 0 ) ) {\n\t\tr = exp( logr );\n\t\tm = 0;\n\t\ta2 = a * a;\n\t\ta3 = a2 * a;\n\t\ta4 = a3 * a;\n\t\tap1 = a + 1.0;\n\t\tap12 = ap1 * ap1;\n\t\tap13 = ap1 * ap12;\n\t\tap14 = ap12 * ap12;\n\t\tap2 = a + 2.0;\n\t\tap22 = ap2 * ap2;\n\t\tap3 = a + 3.0;\n\t\tCK[ 0 ] = 1.0;\n\t\tCK[ 1 ] = 1.0 / ap1;\n\t\tCK[ 2 ] = HALF * ( ( 3.0*a ) + 5.0 ) / ( ap12*ap2 );\n\t\tCK[ 3 ] = ONEO3 * ( 31.0 + (8.0*a2) + (33.0*a) ) / ( ap13*ap2*ap3 );\n\t\tCK[ 4 ] = ONEO24 * ( 2888.0 + (1179.0*a3) + (125.0*a4) + (3971.0*a2) + (5661.0*a) ) / ( ap14*ap22*ap3*( a+4.0 ) ); // eslint-disable-line max-len\n\t\tx0 = r * evalpoly( CK, r );\n\t\tlgama = gammaln( a );\n\t\tk = 1;\n\t}\n\tif ( ( a < 10.0 ) && ( k === 0 ) ) {\n\t\tvgam = sqrt( a ) / ( gamstar(a)*SQRT_TWO_PI );\n\t\tvmin = min( 0.02, vgam );\n\t\tif ( q < vmin ) {\n\t\t\tm = 0;\n\t\t\tb = 1.0 - a;\n\t\t\tb2 = b * b;\n\t\t\tb3 = b2 * b;\n\t\t\teta = sqrt( -2.0/a * ln( q/vgam ) );\n\t\t\tx0 = a * lambdaeta( eta );\n\t\t\tL = ln( x0 );\n\t\t\tif ( x0 > 5.0 ) {\n\t\t\t\tL2 = L * L;\n\t\t\t\tL3 = L2 * L;\n\t\t\t\tL4 = L3 * L;\n\t\t\t\tr = 1.0 / x0;\n\t\t\t\tCK[ 0 ] = L - 1.0;\n\t\t\t\tCK[ 1 ] = ( (3.0*b) - (2.0*b*L) + L2 - ( 2.0*L ) + 2.0 ) * HALF;\n\t\t\t\tCK[ 2 ] =( (24.0*b*L) - (11.0*b2) - (24.0*b) - (6.0*L2) + (12.0*L) - 12.0 - (9.0*b*L2) + (6.0*b2*L) + (2.0*L3) ) * ONEO6; // eslint-disable-line max-len\n\t\t\t\tCK[ 3 ] = ( (-12.0*b3*L) + (8.04*b*L2) - (114.0*b2*L) + (72.0+(36.0*L2)) + (((3.0*L4)-(72.0*L)+162.0) * (b-(168.0*b*L))) - ((12.0*L3)+(25.0*b3)) - ( (22.0*b*L3)+(36.0*b2*L2)+(120.0*b2) ) ) * ONEO12; // eslint-disable-line max-len\n\t\t\t\tCK[ 4 ] = 0.0;\n\t\t\t\tx0 = x0 - L + ( b*r*evalpoly( CK, r ) );\n\t\t\t} else {\n\t\t\t\tr = 1.0 / x0;\n\t\t\t\tL2 = L * L;\n\t\t\t\tck = L - 1.0;\n\t\t\t\tt = L - (b*r*ck);\n\t\t\t\tif ( t < x0 ) {\n\t\t\t\t\tx0 -= t;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlgama = gammaln( a );\n\t\t\tk = 1;\n\t\t}\n\t}\n\tif ( ( abs( porq-HALF ) < 1.0e-5 ) && ( k === 0 ) ) {\n\t\tm = 0;\n\t\tainv = 1.0 / a;\n\t\tx0 = a - ONEO3 + ( ( 0.0197530864197530864197530864198 +\n\t\t\t( 0.00721144424848128551832255535959*ainv ) ) * ainv );\n\t\tlgama = gammaln( a );\n\t\tk = 1;\n\t}\n\tif ( ( a < 1.0 ) && ( k === 0 ) ) {\n\t\tm = 0;\n\t\tif (pcase) {\n\t\t\tx0 = exp( (1.0/a) * ( ln(porq) + gammaln(a+1.0) ) );\n\t\t} else {\n\t\t\tx0 = exp( (1.0/a) * ( ln(1.0-porq) + gammaln(a+1.0) ) );\n\t\t}\n\t\tlgama = gammaln( a );\n\t\tk = 1;\n\t}\n\tif ( k === 0 ) {\n\t\tm = 1;\n\t\tainv = 1.0 / a;\n\t\tr = erfcinv( 2.0 * porq );\n\t\teta = s * r / sqrt( a*HALF );\n\t\tif ( r < MAX_FLOAT32 ) {\n\t\t\teta += ( eps1(eta) + ( (eps2(eta)+(eps3(eta)*ainv))*ainv ) ) * ainv;\n\t\t\tx0 = a * lambdaeta(eta);\n\t\t\ty = eta;\n\t\t\tfp = -sqrt( a/TWO_PI ) * exp( -HALF*a*y*y ) / ( gamstar(a) );\n\t\t\tinvfp = 1.0 / fp;\n\t\t} else {\n\t\t\tdebug( 'Warning: Overflow problems in one or more steps of the computation.' );\n\t\t\treturn NaN;\n\t\t}\n\t}\n\tif ( k < 2 ) {\n\t\txr = higherNewton( x0, a, m, p, q, lgama, invfp, pcase );\n\t}\n\treturn xr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = compute;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar gammainc = require( '@stdlib/math/base/special/gammainc' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar MAX_FLOAT32 = require( '@stdlib/constants/math/float32-max' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'gammaincinv:higher_newton' );\n\n\n// MAIN //\n\n/**\n* Implementation of the high order Newton-like method.\n*\n* @private\n* @param {number} x0 - initial value\n* @param {number} a - scale parameter\n* @param {number} m - indicator\n* @param {Probability} p - probability value\n* @param {Probability} q - probability value\n* @param {number} lgama - logarithm of scale parameter\n* @param {number} invfp - one over `fp`\n* @param {boolean} pcase - boolean indicating whether p < 0.5\n* @returns {number} function value of the inverse\n*/\nfunction higherNewton( x0, a, m, p, q, lgama, invfp, pcase ) {\n\tvar dlnr;\n\tvar xini;\n\tvar ck0;\n\tvar ck1;\n\tvar ck2;\n\tvar a2;\n\tvar x2;\n\tvar px;\n\tvar qx;\n\tvar xr;\n\tvar t;\n\tvar n;\n\tvar r;\n\tvar x;\n\n\tx = x0;\n\tt = 1;\n\tn = 1;\n\ta2 = a * a;\n\txini = x0;\n\tdo {\n\t\tx = x0;\n\t\tx2 = x * x;\n\t\tif ( m === 0 ) {\n\t\t\tdlnr = ( ( 1.0-a ) * ln( x ) ) + x + lgama;\n\t\t\tif ( dlnr > ln( MAX_FLOAT32 ) ) {\n\t\t\t\tdebug( 'Warning: overflow problems in one or more steps of the computation. The initial approximation to the root is returned.' );\n\t\t\t\treturn xini;\n\t\t\t}\n\t\t\tr = exp( dlnr );\n\t\t} else {\n\t\t\tr = -invfp * x;\n\t\t}\n\t\tif ( pcase ) {\n\t\t\t// Call: gammainc( x, s[, regularized = true ][, upper = false ] )\n\t\t\tpx = gammainc( x, a, true, false );\n\t\t\tck0 = -r * ( px - p );\n\t\t} else {\n\t\t\t// Call: gammainc( x, s[, regularized = true ][, upper = true ] )\n\t\t\tqx = gammainc( x, a, true, true );\n\t\t\tck0 = r * ( qx - q );\n\t\t}\n\t\tr = ck0;\n\t\tif ( ( p > 1e-120 ) || ( n > 1 ) ) {\n\t\t\tck1 = 0.5 * ( x - a + 1.0 ) / x;\n\t\t\tck2 = ( (2*x2) - (4*x*a) + (4*x) + (2*a2) - (3*a) + 1 ) / x2;\n\t\t\tck2 /= 6.0;\n\t\t\tx0 = x + ( r * ( 1.0 + ( r * ( ck1 + (r*ck2) ) ) ) );\n\t\t} else {\n\t\t\tx0 = x + r;\n\t\t}\n\t\tt = abs( ( x/x0 ) - 1.0 );\n\t\tn += 1;\n\t\tx = x0;\n\t\tif ( x < 0 ) {\n\t\t\tx = xini;\n\t\t\tn = 100;\n\t\t}\n\t} while ( ( ( t > 2e-14 ) && ( n < 35 ) ) );\n\tif ( ( t > 2e-14 ) || ( n > 99 ) ) {\n\t\tdebug( 'Warning: the number of iterations in the Newton method reached the upper limit N=35. The last value obtained for the root is given as output.' );\n\t}\n\txr = x || 0;\n\treturn xr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = higherNewton;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0;\n\t}\n\treturn 0.0 + (x * (1.0 + (x * (1.0 + (x * (1.5 + (x * (2.6666666666666665 + (x * (5.208333333333333 + (x * 10.8))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn 1.0 + (x * (1.0 + (x * (0.3333333333333333 + (x * (0.027777777777777776 + (x * (-0.003703703703703704 + (x * (0.0002314814814814815 + (x * 0.00005878894767783657))))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exp = require( '@stdlib/math/base/special/exp' );\nvar gamma = require( '@stdlib/math/base/special/gamma' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar FLOAT32_MAX = require( '@stdlib/constants/math/float32-max' );\nvar SQRT_TWO_PI = require( '@stdlib/constants/math/float64-sqrt-two-pi' );\nvar stirling = require( './stirling.js' );\n\n\n// MAIN //\n\n/**\n* Computes the regulated gamma function.\n*\n* @private\n* @param {number} x - input value\n* @returns {number} function value\n*/\nfunction gamstar( x ) {\n\tif ( x >= 3.0 ) {\n\t\treturn exp( stirling(x) );\n\t}\n\tif ( x > 0.0 ) {\n\t\treturn gamma(x) / ( exp( -x + ( ( x-0.5 ) * ln(x) ) ) * SQRT_TWO_PI );\n\t}\n\t// Case: x <= 0.0\n\treturn FLOAT32_MAX;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gamstar;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaln = require( '@stdlib/math/base/special/gammaln' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar LN_SQRT_TWO_PI = require( '@stdlib/constants/math/float64-ln-sqrt-two-pi' );\nvar SMALLEST_FLOAT32 = require( '@stdlib/constants/math/float32-smallest-normal' );\nvar MAX_FLOAT32 = require( '@stdlib/constants/math/float32-max' );\nvar chepolsum = require( './chepolsum.js' );\nvar polyvalC = require( './polyval_c.js' );\nvar polyvalD = require( './polyval_d.js' );\n\n\n// VARIABLES //\n\nvar C6 = 0.30865217988013567769;\n\n\n// MAIN //\n\n/**\n* Computes the Stirling series corresponding to asymptotic series for the logarithm of the gamma function.\n*\n* ```tex\n* \\frac{1}{12x}-\\frac{1}{360x^3}\\ldots; x \\ge 3\n* ```\n*\n* @private\n* @param {number} x - input value\n* @returns {number} function value\n*/\nfunction stirling( x ) {\n\tvar z;\n\tif ( x < SMALLEST_FLOAT32 ) {\n\t\treturn MAX_FLOAT32;\n\t}\n\tif ( x < 1.0 ) {\n\t\treturn gammaln( x+1.0 ) - ( (x+0.5) * ln(x) ) + x - LN_SQRT_TWO_PI;\n\t}\n\tif ( x < 2.0 ) {\n\t\treturn gammaln( x ) - ( (x-0.5) * ln(x) ) + x - LN_SQRT_TWO_PI;\n\t}\n\tif ( x < 3.0 ) {\n\t\treturn gammaln( x-1.0 ) - ( (x-0.5) * ln(x) ) + x - LN_SQRT_TWO_PI + ln( x-1.0 ); // eslint-disable-line max-len\n\t}\n\tif ( x < 12.0 ) {\n\t\tz = ( 18.0/( x*x ) ) - 1.0;\n\t\treturn chepolsum( 17, z ) / ( 12.0*x );\n\t}\n\tz = 1.0 / ( x * x );\n\tif ( x < 1000.0 ) {\n\t\treturn polyvalC( z ) / ( C6+z ) / x;\n\t}\n\treturn polyvalD( z ) / x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stirling;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of the square root of `2π`.\n*\n* @module @stdlib/constants/math/float64-ln-sqrt-two-pi\n* @type {number}\n*\n* @example\n* var LN_SQRT_TWO_PI = require( '@stdlib/constants/math/float64-ln-sqrt-two-pi' );\n* // returns 0.9189385332046728\n*/\n\n\n// MAIN //\n\n/**\n* Natural logarithm of the square root of `2π`.\n*\n* ```tex\n* \\ln \\sqrt{2\\pi}\n* ```\n*\n* @constant\n* @type {number}\n* @default 0.9189385332046728\n*/\nvar LN_SQRT_TWO_PI = 9.18938533204672741780329736405617639861397473637783412817151540482765695927260397694743298635954197622005646625e-01; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nmodule.exports = LN_SQRT_TWO_PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\n// Chebyshev polynomial coefficients...\nvar A = [\n\t1.996379051590076518221,\n\t-0.17971032528832887213e-2,\n\t0.131292857963846713e-4,\n\t-0.2340875228178749e-6,\n\t0.72291210671127e-8,\n\t-0.3280997607821e-9,\n\t0.198750709010e-10,\n\t-0.15092141830e-11,\n\t0.1375340084e-12,\n\t-0.145728923e-13,\n\t0.17532367e-14,\n\t-0.2351465e-15,\n\t0.346551e-16,\n\t-0.55471e-17,\n\t0.9548e-18,\n\t-0.1748e-18,\n\t0.332e-19,\n\t-0.58e-20\n];\n\n\n// MAIN //\n\n/**\n* Computes the sum of a Chebyshev polynomial.\n*\n* @private\n* @param {PositiveInteger} n - degree of polynomial\n* @param {number} t - input value\n* @returns {number} Chebyshev sum\n*/\nfunction chepolsum( n, t ) {\n\tvar tt;\n\tvar u0;\n\tvar u1;\n\tvar u2;\n\tvar k;\n\n\tu0 = 0.0;\n\tu1 = 0.0;\n\ttt = t + t;\n\tk = n;\n\tdo {\n\t\tu2 = u1;\n\t\tu1 = u0;\n\t\tu0 = ( tt*u1 ) - u2 + A[ k ];\n\t\tk -= 1;\n\t} while ( k >= 0 );\n\treturn ( u0-u2 ) / 2.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = chepolsum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.025721014990011306;\n\t}\n\treturn 0.025721014990011306 + (x * (0.08247596616699963 + (x * (-0.0025328157302663564 + (x * (0.0006099292666946337 + (x * (-0.00033543297638406 + (x * 0.000250505279903))))))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.08333333333333333;\n\t}\n\treturn 0.08333333333333333 + (x * (-0.002777777777777778 + (x * (0.0007936507936507937 + (x * -0.0005952380952380953))))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar lambdaeta = require( './lambdaeta.js' );\nvar rateval = require( './rational_ak0bk0.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the `eps1` function.\n*\n* @private\n* @param {number} eta - eta value\n* @returns {number} function value\n*/\nfunction eps1( eta ) {\n\tvar la;\n\tif ( abs( eta ) < 1.0 ) {\n\t\treturn rateval( eta );\n\t}\n\tla = lambdaeta( eta );\n\treturn ln( eta / ( la - 1.0 ) ) / eta;\n}\n\n\n// EXPORTS //\n\nmodule.exports = eps1;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.3333333333438;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.3333333333438 + (x * (-0.2070740359969 + (x * (-0.05041806657154 + (x * (-0.004923635739372 + (x * -0.00004293658292782))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.7045554412463 + (x * (0.2118190062224 + (x * (0.03048648397436 + (x * 0.001605037988091))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -0.00004293658292782 + (x * (-0.004923635739372 + (x * (-0.05041806657154 + (x * (-0.2070740359969 + (x * -0.3333333333438))))))); // eslint-disable-line max-len\n\t\ts2 = 0.001605037988091 + (x * (0.03048648397436 + (x * (0.2118190062224 + (x * (0.7045554412463 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar rateval1 = require( './rational_ak1bk1.js' );\nvar rateval2 = require( './rational_ak2bk2.js' );\nvar rateval3 = require( './rational_ak3bk3.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the `eps2` function.\n*\n* @private\n* @param {number} eta - eta value\n* @returns {number} function value\n*/\nfunction eps2( eta ) {\n\tvar lnmeta;\n\tvar x;\n\tif ( eta < -5.0 ) {\n\t\tx = eta * eta;\n\t\tlnmeta = ln( -eta );\n\t\treturn ( 12.0 - x - ( 6.0*( lnmeta*lnmeta ) ) ) / ( 12.0*x*eta );\n\t}\n\tif ( eta < -2.0 ) {\n\t\treturn rateval1( eta );\n\t}\n\tif ( eta < 2.0 ) {\n\t\treturn rateval2( eta );\n\t}\n\tif ( eta < 1000.0 ) {\n\t\tx = 1.0 / eta;\n\t\treturn rateval3( eta ) / ( -12.0*eta );\n\t}\n\treturn -1.0 / ( 12.0 * eta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = eps2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0172847633523;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0172847633523 + (x * (-0.0159372646475 + (x * (-0.00464910887221 + (x * (-0.00060683488776 + (x * -0.00000614830384279))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.764050615669 + (x * (0.297143406325 + (x * (0.0579490176079 + (x * 0.00574558524851))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -0.00000614830384279 + (x * (-0.00060683488776 + (x * (-0.00464910887221 + (x * (-0.0159372646475 + (x * -0.0172847633523))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00574558524851 + (x * (0.0579490176079 + (x * (0.297143406325 + (x * (0.764050615669 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0172839517431;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0172839517431 + (x * (-0.0146362417966 + (x * (-0.00357406772616 + (x * (-0.000391032032692 + (x * 0.00000249634036069))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.690560400696 + (x * (0.249962384741 + (x * (0.0443843438769 + (x * 0.00424073217211))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.00000249634036069 + (x * (-0.000391032032692 + (x * (-0.00357406772616 + (x * (-0.0146362417966 + (x * -0.0172839517431))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00424073217211 + (x * (0.0443843438769 + (x * (0.249962384741 + (x * (0.690560400696 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.99994466948;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.99994466948 + (x * (104.649839762 + (x * (857.204033806 + (x * (731.901559577 + (x * 45.5174411671))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (104.526456943 + (x * (823.313447808 + (x * (3119.93802124 + (x * 3970.03311219))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 45.5174411671 + (x * (731.901559577 + (x * (857.204033806 + (x * (104.649839762 + (x * 0.99994466948))))))); // eslint-disable-line max-len\n\t\ts2 = 3970.03311219 + (x * (3119.93802124 + (x * (823.313447808 + (x * (104.526456943 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ln = require( '@stdlib/math/base/special/ln' );\nvar rational1 = require( './rational_ak4bk4.js' );\nvar rational2 = require( './rational_ak5bk5.js' );\nvar rational3 = require( './rational_ak6bk6.js' );\nvar rational4 = require( './rational_ak7bk7.js' );\nvar rational5 = require( './rational_ak8bk8.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the `eps3` function.\n*\n* @private\n* @param {number} eta - eta value\n* @returns {number} function value\n*/\nfunction eps3( eta ) {\n\tvar x;\n\tvar y;\n\n\tif ( eta < -8.0 ) {\n\t\tx = eta * eta;\n\t\ty = ln( -eta ) / eta;\n\t\treturn ( -30.0 + ( eta*y*( (6.0*x*y*y)-12.0+x ) ) ) / ( 12.0*eta*x*x );\n\t}\n\tif ( eta < -4.0 ) {\n\t\treturn rational1( eta ) / ( eta*eta );\n\t}\n\tif ( eta < -2.0 ) {\n\t\treturn rational2( eta );\n\t}\n\tif ( eta < 2.0 ) {\n\t\treturn rational3( eta );\n\t}\n\tif ( eta < 10.0 ) {\n\t\tx = 1.0 / eta;\n\t\treturn rational4( x ) / ( eta*eta );\n\t}\n\tif ( eta < 100.0 ) {\n\t\tx = 1.0 / eta;\n\t\treturn rational5( x ) / ( eta*eta );\n\t}\n\treturn -ln( eta ) / ( 12.0*eta*eta*eta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = eps3;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.0495346498136;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.0495346498136 + (x * (0.0299521337141 + (x * (0.00688296911516 + (x * (0.000512634846317 + (x * -0.0000201411722031))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.759803615283 + (x * (0.261547111595 + (x * (0.0464854522477 + (x * 0.00403751193496))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -0.0000201411722031 + (x * (0.000512634846317 + (x * (0.00688296911516 + (x * (0.0299521337141 + (x * 0.0495346498136))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00403751193496 + (x * (0.0464854522477 + (x * (0.261547111595 + (x * (0.759803615283 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.00452313583942;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.00452313583942 + (x * (0.00120744920113 + (x * (-0.0000789724156582 + (x * (-0.0000504476066942 + (x * -0.00000535770949796))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.912203410349 + (x * (0.405368773071 + (x * (0.0901638932349 + (x * 0.00948935714996))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -0.00000535770949796 + (x * (-0.0000504476066942 + (x * (-0.0000789724156582 + (x * (0.00120744920113 + (x * 0.00452313583942))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00948935714996 + (x * (0.0901638932349 + (x * (0.405368773071 + (x * (0.912203410349 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.00439937562904;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.00439937562904 + (x * (0.000487225670639 + (x * (-0.000128470657374 + (x * (0.00000529110969589 + (x * 1.5716677175e-7))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.794435257415 + (x * (0.333094721709 + (x * (0.0703527806143 + (x * 0.00806110846078))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 1.5716677175e-7 + (x * (0.00000529110969589 + (x * (-0.000128470657374 + (x * (0.000487225670639 + (x * 0.00439937562904))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00806110846078 + (x * (0.0703527806143 + (x * (0.333094721709 + (x * (0.794435257415 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.0011481191232;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.0011481191232 + (x * (-0.112850923276 + (x * (1.51623048511 + (x * (-0.218472031183 + (x * 0.0730002451555))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (14.2482206905 + (x * (69.7360396285 + (x * (218.938950816 + (x * 277.067027185))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0730002451555 + (x * (-0.218472031183 + (x * (1.51623048511 + (x * (-0.112850923276 + (x * -0.0011481191232))))))); // eslint-disable-line max-len\n\t\ts2 = 277.067027185 + (x * (218.938950816 + (x * (69.7360396285 + (x * (14.2482206905 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.000145727889667;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.000145727889667 + (x * (-0.290806748131 + (x * (-13.308504545 + (x * (199.722374056 + (x * -11.4311378756))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (139.612587808 + (x * (2189.01116348 + (x * (7115.24019009 + (x * 45574.6081453))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = -11.4311378756 + (x * (199.722374056 + (x * (-13.308504545 + (x * (-0.290806748131 + (x * -0.000145727889667))))))); // eslint-disable-line max-len\n\t\ts2 = 45574.6081453 + (x * (7115.24019009 + (x * (2189.01116348 + (x * (139.612587808 + (x * 1.0))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive double-precision floating-point subnormal number.\n*\n* @module @stdlib/constants/math/float64-smallest-subnormal\n* @type {number}\n*\n* @example\n* var FLOAT64_SMALLEST_SUBNORMAL = require( '@stdlib/constants/math/float64-smallest-subnormal' );\n* // returns 4.940656458412465e-324\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive double-precision floating-point subnormal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1} 2^{52}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000000 00000000000000000000 00000000000000000000000000000001\n* ```\n*\n* @constant\n* @type {number}\n* @default 4.940656458412465e-324\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_SMALLEST_SUBNORMAL = 4.940656458412465e-324;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_SMALLEST_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_62_0/boost/math/tools/roots.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar ldexp = require( '@stdlib/math/base/special/ldexp' );\nvar sign = require( '@stdlib/math/base/special/signum' );\nvar max = require( '@stdlib/math/base/special/max' );\nvar MAX_VALUE = require( '@stdlib/constants/math/float64-max' );\n\n\n// MAIN //\n\n/**\n* Performs root finding via third order Halley iteration.\n*\n* @private\n* @param {Array} fun - array of function and its first two derivatives\n* @param {number} guess - initial starting value\n* @param {number} minimum - minimum possible value for the result, used as initial lower bracket\n* @param {number} maximum - maximum possible value for the result, used as initial upper bracket\n* @param {PositiveInteger} digits - desired number of binary digits\n* @param {PositiveInteger} maxIter - maximum number of iterations\n* @returns {number} function value\n*/\nfunction halleyIterate( fun, guess, minimum, maximum, digits, maxIter ) {\n\tvar convergence;\n\tvar outOfBounds;\n\tvar delta1;\n\tvar delta2;\n\tvar factor;\n\tvar result;\n\tvar f0Last;\n\tvar count;\n\tvar delta;\n\tvar denom;\n\tvar diff;\n\tvar num;\n\tvar res;\n\tvar f0;\n\tvar f1;\n\tvar f2;\n\n\tf0 = 0.0;\n\toutOfBounds = false;\n\tresult = guess;\n\tfactor = ldexp( 1.0, 1.0-digits );\n\tdelta = max( 10000000*guess, 10000000 );  // Arbitrarily large delta...\n\tf0Last = 0;\n\tdelta1 = delta;\n\tdelta2 = delta;\n\n\tcount = maxIter;\n\tdo {\n\t\tf0Last = f0;\n\t\tdelta2 = delta1;\n\t\tdelta1 = delta;\n\t\tres = fun( result);\n\t\tf0 = res[ 0 ];\n\t\tf1 = res[ 1 ];\n\t\tf2 = res[ 2 ];\n\t\tcount -= 1;\n\n\t\tif ( f0 === 0.0 ) {\n\t\t\tbreak;\n\t\t}\n\t\tif ( f1 === 0.0 ) {\n\t\t\t// Oops zero derivative!!!\n\t\t\tif ( f0Last === 0.0 ) {\n\t\t\t\t// Must be the first iteration, pretend that we had a previous one at either min or max:\n\t\t\t\tif ( result === minimum ) {\n\t\t\t\t\tguess = maximum;\n\t\t\t\t} else {\n\t\t\t\t\tguess = minimum;\n\t\t\t\t}\n\t\t\t\tf0Last = fun( guess );\n\t\t\t\tdelta = guess - result;\n\t\t\t}\n\t\t\tif ( sign( f0Last ) * sign( f0 ) < 0 ) {\n\t\t\t\t// We've crossed over so move in opposite direction to last step:\n\t\t\t\tif ( delta < 0 ) {\n\t\t\t\t\tdelta = ( result-minimum ) / 2.0;\n\t\t\t\t} else {\n\t\t\t\t\tdelta = ( result-maximum ) / 2.0;\n\t\t\t\t}\n\t\t\t// Move in same direction as last step:\n\t\t\t} else if ( delta < 0 ) {\n\t\t\t\tdelta = (result-maximum) / 2.0;\n\t\t\t} else {\n\t\t\t\tdelta = (result-minimum) / 2.0;\n\t\t\t}\n\t\t} else if ( f2 === 0.0 ) {\n\t\t\tdelta = f0 / f1;\n\t\t} else {\n\t\t\tdenom = 2.0 * f0;\n\t\t\tnum = ( 2.0 * f1 ) - ( f0 * ( f2 / f1 ) );\n\t\t\tif ( abs(num) < 1.0 && ( abs(denom) >= abs(num) * MAX_VALUE ) ) {\n\t\t\t\t// Possible overflow, use Newton step:\n\t\t\t\tdelta = f0 / f1;\n\t\t\t} else {\n\t\t\t\tdelta = denom / num;\n\t\t\t}\n\t\t\tif ( delta * f1 / f0 < 0.0 ) {\n\t\t\t\t// Probably cancellation error, try a Newton step instead:\n\t\t\t\tdelta = f0 / f1;\n\t\t\t\tif ( abs(delta) > 2.0 * abs(guess) ) {\n\t\t\t\t\tdelta = ( (delta < 0.0) ? -1.0 : 1.0 ) * 2.0 * abs( guess );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconvergence = abs( delta / delta2 );\n\t\tif ( convergence > 0.8 && convergence < 2.0 ) {\n\t\t\t// Last two steps haven't converged, try bisection:\n\t\t\tdelta = ( delta > 0.0 ) ? ( result-minimum )/2.0 : ( result-maximum )/2.0; // eslint-disable-line max-len\n\t\t\tif ( abs(delta) > result ) {\n\t\t\t\tdelta = sign( delta ) * result; // Protect against huge jumps!\n\t\t\t}\n\t\t\t// Reset delta2 so that this branch will *not* be taken on the next iteration:\n\t\t\tdelta2 = delta * 3.0;\n\t\t}\n\t\tguess = result;\n\t\tresult -= delta;\n\n\t\t// Check for out of bounds step:\n\t\tif ( result < minimum ) {\n\t\t\tif (\n\t\t\t\tabs(minimum) < 1 &&\n\t\t\t\tabs(result) > 1 &&\n\t\t\t\t( MAX_VALUE / abs(result) < abs(minimum) )\n\t\t\t) {\n\t\t\t\tdiff = 1000.0;\n\t\t\t} else {\n\t\t\t\tdiff = result / minimum;\n\t\t\t}\n\t\t\tif ( abs(diff) < 1.0 ) {\n\t\t\t\tdiff = 1.0 / diff;\n\t\t\t}\n\t\t\tif ( !outOfBounds && diff > 0.0 && diff < 3.0 ) {\n\t\t\t\t// Only a small out of bounds step, let's assume that the result is probably approximately at minimum:\n\t\t\t\tdelta = 0.99 * (guess - minimum);\n\t\t\t\tresult = guess - delta;\n\t\t\t\toutOfBounds = true; // Only take this branch once!\n\t\t\t} else {\n\t\t\t\tdelta = (guess - minimum) / 2.0;\n\t\t\t\tresult = guess - delta;\n\t\t\t\tif ( result === minimum || result === maximum ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( result > maximum ) {\n\t\t\tif (\n\t\t\t\tabs(maximum) < 1.0 &&\n\t\t\t\tabs(result) > 1.0 &&\n\t\t\t\tMAX_VALUE / abs(result) < abs(maximum)\n\t\t\t) {\n\t\t\t\tdiff = 1000.0;\n\t\t\t} else {\n\t\t\t\tdiff = result / maximum;\n\t\t\t}\n\t\t\tif ( abs(diff) < 1.0 ) {\n\t\t\t\tdiff = 1.0 / diff;\n\t\t\t}\n\t\t\tif ( !outOfBounds && diff > 0.0 && diff < 3.0 ) {\n\t\t\t\t// Only a small out of bounds step, let's assume that the result is probably approximately at minimum:\n\t\t\t\tdelta = 0.99 * (guess - maximum);\n\t\t\t\tresult = guess - delta;\n\t\t\t\toutOfBounds = true; // Only take this branch once!\n\t\t\t} else {\n\t\t\t\tdelta = ( guess - maximum ) / 2.0;\n\t\t\t\tresult = guess - delta;\n\t\t\t\tif ( result === minimum || result === maximum ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Update brackets:\n\t\tif ( delta > 0.0 ) {\n\t\t\tmaximum = guess;\n\t\t} else {\n\t\t\tminimum = guess;\n\t\t}\n\t} while ( count && ( abs(result * factor) < abs(delta) ) );\n\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = halleyIterate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_64_0/boost/math/special_functions/detail/ibeta_inverse.hpp}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright John Maddock 2006.\n* Copyright Paul A. Bristow 2007.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar kernelBetainc = require( '@stdlib/math/base/special/kernel-betainc' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar FLOAT64_MAX = require( '@stdlib/constants/math/float64-max' );\nvar FLOAT64_MIN_NORM = require( '@stdlib/constants/math/float64-smallest-normal' );\n\n\n// VARIABLES //\n\nvar out = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Returns a root finding function.\n*\n* @private\n* @param {PositiveNumber} a - function parameter\n* @param {PositiveNumber} b - function parameter\n* @param {Probability} target - probability value\n* @param {boolean} invert - boolean indicating whether to find the roots of the upper or lower incomplete beta function\n* @returns {Function} root finding function\n*/\nfunction ibetaRoots( a, b, target, invert ) {\n\treturn roots;\n\n\t/**\n\t* Calculates roots.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Array} roots\n\t*/\n\tfunction roots( x ) {\n\t\tvar f1;\n\t\tvar f2;\n\t\tvar f;\n\t\tvar y;\n\n\t\ty = 1.0 - x;\n\t\tout = kernelBetainc( out, x, a, b, invert, true );\n\t\tf = out[ 0 ] - target;\n\t\tf1 = out[ 1 ];\n\t\tif ( invert ) {\n\t\t\tf1 = -f1;\n\t\t}\n\t\tif ( y === 0.0 ) {\n\t\t\ty = FLOAT64_MIN_NORM * 64.0;\n\t\t}\n\t\tif ( x === 0.0 ) {\n\t\t\tx = FLOAT64_MIN_NORM * 64.0;\n\t\t}\n\t\tf2 = f1 * ( -(y*a) + ( ( b-2.0 ) * x ) + 1.0 );\n\t\tif ( abs( f2 ) < y * x * FLOAT64_MAX ) {\n\t\t\tf2 /= (y * x);\n\t\t}\n\t\tif ( invert ) {\n\t\t\tf2 = -f2;\n\t\t}\n\t\t// Make sure we don't have a zero derivative:\n\t\tif ( f1 === 0.0 ) {\n\t\t\tf1 = ( ( invert ) ? -1.0 : 1.0 ) * FLOAT64_MIN_NORM * 64.0;\n\t\t}\n\t\treturn [ f, f1, f2 ];\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = ibetaRoots;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar kernelBetaincinv = require( '@stdlib/math/base/special/kernel-betaincinv' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar sign = require( '@stdlib/math/base/special/signum' );\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the quantile function for a Student's t distribution with degrees of freedom `v`.\n*\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {Function} quantile function\n*\n* @example\n* var quantile = factory( 0.5 );\n* var y = quantile( 0.5 );\n* // returns 0.0\n*\n* y = quantile( 0.8 );\n* // returns ~2.513\n*\n* y = quantile( 1.0 );\n* // returns Infinity\n*/\nfunction factory( v ) {\n\tif ( isnan( v ) || v <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn quantile;\n\n\t/**\n\t* Evaluates the quantile function for a Student's t distribution.\n\t*\n\t* @private\n\t* @param {Probability} p - input value\n\t* @returns {number} evaluated quantile function\n\t*\n\t* @example\n\t* var y = quantile( 0.3 );\n\t* // returns <number>\n\t*/\n\tfunction quantile( p ) {\n\t\tvar prob;\n\t\tvar xs;\n\n\t\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tprob = ( p > 0.5 ) ? 1.0 - p : p;\n\t\txs = kernelBetaincinv( v / 2.0, 0.5, 2.0 * prob, 1.0 - (2.0 * prob) );\n\t\treturn sign( p - 0.5 ) * sqrt( v * xs[ 1 ] / xs[ 0 ] );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.difference] - difference in means under H0\n* @param {string} [options.variance] - whether variances are `equal` or `unequal` under H0\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( 'invalid argument. Options argument must be an object. Value: `' + options + '`.' );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( 'invalid option. `alpha` option must be a number primitive. Option: `' + opts.alpha + '`.' );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( 'invalid option. `alternative` option must be a string primitive. Option: `' + opts.alternative + '`.' );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'difference' ) ) {\n\t\topts.difference = options.difference;\n\t\tif ( !isNumber( opts.difference ) || isnan( opts.difference ) ) {\n\t\t\treturn new TypeError( 'invalid option. `difference` option must be a number primitive. Option: `' + opts.difference + '`.' );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'variance' ) ) {\n\t\topts.variance = options.variance;\n\t\tif ( !isString( opts.variance ) ) {\n\t\t\treturn new TypeError( 'invalid option. `variance` option must be a string primitive. Option: `' + opts.variance + '`.' );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the prototype of a provided object.\n*\n* @module @stdlib/utils/get-prototype-of\n*\n* @example\n* var getPrototype = require( '@stdlib/utils/get-prototype-of' );\n*\n* var proto = getPrototype( {} );\n* // returns {}\n*/\n\n// MODULES //\n\nvar getPrototype = require( './get_prototype_of.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getProto = require( './detect.js' );\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar builtin = require( './native.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar getProto = require( './proto.js' );\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' );\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isObject;\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isPrimitive;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isString = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isString, 'isPrimitive', isPrimitive );\nsetReadOnly( isString, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar valueOf = require( './valueof.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isPrimitive;\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isObject;\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isnan = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isnan, 'isPrimitive', isPrimitive );\nsetReadOnly( isnan, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the unbiased variance of an array.\n*\n* @private\n* @param {NumericArray} arr - input array\n* @returns {number} variance\n*/\nfunction variance( arr ) {\n\tvar delta;\n\tvar mean;\n\tvar len;\n\tvar M2;\n\tvar i;\n\tvar x;\n\n\tdelta = 0.0;\n\tmean = 0.0;\n\tM2 = 0.0;\n\tlen = arr.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tx = arr[ i ];\n\t\tdelta = x - mean;\n\t\tmean += delta / (i+1);\n\t\tM2 += delta * ( x - mean );\n\t}\n\treturn M2 / ( i - 1 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = variance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar roundn = require( '@stdlib/math/base/special/roundn' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options has to be simple object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. First argument must be an options object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( 'invalid option. `digits` option must be a positive integer. Option: `' + opts.digits + '`.' );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( 'invalid option. `decision` option must be a boolean primitive. Option: `' + opts.decision + '`.' );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True difference in means is ';\n\tswitch ( this.alternative ) {\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    df: ' + roundn( this.df, -dgts ) + '\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert/is-positive-integer\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isObject;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isPositiveInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a numeric value to the nearest multiple of `10^n`.\n*\n* @module @stdlib/math/base/special/roundn\n*\n* @example\n* var roundn = require( '@stdlib/math/base/special/roundn' );\n*\n* // Round a value to 2 decimal places:\n* var v = roundn( 3.141592653589793, -2 );\n* // returns 3.14\n*\n* // If n = 0, `roundn` behaves like `round`:\n* v = roundn( 3.141592653589793, 0 );\n* // returns 3.0\n*\n* // Round a value to the nearest thousand:\n* v = roundn( 12368.0, 3 );\n* // returns 12000.0\n*/\n\n// MODULES //\n\nvar roundn = require( './roundn.js' );\n\n\n// EXPORTS //\n\nmodule.exports = roundn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar isInfinite = require( '@stdlib/math/base/assert/is-infinite' );\nvar pow = require( '@stdlib/math/base/special/pow' );\nvar abs = require( '@stdlib/math/base/special/abs' );\nvar round = require( '@stdlib/math/base/special/round' );\nvar MAX_SAFE_INTEGER = require( '@stdlib/constants/math/float64-max-safe-integer' );\nvar MAX_EXP = require( '@stdlib/constants/math/float64-max-base10-exponent' );\nvar MIN_EXP = require( '@stdlib/constants/math/float64-min-base10-exponent' );\nvar MIN_EXP_SUBNORMAL = require( '@stdlib/constants/math/float64-min-base10-exponent-subnormal' );\n\n\n// VARIABLES //\n\nvar MAX_INT = MAX_SAFE_INTEGER + 1;\nvar HUGE = 1.0e+308;\n\n\n// MAIN //\n\n/**\n* Rounds a numeric value to the nearest multiple of \\\\(10^n\\\\).\n*\n* ## Method\n*\n* 1.  If \\\\(|x| <= 2^{53}\\\\) and \\\\(|n| <= 308\\\\), we can use the formula\n*\n*     ```tex\n*     \\operatorname{roundn}(x,n) = \\frac{\\operatorname{round}(x \\cdot 10^{-n})}{10^{-n}}\n*     ```\n*\n*     which shifts the decimal to the nearest multiple of \\\\(10^n\\\\), performs a standard \\\\(\\mathrm{round}\\\\) operation, and then shifts the decimal to its original position.\n*\n*     <!-- <note> -->\n*\n*     If \\\\(x \\cdot 10^{-n}\\\\) overflows, \\\\(x\\\\) lacks a sufficient number of decimal digits to have any effect when rounding. Accordingly, the rounded value is \\\\(x\\\\).\n*\n*     <!-- </note> -->\n*\n*     <!-- <note> -->\n*\n*     Note that rescaling \\\\(x\\\\) can result in unexpected behavior. For instance, the result of \\\\(\\operatorname{roundn}(0.2+0.1,-16)\\\\) is \\\\(0.3000000000000001\\\\) and not \\\\(0.3\\\\). While possibly unexpected, this is not a bug. The behavior stems from the fact that most decimal fractions cannot be exactly represented as floating-point numbers. And further, rescaling can lead to slightly different fractional values, which, in turn, affects the result of \\\\(\\mathrm{round}\\\\).\n*\n*     <!-- </note> -->\n*\n* 2.  If \\\\(n > 308\\\\), we recognize that the maximum absolute double-precision floating-point number is \\\\(\\approx 1.8\\mbox{e}308\\\\) and, thus, the result of rounding any possible finite number \\\\(x\\\\) to the nearest \\\\(10^n\\\\) is \\\\(0.0\\\\). To ensure consistent behavior with \\\\(\\operatorname{round}(x)\\\\), the sign of \\\\(x\\\\) is preserved.\n*\n* 3.  If \\\\(n < -324\\\\), \\\\(n\\\\) exceeds the maximum number of possible decimal places (such as with subnormal numbers), and, thus, the rounded value is \\\\(x\\\\).\n*\n* 4.  If \\\\(x > 2^{53}\\\\), \\\\(x\\\\) is **always** an integer (i.e., \\\\(x\\\\) has no decimal digits). If \\\\(n <= 0\\\\), the rounded value is \\\\(x\\\\).\n*\n* 5.  If \\\\(n < -308\\\\), we let \\\\(m = n + 308\\\\) and modify the above formula to avoid overflow.\n*\n*     ```tex\n*     \\operatorname{roundn}(x,n) = \\frac{\\biggl(\\frac{\\operatorname{round}( (x \\cdot 10^{308}) 10^{-m})}{10^{308}}\\biggr)}{10^{-m}}\n*     ```\n*\n*     If overflow occurs, the rounded value is \\\\(x\\\\).\n*\n*\n* ## Special Cases\n*\n* ```tex\n* \\begin{align*}\n* \\operatorname{roundn}(\\mathrm{NaN}, n) &= \\mathrm{NaN} \\\\\n* \\operatorname{roundn}(x, \\mathrm{NaN}) &= \\mathrm{NaN} \\\\\n* \\operatorname{roundn}(x, \\pm\\infty) &= \\mathrm{NaN} \\\\\n* \\operatorname{roundn}(\\pm\\infty, n) &= \\pm\\infty \\\\\n* \\operatorname{roundn}(\\pm 0, n) &= \\pm 0\n* \\end{align*}\n* ```\n*\n* ## Notes\n*\n* 1.  Alternative algorithms:\n*\n*     -   Round by [casting][1] \\\\(x\\\\) to an exponential string.\n*     -   Native Python implementation [1][2] and [2][3].\n*\n* [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n* [2]: https://hg.python.org/releasing/2.7.9/file/tip/Objects/floatobject.c#l1082\n* [3]: https://hg.python.org/releasing/2.7.9/file/tip/Objects/floatobject.c#l1226\n*\n*\n* @param {number} x - input value\n* @param {integer} n - integer power of `10`\n* @returns {number} rounded value\n*\n* @example\n* // Round a value to 2 decimal places:\n* var v = roundn( 3.141592653589793, -2 );\n* // returns 3.14\n*\n* @example\n* // If n = 0, `roundn` behaves like `round`:\n* var v = roundn( 3.141592653589793, 0 );\n* // returns 3.0\n*\n* @example\n* // Round a value to the nearest thousand:\n* var v = roundn( 12368.0, 3 );\n* // returns 12000.0\n*/\nfunction roundn( x, n ) {\n\tvar s;\n\tvar y;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( n ) ||\n\t\tisInfinite( n )\n\t) {\n\t\treturn NaN;\n\t}\n\tif (\n\t\t// Handle infinities...\n\t\tisInfinite( x ) ||\n\n\t\t// Handle +-0...\n\t\tx === 0.0 ||\n\n\t\t// If `n` exceeds the maximum number of feasible decimal places (such as with subnormal numbers), nothing to round...\n\t\tn < MIN_EXP_SUBNORMAL ||\n\n\t\t// If `|x|` is large enough, no decimals to round...\n\t\t( abs( x ) > MAX_INT && n <= 0 )\n\t) {\n\t\treturn x;\n\t}\n\t// The maximum absolute double is ~1.8e308. Accordingly, any possible finite `x` rounded to the nearest >=10^309 is 0.0.\n\tif ( n > MAX_EXP ) {\n\t\treturn 0.0 * x; // preserve the sign (same behavior as round)\n\t}\n\t// If we overflow, return `x`, as the number of digits to the right of the decimal is too small (i.e., `x` is too large / lacks sufficient fractional precision) for there to be any effect when rounding...\n\tif ( n < MIN_EXP ) {\n\t\ts = pow( 10.0, -(n + MAX_EXP) );\n\t\ty = (x*HUGE) * s; // order of operation matters!\n\t\tif ( isInfinite( y ) ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn ( round(y)/HUGE ) / s;\n\t}\n\ts = pow( 10.0, -n );\n\ty = x * s;\n\tif ( isInfinite( y ) ) {\n\t\treturn x;\n\t}\n\treturn round( y ) / s;\n}\n\n\n// EXPORTS //\n\nmodule.exports = roundn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum safe double-precision floating-point integer.\n*\n* @module @stdlib/constants/math/float64-max-safe-integer\n* @type {number}\n*\n* @example\n* var FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants/math/float64-max-safe-integer' );\n* // returns 9007199254740991\n*/\n\n\n// MAIN //\n\n/**\n* Maximum safe double-precision floating-point integer.\n*\n* ## Notes\n*\n* The integer has the value\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n* @see [Safe Integers]{@link http://www.2ality.com/2013/10/safe-integers.html}\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_SAFE_INTEGER = 9007199254740991;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_SAFE_INTEGER;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum base 10 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-max-base10-exponent\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE10_EXPONENT = require( '@stdlib/constants/math/float64-max-base10-exponent' );\n* // returns 308\n*/\n\n\n// MAIN //\n\n/**\n* The maximum base 10 exponent for a double-precision floating-point number.\n*\n* @constant\n* @type {integer32}\n* @default 308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE10_EXPONENT = 308|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE10_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum base 10 exponent for a normal double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-min-base10-exponent\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MIN_BASE10_EXPONENT = require( '@stdlib/constants/math/float64-min-base10-exponent' );\n* // returns -308\n*/\n\n\n// MAIN //\n\n/**\n* The minimum base 10 exponent for a normal double-precision floating-point number.\n*\n* ```text\n* 2^-1022 = 2.2250738585072014e-308 => -308\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE10_EXPONENT = -308|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_BASE10_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum base 10 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants/math/float64-min-base10-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL = require( '@stdlib/constants/math/float64-min-base10-exponent-subnormal' );\n* // returns -324\n*/\n\n\n// MAIN //\n\n/**\n* The minimum base 10 exponent for a subnormal double-precision floating-point number.\n*\n* @constant\n* @type {integer32}\n* @default -324\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL = -324|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the arithmetic mean of a numeric array.\n*\n* @private\n* @param {NumericArray} arr - input array\n* @returns {number} arithmetic mean\n*\n* @example\n* var arr = [ 2.0, 6.0, 10.0 ];\n* var out = mean( arr );\n* // returns 6.0\n*/\nfunction mean( arr ) {\n\tvar delta;\n\tvar len;\n\tvar mu;\n\tvar i;\n\n\tlen = arr.length;\n\tmu = 0.0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tdelta = arr[ i ] - mu;\n\t\tmu += delta / (i+1);\n\t}\n\treturn mu;\n}\n\n\n// EXPORTS //\n\nmodule.exports = mean;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","//     Underscore.js 1.9.2\n//     https://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.2';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](https://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export const isBoolean = (value) => typeof value === 'boolean';\n\nexport const isNumber = (value) =>\n  typeof value === 'number' && !Number.isNaN(value);\n\nexport const isString = (value) => typeof value === 'string';\n\nexport const isArray = (value) => Array.isArray(value);\n\nexport const isObject = (value) =>\n  !isArray(value) && typeof value === 'object' && value !== null;\n\nexport const isFunction = (value) => typeof value === 'function';\n\nexport const isEmpty = (payload) =>\n  (isArray(payload) && !payload.length) ||\n  (isObject(payload) && !Object.keys(payload).length);\n\nexport const isBlank = (value) =>\n  value === undefined ||\n  value === null ||\n  isEmpty(value) ||\n  (isString(value) && value.trim() === '') ||\n  Number.isNaN(value);\n","import _defineProperty from\"/home/runner/work/adage-frontend/adage-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/home/runner/work/adage-frontend/adage-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _createForOfIteratorHelper from\"/home/runner/work/adage-frontend/adage-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"/home/runner/work/adage-frontend/adage-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// https://stdlib.io/docs/api/v0.0.90/@stdlib/stats/iter/mean\nimport array2iterator from'@stdlib/array/to-iterator';// https://stdlib.io/docs/api/v0.0.90/@stdlib/stats/iter/mean\nimport itermean from'@stdlib/stats/iter/mean';// https://stdlib.io/docs/api/v0.0.90/@stdlib/stats/base/dists/hypergeometric/cdf\nimport cdf from'@stdlib/stats/base/dists/hypergeometric/cdf';// https://stdlib.io/docs/api/v0.0.90/@stdlib/stats/ttest2\nimport ttest2 from'@stdlib/stats/ttest2';// https://github.com/greenelab/hclust\nimport{clusterData as hclust}from'@greenelab/hclust';// https://github.com/Planeshifter/multtest\nimport{fdr}from'multtest';import{isArray}from'./types';// get mean/average of array\nexport var mean=function mean(array){return itermean(array2iterator(array));};// reference\n// https://en.wikipedia.org/wiki/Hypergeometric_distribution\n// see https://stattrek.com/online-calculator/hypergeometric.aspx\n// the stdlib cdf function calculates P(X <= k), but what we really want is\n// P(X >= k). therefore, provide k-1 as X instead of k to get P(X < k), then\n// k - number of successes in sample\n// K - number of successes in population\n// n - number of items in sample\n// N - number of items in population\n// subtract the result from 1 to get P(X >= k)\nexport var hyperGeometricTest=function hyperGeometricTest(k,K,n,N){return 1-cdf(k-1,N,K,n);};// compare to the equivalent test in R, the fisher test:\n// k <- 1; K <- 5; n <- 10; N <- 50; mat <- matrix(c(k, K-k, n-k, N-K-n+k), nrow=2, ncol=2); print(fisher.test(mat, alternative=\"greater\")$p.value, digits = 20);\n// perform two-sample, unpaired, welch's (student's) t-test and return p value\nexport var ttest=function ttest(array1,array2){return ttest2(array1,array2).pValue;};// calculate enriched signatures\n// adapted from https://github.com/greenelab/adage-server/blob/master/interface/src/app/gene/enriched_signatures.js\nexport var calculateEnrichedSignatures=function calculateEnrichedSignatures(_ref){var selectedGenes=_ref.selectedGenes,geneParticipations=_ref.geneParticipations,geneList=_ref.geneList,signatureList=_ref.signatureList;// if we dont have all we need, exit\nif(!isArray(selectedGenes)||!selectedGenes.length||!isArray(geneParticipations)||!geneParticipations.length||!isArray(geneList)||!geneList.length||!isArray(signatureList)||!signatureList.length)return[];var enrichedSignatures=signatureList// for each signature\n.map(function(signature){var participatingGenes=geneParticipations// get participations that include this signature\n.filter(function(participation){return participation.signature===signature.id;})// get gene id and weight of each of those participations\n.map(function(participation){return{gene:participation.gene,weight:participation.weight};});// of participating genes, get selected ones\nvar selectedParticipatingGenes=participatingGenes.filter(function(_ref2){var gene=_ref2.gene;return selectedGenes.find(function(selected){return selected.id===gene;});})// replace matched gene id with full gene info from selected genes\n.map(function(_ref3){var gene=_ref3.gene,weight=_ref3.weight;return _objectSpread({},selectedGenes.find(function(selected){return selected.id===gene;}),{weight:weight});});// add participating and matched genes to signature\nreturn _objectSpread({},signature,{participatingGenes:participatingGenes,selectedParticipatingGenes:selectedParticipatingGenes});})// remove signatures with no participating genes\n.filter(function(signature){return signature.participatingGenes.length;})// compute p value of enriched signature\n.map(function(signature){// # of all genes in the model\nvar N=geneList.length;// # of genes the user has selected\nvar K=selectedGenes.length;// # of genes participating in the signature\nvar n=signature.participatingGenes.length;// # of selected genes participating in the signature\nvar k=signature.selectedParticipatingGenes.length;var pValue=hyperGeometricTest(k,K,n,N);return _objectSpread({},signature,{pValue:pValue});});// extract p values from enriched signatures into array\nvar pValues=enrichedSignatures.map(function(signature){return signature.pValue;});// correct p values using false discovery rate function from multtest library\nvar correctedPValues=fdr(pValues);// put corrected p values back into enriched signatures\nenrichedSignatures=enrichedSignatures.map(function(enrichedSignature,index){return _objectSpread({},enrichedSignature,{// round decimal point\npValue:correctedPValues[index]});});return enrichedSignatures;};export var clusterData=function clusterData(_ref4){var data=_ref4.data,idKey=_ref4.idKey,valueKey=_ref4.valueKey;// transform\n// [ { id, value }, { id, value }, ... ]\n// to\n// [ { uniqueId, values: [ value, value, ... ] }, ... ]\nvar newData={};var _iterator=_createForOfIteratorHelper(data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _newData$id;var d=_step.value;var id=d[idKey];var value=d[valueKey];if(!newData[id])newData[id]=(_newData$id={},_defineProperty(_newData$id,idKey,id),_defineProperty(_newData$id,valueKey,[]),_newData$id);newData[id][valueKey].push(value);}}catch(err){_iterator.e(err);}finally{_iterator.f();}newData=_toConsumableArray(Object.values(newData));// cluster data using hclust library and give back ordered list of ids\nreturn hclust({data:newData,key:valueKey}).order.map(function(index){return newData[index][idKey];});};// calculate data for volcano plot\n// adapted from https://github.com/greenelab/adage-server/blob/master/interface/src/app/analyze/analysis/sampleBin.js\nexport var calculateVolcanoSignatures=function calculateVolcanoSignatures(_ref5){var signatureList=_ref5.signatureList,activities=_ref5.activities,diamondGroup=_ref5.diamondGroup,spadeGroup=_ref5.spadeGroup;// if we dont have all we need, exit\nif(!isArray(signatureList)||!signatureList.length||!isArray(activities)||!activities.length||!isArray(diamondGroup)||diamondGroup.length<2||!isArray(spadeGroup)||spadeGroup.length<2)return[];// take signature id and sample id, and find value of associated activity\nvar getActivity=function getActivity(signatureId,sampleId){return(activities.find(function(activity){return activity.signature===signatureId&&activity.sample===sampleId;})||{}).value;};// remove any signatures that are not part of activities\nsignatureList=signatureList.filter(function(signature){return activities.find(function(activity){return activity.signature===signature.id;});});// for each signature\nvar volcanoSignatures=signatureList.map(function(signature){// get associated activity for each diamond sample\nvar diamondActivities=diamondGroup.map(function(sampleId){return getActivity(signature.id,sampleId);}).filter(function(activity){return activity;});// get associated activity for each spade sample\nvar spadeActivities=spadeGroup.map(function(sampleId){return getActivity(signature.id,sampleId);}).filter(function(activity){return activity;});// compute difference between diamond and spade activity means\nvar meanDiff=mean(diamondActivities)-mean(spadeActivities);// compute p value of signature based using t test from ttest library\nvar pValue=ttest(diamondActivities,spadeActivities);return _objectSpread({},signature,{diamondActivities:diamondActivities,spadeActivities:spadeActivities,meanDiff:meanDiff,pValue:pValue});});// extract p values from volcano signatures into array\nvar pValues=volcanoSignatures.map(function(signature){return signature.pValue;});// correct p values using false discovery rate function from multtest library\nvar correctedPValues=fdr(pValues);// put corrected p values back into volcano signatures\nvolcanoSignatures=volcanoSignatures.map(function(volcanoSignature,index){return _objectSpread({},volcanoSignature,{// negative log 10 transform and round decimal point\npValue:-Math.log10(correctedPValues[index])});});return volcanoSignatures;};\naddEventListener('message', function (e) {var ref = e.data;var type = ref.type;var method = ref.method;var id = ref.id;var params = ref.params;var f,p;if (type === 'RPC' && method) {if (f = __webpack_exports__[method]) {p = Promise.resolve().then(function () { return f.apply(__webpack_exports__, params); });} else {p = Promise.reject('No such method');}p.then(function (result) {postMessage({type: 'RPC',id: id,result: result});}).catch(function (e) {var error = {message: e};if (e.stack) {error.message = e.message;error.stack = e.stack;error.name = e.name;}postMessage({type: 'RPC',id: id,error: error});});}});postMessage({type: 'RPC',method: 'ready'});","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}